[
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Download & Installation",
    "section": "",
    "text": "The “IRTLib” software is provided for offline use (Windows) and for online use (Docker Container).\n\n\nThe IRTLib software (Editor and Player) for offline use can be obtained and downloaded from the releases section of the repository https://github.com/DIPFtba/IRTlibDeploymentSoftware.\nThe section Releases contains the two archives “TestApp.Editor.Desktop.zip” and “TestApp.Player.Desktop.zip” for download.\n\n\n\n\n\n\nNote\n\n\n\nNote that currently the latest build can be found in the section Preview of the Release-section of the repository.\n\n\nThe editor for offline use will be provided as a ZIP archive (e.g., TestApp.Editor.Desktop.zip) that needs to be extracted. After extracting the editor, the application TestApp.Editor.Desktop.exe can be started on a Windows device.\n\n\n\n\n\n\nWarning\n\n\n\nThe automatically created preview versions of the IRTLib Editor and Player are not signed. A warning message from the operating system must be accepted before the programs can be executed.\n\n\nThe player is also available as a Windows application for offline use, provided as ZIP-archive (e.g., TestApp.Player.Desktop.zip). However, after extracting the player, it requires a published study configuration before the player can be used to collect data. Only after adding content of provided as study configuration of a published study, the executable TestApp.Player.Desktop.exe can be started (either with or without startup parameters).\n\n\n\nThe IRTLib software (editor and player) for online use can be obtained as a docker container. An example is also provided at https://github.com/DIPFtba/IRTlibDeploymentSoftware. To use the docker container, it is suggested to check out the repository on the target device (requiring git) and to run the command ./start.sh inside the folder docker (requiring installed docker and docker compose) to start the software.\nWhen not changed in the file docker-compose.yml, the editor is accessible on port 8002 and the player software is accessible on port 8001."
  },
  {
    "objectID": "installation.html#versions",
    "href": "installation.html#versions",
    "title": "Download & Installation",
    "section": "",
    "text": "The “IRTLib” software is provided for offline use (Windows) and for online use (Docker Container).\n\n\nThe IRTLib software (Editor and Player) for offline use can be obtained and downloaded from the releases section of the repository https://github.com/DIPFtba/IRTlibDeploymentSoftware.\nThe section Releases contains the two archives “TestApp.Editor.Desktop.zip” and “TestApp.Player.Desktop.zip” for download.\n\n\n\n\n\n\nNote\n\n\n\nNote that currently the latest build can be found in the section Preview of the Release-section of the repository.\n\n\nThe editor for offline use will be provided as a ZIP archive (e.g., TestApp.Editor.Desktop.zip) that needs to be extracted. After extracting the editor, the application TestApp.Editor.Desktop.exe can be started on a Windows device.\n\n\n\n\n\n\nWarning\n\n\n\nThe automatically created preview versions of the IRTLib Editor and Player are not signed. A warning message from the operating system must be accepted before the programs can be executed.\n\n\nThe player is also available as a Windows application for offline use, provided as ZIP-archive (e.g., TestApp.Player.Desktop.zip). However, after extracting the player, it requires a published study configuration before the player can be used to collect data. Only after adding content of provided as study configuration of a published study, the executable TestApp.Player.Desktop.exe can be started (either with or without startup parameters).\n\n\n\nThe IRTLib software (editor and player) for online use can be obtained as a docker container. An example is also provided at https://github.com/DIPFtba/IRTlibDeploymentSoftware. To use the docker container, it is suggested to check out the repository on the target device (requiring git) and to run the command ./start.sh inside the folder docker (requiring installed docker and docker compose) to start the software.\nWhen not changed in the file docker-compose.yml, the editor is accessible on port 8002 and the player software is accessible on port 8001."
  },
  {
    "objectID": "preparation-studies.html",
    "href": "preparation-studies.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "::: {.content-visible when-profile=“german”}"
  },
  {
    "objectID": "preparation-studies.html#studienverwaltung",
    "href": "preparation-studies.html#studienverwaltung",
    "title": "Vorbereitung",
    "section": "Studienverwaltung",
    "text": "Studienverwaltung\nNach dem Start des IRTlib-Editors wird die Ansicht Studien angezeigt. In dieser Ansicht ist der erste Schritt zur Vorbereitung einer neuen Konfiguration das Hinzufügen einer neuen Studie:\n\nDie erstellten Studien erscheinen als Karten in der Ansicht Studien. Beachten Sie, dass die Reihenfolge, in der die Studien in der Studienansicht angezeigt werden, keine Rolle spielt. Weitere Konfigurationen einer bestimmten Studie, einschließlich Versionierung und Veröffentlichung, werden innerhalb von Studien verwaltet (d.h. nach dem Öffnen einer Studie zur Bearbeitung durch Klicken auf das Bearbeitungssymbol am unteren rechten Rand der Karte).\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "preparation-studies.html#grundlegende-konfigurationen",
    "href": "preparation-studies.html#grundlegende-konfigurationen",
    "title": "Vorbereitung",
    "section": "Grundlegende Konfigurationen",
    "text": "Grundlegende Konfigurationen\nErstellte Studien, die im IRTlib Editor in der Ansicht Studien angezeigt werden, können zur Bearbeitung geöffnet werden.\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "preparation-studies.html#konfiguration-von-parametern",
    "href": "preparation-studies.html#konfiguration-von-parametern",
    "title": "Vorbereitung",
    "section": "Konfiguration von Parametern",
    "text": "Konfiguration von Parametern\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "preparation-studies.html#study-management",
    "href": "preparation-studies.html#study-management",
    "title": "Vorbereitung",
    "section": "Study Management",
    "text": "Study Management\nAfter starting the IRTlib Editor, the view Studies is displayed. In this view, the first step for preparing a new configuration is to add a new study:\n\nCreated studies appear as cards in the view Studies. Note that the order in which studies are displayed in the Study View is unimportant. Further configurations of a particular study, including versioning and publishing, are managed within studies (i.e., after opening a study for editing by clicking on the edit icon on the bottom right border of the card).\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "preparation-studies.html#basic-configurations",
    "href": "preparation-studies.html#basic-configurations",
    "title": "Vorbereitung",
    "section": "Basic Configurations",
    "text": "Basic Configurations\nCreated studies, shown in the IRTlib Editor in the view Studies, can be opened for editing.\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "preparation-overview.html",
    "href": "preparation-overview.html",
    "title": "Preparation",
    "section": "",
    "text": "Preparing a computer-based assessment based on CBA ItemBuilder items begins with using the IRTlib Editor to create a study configuration. This typically involves the following steps:\n\n\n\n\n\n\nOptional\n\n\n\n\n\n\nPre-requisite: Check the availability of the Runtime. The IRTlib Editor can be used to prepare assessments using CBA ItemBuilder Tasks. Using CBA ItemBuilder Tasks are stored in Project Files require a Runtime (i.e., the files “main..js” and “main..css”) in the version corresponding exactly to the version of the CBA ItemBuilder that was used to generate the items (e.g., 9.9.0). Before using the IRTLib editor, ensure the required Runtime is included or import the runtime files (see here for details).\n\nNote: This step is usually not necessary for the use of CBA ItemBuilder items from version 9.9.\n\n\n\n\nCreate a new “Study”: The IRTlib Editor is used to configure so-called Studies. The version of studies can be tracked in the editor, and studies can be published (i.e., sealed to be used for data collection). To start creating content using the IRTlib Editor, a study must be created first (see here for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that at least one study must be defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nSpecify “Basic Configurations” for the Study (Info): Basic configurations that apply to the content of a prepared study include the study label and description, the login mode, the display configuration, the menu for test administrators and the specification how to continue after completing all content defined in a study (see here for details).\nCreate a new “Survey-Part”: Each study is composed of one or multiple survey parts (see here for details). Parts are considered segments of an assessment that are administered together, like items from a particular domain. Survey parts of type “CBA ItemBuilder” can be used to administer CBA ITemBuilder tasks in a linear sequence or with Blockly-based routing (see Routing Across Survey Parts for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that each study neads at least one test-part defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nConfigure “Basic Settings” for Survey Part (Info): A study part of type “CBA ItemBuilder” is a set of CBA ItemBuilder projects that belong together. Each CBA ItemBuilder project requires at least one Task, but projects with multiple tasks are also supported. If items are administered with a common time limit, test parts allow for assigning tasks to a structure differentiating assessment content presented before a time-restricted section (“instructional items”), after a time-restricted section (“epilogue items”), and items in between with restricted time (“core items”, see here).\nDefine “Core Items” (Items): To finalize the definition of a study-part, the CBA ItemBuilder tasks must be imported in the section “Items”. By default, the sequence of CBA ItemBuilder tasks is assumed to be linear. However, when routing is activated for a study part, Blockly-based routing (see Routing Within Survey Parts for details) can be used to implement various test designs (e.g., multiple booklets, multi-stage testing, etc.)."
  },
  {
    "objectID": "preparation-overview.html#overview-steps-to-use-irtlib-editor-for-study-preparation",
    "href": "preparation-overview.html#overview-steps-to-use-irtlib-editor-for-study-preparation",
    "title": "Preparation",
    "section": "",
    "text": "Preparing a computer-based assessment based on CBA ItemBuilder items begins with using the IRTlib Editor to create a study configuration. This typically involves the following steps:\n\n\n\n\n\n\nOptional\n\n\n\n\n\n\nPre-requisite: Check the availability of the Runtime. The IRTlib Editor can be used to prepare assessments using CBA ItemBuilder Tasks. Using CBA ItemBuilder Tasks are stored in Project Files require a Runtime (i.e., the files “main..js” and “main..css”) in the version corresponding exactly to the version of the CBA ItemBuilder that was used to generate the items (e.g., 9.9.0). Before using the IRTLib editor, ensure the required Runtime is included or import the runtime files (see here for details).\n\nNote: This step is usually not necessary for the use of CBA ItemBuilder items from version 9.9.\n\n\n\n\nCreate a new “Study”: The IRTlib Editor is used to configure so-called Studies. The version of studies can be tracked in the editor, and studies can be published (i.e., sealed to be used for data collection). To start creating content using the IRTlib Editor, a study must be created first (see here for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that at least one study must be defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nSpecify “Basic Configurations” for the Study (Info): Basic configurations that apply to the content of a prepared study include the study label and description, the login mode, the display configuration, the menu for test administrators and the specification how to continue after completing all content defined in a study (see here for details).\nCreate a new “Survey-Part”: Each study is composed of one or multiple survey parts (see here for details). Parts are considered segments of an assessment that are administered together, like items from a particular domain. Survey parts of type “CBA ItemBuilder” can be used to administer CBA ITemBuilder tasks in a linear sequence or with Blockly-based routing (see Routing Across Survey Parts for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that each study neads at least one test-part defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nConfigure “Basic Settings” for Survey Part (Info): A study part of type “CBA ItemBuilder” is a set of CBA ItemBuilder projects that belong together. Each CBA ItemBuilder project requires at least one Task, but projects with multiple tasks are also supported. If items are administered with a common time limit, test parts allow for assigning tasks to a structure differentiating assessment content presented before a time-restricted section (“instructional items”), after a time-restricted section (“epilogue items”), and items in between with restricted time (“core items”, see here).\nDefine “Core Items” (Items): To finalize the definition of a study-part, the CBA ItemBuilder tasks must be imported in the section “Items”. By default, the sequence of CBA ItemBuilder tasks is assumed to be linear. However, when routing is activated for a study part, Blockly-based routing (see Routing Within Survey Parts for details) can be used to implement various test designs (e.g., multiple booklets, multi-stage testing, etc.)."
  },
  {
    "objectID": "github.html",
    "href": "github.html",
    "title": "Github – More",
    "section": "",
    "text": "The IRTlib software is free research software in the sense of open science. It can be used for non-commercial applications.\n\n\n\n\n\nCurrent versions of the IRTlib Software (Windows und Docker):\n\n\n\n\n\nThe IRTlib software allows the administration of assessment content created with the CBA ItemBuilder.\n\n\n\nCurrent versions of the CBA ItemBuilder (Windows): https://www.itembuilder.de/software\n\n\n\n\n\n(In preparation)"
  },
  {
    "objectID": "github.html#irtlib-software",
    "href": "github.html#irtlib-software",
    "title": "Github – More",
    "section": "",
    "text": "Current versions of the IRTlib Software (Windows und Docker):"
  },
  {
    "objectID": "github.html#cba-itembuilder",
    "href": "github.html#cba-itembuilder",
    "title": "Github – More",
    "section": "",
    "text": "The IRTlib software allows the administration of assessment content created with the CBA ItemBuilder.\n\n\n\nCurrent versions of the CBA ItemBuilder (Windows): https://www.itembuilder.de/software\n\n\n\n\n\n(In preparation)"
  },
  {
    "objectID": "editor.html",
    "href": "editor.html",
    "title": "IRTlib Editor",
    "section": "",
    "text": "Editor:\n\nInstallation"
  },
  {
    "objectID": "settings.html",
    "href": "settings.html",
    "title": "Settings for IRTlib Editor",
    "section": "",
    "text": "The IRTlib Editor has a small number of settings.The language can be set to German or English.\n\n\nThe IRTlib software is currently still under development. Information about the current version (and for Preview versions about the build hash) can be found in the section About the Program.\n\n\n\n\n\n\nEmbedded Help\n\n\n\n\n\n\n\n\n\nThe IRTlib Software can be used with CBA ItemBuilder tasks of different CBA ItemBuilder versions. The required Runtime (i.e., the connection between the CBA ItemBuilder tasks and the IRTlib Software) is part of the study configuration so that the IRTlib Player knows for sure how to use CBA ItemBuilder tasks of a particular version.\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "settings.html#overview",
    "href": "settings.html#overview",
    "title": "Settings for IRTlib Editor",
    "section": "",
    "text": "The IRTlib software is currently still under development. Information about the current version (and for Preview versions about the build hash) can be found in the section About the Program.\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "settings.html#runtimes",
    "href": "settings.html#runtimes",
    "title": "Settings for IRTlib Editor",
    "section": "",
    "text": "The IRTlib Software can be used with CBA ItemBuilder tasks of different CBA ItemBuilder versions. The required Runtime (i.e., the connection between the CBA ItemBuilder tasks and the IRTlib Software) is part of the study configuration so that the IRTlib Player knows for sure how to use CBA ItemBuilder tasks of a particular version.\n\n\n\n\n\n\nEmbedded Help"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IRTlib Documentation",
    "section": "",
    "text": "IRTlib Documentation\nIRTlib is a software for delivering computer-based tests. It consists of two components:\n\nIRTLib Editor: A software for test authors, which is used to configure studies.\nIRTlib Player: A data collection software used by test-takers to complete tasks configured for a study.\n\nThe software contains detailed documentation directly in the program, which is available on this page.\nThe software can be obtained directly from GitHub.\nInstructions for installing and using both programs can be found at Download & Installation"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]