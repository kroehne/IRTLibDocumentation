[
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Download & Installation",
    "section": "",
    "text": "The “IRTLib” software is provided for offline use (Windows) and for online use (Docker Container).\n\n\nThe IRTLib software (Editor and Player) for offline use can be obtained and downloaded from the releases section of the repository https://github.com/DIPFtba/IRTlibDeploymentSoftware.\nThe section Releases contains the two archives “TestApp.Editor.Desktop.zip” and “TestApp.Player.Desktop.zip” for download.\n\n\n\n\n\n\nNote\n\n\n\nNote that currently the latest build can be found in the section Preview of the Release-section of the repository.\n\n\nThe editor for offline use will be provided as a ZIP archive (e.g., TestApp.Editor.Desktop.zip) that needs to be extracted. After extracting the editor, the application TestApp.Editor.Desktop.exe can be started on a Windows device.\n\n\n\n\n\n\nWarning\n\n\n\nThe automatically created preview versions of the IRTLib Editor and Player are not signed. A warning message from the operating system must be accepted before the programs can be executed.\n\n\nThe player is also available as a Windows application for offline use, provided as ZIP-archive (e.g., TestApp.Player.Desktop.zip). However, after extracting the player, it requires a published study configuration before the player can be used to collect data. Only after adding content of provided as study configuration of a published study, the executable TestApp.Player.Desktop.exe can be started (either with or without startup parameters).\n\n\n\nThe IRTLib software (editor and player) for online use can be obtained as a docker container. An example is also provided at https://github.com/DIPFtba/IRTlibDeploymentSoftware. To use the docker container, it is suggested to check out the repository on the target device (requiring git) and to run the command ./start.sh inside the folder docker (requiring installed docker and docker compose) to start the software.\nWhen not changed in the file docker-compose.yml, the editor is accessible on port 8002 and the player software is accessible on port 8001."
  },
  {
    "objectID": "installation.html#versions",
    "href": "installation.html#versions",
    "title": "Download & Installation",
    "section": "",
    "text": "The “IRTLib” software is provided for offline use (Windows) and for online use (Docker Container).\n\n\nThe IRTLib software (Editor and Player) for offline use can be obtained and downloaded from the releases section of the repository https://github.com/DIPFtba/IRTlibDeploymentSoftware.\nThe section Releases contains the two archives “TestApp.Editor.Desktop.zip” and “TestApp.Player.Desktop.zip” for download.\n\n\n\n\n\n\nNote\n\n\n\nNote that currently the latest build can be found in the section Preview of the Release-section of the repository.\n\n\nThe editor for offline use will be provided as a ZIP archive (e.g., TestApp.Editor.Desktop.zip) that needs to be extracted. After extracting the editor, the application TestApp.Editor.Desktop.exe can be started on a Windows device.\n\n\n\n\n\n\nWarning\n\n\n\nThe automatically created preview versions of the IRTLib Editor and Player are not signed. A warning message from the operating system must be accepted before the programs can be executed.\n\n\nThe player is also available as a Windows application for offline use, provided as ZIP-archive (e.g., TestApp.Player.Desktop.zip). However, after extracting the player, it requires a published study configuration before the player can be used to collect data. Only after adding content of provided as study configuration of a published study, the executable TestApp.Player.Desktop.exe can be started (either with or without startup parameters).\n\n\n\nThe IRTLib software (editor and player) for online use can be obtained as a docker container. An example is also provided at https://github.com/DIPFtba/IRTlibDeploymentSoftware. To use the docker container, it is suggested to check out the repository on the target device (requiring git) and to run the command ./start.sh inside the folder docker (requiring installed docker and docker compose) to start the software.\nWhen not changed in the file docker-compose.yml, the editor is accessible on port 8002 and the player software is accessible on port 8001."
  },
  {
    "objectID": "preparation-overview.html",
    "href": "preparation-overview.html",
    "title": "Preparation",
    "section": "",
    "text": "Preparing a computer-based assessment based on CBA ItemBuilder items begins with using the IRTlib Editor to create a study configuration. This typically involves the following steps:\n\n\n\n\n\n\nOptional\n\n\n\n\n\n\nPre-requisite: Check the availability of the Runtime. The IRTlib Editor can be used to prepare assessments using CBA ItemBuilder Tasks. Using CBA ItemBuilder Tasks are stored in Project Files require a Runtime (i.e., the files “main..js” and “main..css”) in the version corresponding exactly to the version of the CBA ItemBuilder that was used to generate the items (e.g., 9.9.0). Before using the IRTLib editor, ensure the required Runtime is included or import the runtime files (see here for details).\n\nNote: This step is usually not necessary for the use of CBA ItemBuilder items from version 9.9.\n\n\n\n\nCreate a new “Study”: The IRTlib Editor is used to configure so-called Studies. The version of studies can be tracked in the editor, and studies can be published (i.e., sealed to be used for data collection). To start creating content using the IRTlib Editor, a study must be created first (see here for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that at least one study must be defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nSpecify “Basic Configurations” for the Study (Info): Basic configurations that apply to the content of a prepared study include the study label and description, the login mode, the display configuration, the menu for test administrators and the specification how to continue after completing all content defined in a study (see here for details).\nCreate a new “Survey-Part”: Each study is composed of one or multiple survey parts (see here for details). Parts are considered segments of an assessment that are administered together, like items from a particular domain. Survey parts of type “CBA ItemBuilder” can be used to administer CBA ITemBuilder tasks in a linear sequence or with Blockly-based routing (see Routing Across Survey Parts for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that each study neads at least one test-part defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nConfigure “Basic Settings” for Survey Part (Info): A study part of type “CBA ItemBuilder” is a set of CBA ItemBuilder projects that belong together. Each CBA ItemBuilder project requires at least one Task, but projects with multiple tasks are also supported. If items are administered with a common time limit, test parts allow for assigning tasks to a structure differentiating assessment content presented before a time-restricted section (“instructional items”), after a time-restricted section (“epilogue items”), and items in between with restricted time (“core items”, see here).\nDefine “Core Items” (Items): To finalize the definition of a study-part, the CBA ItemBuilder tasks must be imported in the section “Items”. By default, the sequence of CBA ItemBuilder tasks is assumed to be linear. However, when routing is activated for a study part, Blockly-based routing (see Routing Within Survey Parts for details) can be used to implement various test designs (e.g., multiple booklets, multi-stage testing, etc.)."
  },
  {
    "objectID": "preparation-overview.html#overview-steps-to-use-irtlib-editor-for-study-preparation",
    "href": "preparation-overview.html#overview-steps-to-use-irtlib-editor-for-study-preparation",
    "title": "Preparation",
    "section": "",
    "text": "Preparing a computer-based assessment based on CBA ItemBuilder items begins with using the IRTlib Editor to create a study configuration. This typically involves the following steps:\n\n\n\n\n\n\nOptional\n\n\n\n\n\n\nPre-requisite: Check the availability of the Runtime. The IRTlib Editor can be used to prepare assessments using CBA ItemBuilder Tasks. Using CBA ItemBuilder Tasks are stored in Project Files require a Runtime (i.e., the files “main..js” and “main..css”) in the version corresponding exactly to the version of the CBA ItemBuilder that was used to generate the items (e.g., 9.9.0). Before using the IRTLib editor, ensure the required Runtime is included or import the runtime files (see here for details).\n\nNote: This step is usually not necessary for the use of CBA ItemBuilder items from version 9.9.\n\n\n\n\nCreate a new “Study”: The IRTlib Editor is used to configure so-called Studies. The version of studies can be tracked in the editor, and studies can be published (i.e., sealed to be used for data collection). To start creating content using the IRTlib Editor, a study must be created first (see here for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that at least one study must be defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nSpecify “Basic Configurations” for the Study (Info): Basic configurations that apply to the content of a prepared study include the study label and description, the login mode, the display configuration, the menu for test administrators and the specification how to continue after completing all content defined in a study (see here for details).\nCreate a new “Survey-Part”: Each study is composed of one or multiple survey parts (see here for details). Parts are considered segments of an assessment that are administered together, like items from a particular domain. Survey parts of type “CBA ItemBuilder” can be used to administer CBA ITemBuilder tasks in a linear sequence or with Blockly-based routing (see Routing Across Survey Parts for details).\n\n\n\n\n\n\n\nNote\n\n\n\nNote that each study neads at least one test-part defined in the IRTlib Editor, before a study configuration can be used to collect data with an IRTlib Player.\n\n\n\nConfigure “Basic Settings” for Survey Part (Info): A study part of type “CBA ItemBuilder” is a set of CBA ItemBuilder projects that belong together. Each CBA ItemBuilder project requires at least one Task, but projects with multiple tasks are also supported. If items are administered with a common time limit, test parts allow for assigning tasks to a structure differentiating assessment content presented before a time-restricted section (“instructional items”), after a time-restricted section (“epilogue items”), and items in between with restricted time (“core items”, see here).\nDefine “Core Items” (Items): To finalize the definition of a study-part, the CBA ItemBuilder tasks must be imported in the section “Items”. By default, the sequence of CBA ItemBuilder tasks is assumed to be linear. However, when routing is activated for a study part, Blockly-based routing (see Routing Within Survey Parts for details) can be used to implement various test designs (e.g., multiple booklets, multi-stage testing, etc.)."
  },
  {
    "objectID": "github.html#cba-itembuilder",
    "href": "github.html#cba-itembuilder",
    "title": "IRTlib",
    "section": "CBA ItemBuilder",
    "text": "CBA ItemBuilder\n\nDownload\n\n\nSource Code\n\n(In preparation)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nIRTlib Software\n",
    "section": "",
    "text": "IRTlib Software\n\n\n\nIRTlib ist eine Software zur Auslieferung computerbasierter Assessments. Die Software erlaubt die Definition von flexiblen Abläufen unter Nutzung von visueller Programmierung und Funktionen der Item-Response Theoie (IRT).\n\n\nIRTlib is a software for the delivery of computer-based assessments. The software allows the definition of flexible processes using visual programming and functions of the item-response theory (IRT).\n\n\n\n\nDokumentation auf Deutsch\n\n\nEnglish Documentation\n\n\n\n\n\nDie Entwicklung von IRTlib wird koordinert am Zentrum für technologiebasiertes Assessment (TBA) am DIPF | Leibniz-Institut für Bildungsforschung und Bildungsinformation.\n\n\nDevelopment of IRTlib is coordinate at the Centre for Technology-Based Assessment (TBA Centre) at DIPF | Leibniz Institute for Research and Information in Education."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]