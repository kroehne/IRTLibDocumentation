[
  {
    "objectID": "github.html",
    "href": "github.html",
    "title": "Github Repositorien / Github Repositories",
    "section": "",
    "text": "Die IRTlib Software ist freie Forschungssoftware im Sinne von Open Science. Sie kann für nicht-kommerzielle Anwendungen verwendet werden.\n\n\n\n\n\n\nHinweis\n\n\n\nÜbersetzung: Wenn Sie uns bei der Übersetzung dieser Software helfen wollen, finden Sie hier weitere Informationen.\n\n\n\n\n\nAktuelle Versionen der IRTlib Software (Windows und Docker): github\nDokumentation: github\n\n\n\n\n\nDie IRTlib Software erlaubt die Administration von Assessmentinhalten, die mit dem CBA ItemBuilder erstellt wurden.\n\n\n\nAktuelle Versionen des CBA ItemBuilder (Windows): https://www.itembuilder.de/software\n\n\n\n\nSource Code und Material zum CBA ItemBuilder sind aufgeteilt auf mehrere Repositorien:\n\nCBA ItemBuilder (Desktop Anwendung): github (In Vorbereitung / noch privat)\nLaufzeitumgebung / Rumtime: github (In Vorbereitung / noch privat)\nAusführungsumgebung / Execution Environment für Entwickler: github (In Vorbereitung / noch privat)\nTechnische Dokumentation: github (In Vorbereitung / noch privat)\nTechnische Beispielitems: github(In Vorbereitung / noch privat)\n\n\n\n\nOnline-Dokumentation\n\nHTML (interaktiv): https://cba.itembuilder.de\n\nPDF (statisch): Open-Assessments-with-CBA-ItemBuilder.pdf\nQuellen github (In Vorbereitung / noch privat)"
  },
  {
    "objectID": "github.html#irtlib-software",
    "href": "github.html#irtlib-software",
    "title": "Github Repositorien / Github Repositories",
    "section": "",
    "text": "Die IRTlib Software ist freie Forschungssoftware im Sinne von Open Science. Sie kann für nicht-kommerzielle Anwendungen verwendet werden.\n\n\n\n\n\n\nHinweis\n\n\n\nÜbersetzung: Wenn Sie uns bei der Übersetzung dieser Software helfen wollen, finden Sie hier weitere Informationen.\n\n\n\n\n\nAktuelle Versionen der IRTlib Software (Windows und Docker): github\nDokumentation: github"
  },
  {
    "objectID": "github.html#cba-itembuilder",
    "href": "github.html#cba-itembuilder",
    "title": "Github Repositorien / Github Repositories",
    "section": "",
    "text": "Die IRTlib Software erlaubt die Administration von Assessmentinhalten, die mit dem CBA ItemBuilder erstellt wurden.\n\n\n\nAktuelle Versionen des CBA ItemBuilder (Windows): https://www.itembuilder.de/software\n\n\n\n\nSource Code und Material zum CBA ItemBuilder sind aufgeteilt auf mehrere Repositorien:\n\nCBA ItemBuilder (Desktop Anwendung): github (In Vorbereitung / noch privat)\nLaufzeitumgebung / Rumtime: github (In Vorbereitung / noch privat)\nAusführungsumgebung / Execution Environment für Entwickler: github (In Vorbereitung / noch privat)\nTechnische Dokumentation: github (In Vorbereitung / noch privat)\nTechnische Beispielitems: github(In Vorbereitung / noch privat)\n\n\n\n\nOnline-Dokumentation\n\nHTML (interaktiv): https://cba.itembuilder.de\n\nPDF (statisch): Open-Assessments-with-CBA-ItemBuilder.pdf\nQuellen github (In Vorbereitung / noch privat)"
  },
  {
    "objectID": "preparation-studies.html",
    "href": "preparation-studies.html",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Konfigurationen, die mit dem IRTlib-Editor erstellt werden, werden in sogenannten Studien zusammengefasst. Eine Studie soll die Assessmentinhalte zusammenfassen, welche in einer Erhebung oder Sitzung administriert werden.\n\n\nNach dem Start des IRTlib-Editors wird die Ansicht Studien angezeigt. In dieser Ansicht ist der erste Schritt zur Vorbereitung einer neuen Konfiguration das Hinzufügen einer neuen Studie:\n\nDie erstellten Studien erscheinen als Karten in der Ansicht Studien. Beachten Sie, dass die Reihenfolge, in der die Studien in der Studienansicht angezeigt werden, keine Rolle spielt.\nEine detaillierte Anleitung zur Erstellung einer Studie findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nMit dem IRTLib Editor werden Konfigurationen für Studien erstellt, welche dann in einem IRTLib Player zur Durchführung computerbasierter Assessments verwendet werden können.\n\n\nUm mit der Konfiguration einer Studie zu beginnen, klicken Sie auf das Plus-Icon unten rechts:\n\n\n\n\n\nDanach geben Sie bitte in dem Dialog Neue Studie erstellen eine Bezeichnung und optional eine Beschreibung ein.\nAchten Sie darauf, dass für die Bezeichnung nur Buchstaben (Groß- und Kleinbuchstaben), Ziffern und ein _ erlaubt sind.\n\n\n\n\n\nKlicken Sie anschließend auf Speichern.\nBei Bedarf können Sie über das folgende Icon einer Studie auch ein Bild zuordnen. Dieses Bild wird im IRTLib Editor für diese Studie verwendet:\n\n\n\n\n\n\n\n\nErstellten Studien werden in der Studienübersicht als Kacheln angezeigt:\n\n\n\n\n\nUm nun mit der Erstellung und Konfiguration einer Studie fortzufahren, klicken Sie auf das kleine Bearbeiten-Icon:\n\n\n\n\n\n\n\n\n\n\nStudie Löschen: Mit dem Papierkorb-Icon können Sie Studien auch wieder löschen. Das Löschen von Studien kann nicht rückgängig gemacht werden:\n\n\n\n\n\n\n\nSprache Wechseln: Über den Menüpunkt Einstellungen gelangen Sie zu dem Punkt Allgemeine Einstellungen, wo sie die Sprache des IRTLib Editors ändern können.\n\n\n\n\n\n\nÜber diesen Punkt erhalten Sie auch Zugriff auf die im IRTLib Editor verfügbaren CBA ItemBuilder Runtimes (Unterstützung für die Verwendung von CBA ItemBuilder-Inhalten, die mit unterschiedlichen Versionen des Programms erstellt wurden).\n\n\n\n\n\n\n\nDie Konfigurationen einer bestimmten Studie, einschließlich Versionierung und Veröffentlichung, werden innerhalb von Studien verwaltet (d.h. nach dem Öffnen einer Studie zur Bearbeitung durch Klicken auf das Bearbeitungssymbol am unteren rechten Rand der Karte).\nErstellte Studien, die im IRTlib Editor in der Ansicht Studien angezeigt werden, können zur Bearbeitung geöffnet werden.\n\nDetaillierte Informationen zur Grundkonfiguration einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nBezeichnung: Wie soll die Studie benannt werden? Achten Sie darauf, dass für die Bezeichnung nur Buchstaben (Groß- und Kleinbuchstaben), Ziffern und ein _ erlaubt sind.\nBeschreibung: Um eine ausführliche Beschreibung der Studie hinterlegen zu können, ist dieses optionle Feld vorgesehen. Hier können auch Sonderzeichen und Umlaute usw. eingegeben werden.\nRouting für Erhebungsteile aktivieren: Studien bestehen aus einem oder mehreren Erhebungsteilen. Die Erhebungsteile werden per Default als lineare Abfolge administriert. Wenn die Option Routing für Erhebungsteile aktivieren ausgewählt ist, kann die Reihenfolge der Erhebungsteile mit einem Blockly-basierten Routing definiert werden. Dadurch sind dynamische Abfolgen von Erhebungsteilen möglich, wobei auch Aufrufparameter der Studie bspw. für die Zuordnung von unterschiedlichen Reihenfolgen genutzt werden können.\nBildschirmgröße überprüfen: In Erhebungen, bei denen die Bildschirmgröße nicht bekannt ist, kann mit dieser Option ein Größenvergleich von Objekten (EC-Karte, Banknote, Personalausweis) mit Darstellungen auf dem Bildschirm vorgenommen werden.\n\n\nDie Geräteprüfung erfolgt mit folgendem Dialog:\n\n\n\n\n\nWenn die Option Passende Bildschirmgröße erzwingen (im Abschnitt Anzeige) nicht aktiviert ist, dann kann die Testbearbeitung dennoch begonnen werden. Es wird, wenn die Auflösung zu klein ist, folgender Dialog angezeigt:\n\n\n\n\n\nHinweis: Diese Option ist zur Zeit nicht weiter konfigurierbar.\n\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:\n\n\n\n\n\n\n\n\n\n\n\nDie IRTlib Software unterstützt verschiedene Wege, wie sich Personen (Testteilnehmer, Befragte, …) für ein Assessment authentifizieren können. Die Konfigurationen umfassen zwei Aspekte:\n\nLogin-Modus: Wird ein Zugang benötigt (Login, Login+Passwort, Passphrases/Token) oder nicht? Und wenn Zugangsdaten benötigt werden, was sind gültige Werte?\nLoginquelle: Wie wird die Login-Information abgefragt (direkte Eingabe auf der Plattform, CBA ItemBuilder Item, ….) oder übergeben (Login-Parameter oder Aufruf-Parameter)?\n\nDetaillierte Informationen zu der Konfiguration der Anmeldung einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nIm Abschnitt Login kann konfiguriert werden, wie Testteilnehmer, die ein Assessment starten (entweder durch Aufruf eines Links in einem Browser der auf den Online-IRTlib-Player verweist oder durch Start des Offline-IRTlib-Players), identifiziert oder authentifiziert werden sollen.\n\nLogin-Modus: Die IRTlib-Software unterstützt verschiedene Login-Modi.\n\nZufälliger Inditifikator: Wenn eine Sitzung zum ersten Mal gestartet wird, wird in diesem Login-Modus ein Identifikator generiert. Diese zufällige, aber eindeutige Zeichenkette (eine sogenannte UUID, d.h. ein Universally Unique Identifier) wird als Personenidentifikator in allen Daten (d.h. Ergebnisdaten) und allen anderen gespeicherten Daten (z.B. Log-Daten/Trace-Daten, Snapshot-Daten, etc.) verwendet.\nBenutzername: Wenn von den Testteilnehmern erwartet wird, dass sie sich durch eine eindeutige Zeichenfolge identifizieren (z.B. eine Zahl oder ein Text, der als Zugangskennung verwendet wird), kann eine Studie mit dem Login-Modus Benutzername konfiguriert werden. Der Zugang zum Assessment ist dann nur möglich, wennd die als Benutzername eingegebene Zeichenkette gültig ist. Die zugrundeliegende Idee ist, dass die Studienkonfiguration mit einer Liste gültiger Benutzernamen geladen wird und dass ein Testteilnehmer einen gültigen Benutzernamen eingeben muss, bevor er oder sie das Assessment starten kann. Nur authentifizierte Testteilnehmer können auf die als Studie definierten Assessmentinhalte zugreifen und die Aufgaben bzw. Fragen beantworten.\nBenutzername und Passwort: Wenn in einer Studie nicht nur gültige Benutzernamen, sondern ein Passwort zur Authentifizierung der Testpersonen verwendet werden soll, ermöglicht der Login-Modus Benutzername und Passwort eine Eingabe von Benutzernamen und Passwort. Analog zu Benutzername müssen dann beide Informationen in der Studienkonfiguration hinterlegt sein.\nZugriffstoken: Wenn in der Studienkonfiguration die gültigen Benutzernamen nicht gespeichert werden sollen, kann die Option Zugriffstoken verwendet werden. Jedes Token, das einem definierten Schema entspricht, wird dann akzeptiert und als Identifikator für die Testteilnehmer verwendet.\n\nSpeicher für Sessiondaten: Bei Onlineauslieferungen kann nach einer Unterbrechung ein Assessment forgesetzt werden. Diese Funktionalität wird bspw. auch benötigt, wenn im Browser die Seite neu geladen wird (bspw. durch Erzwingen eines Reload/F5, oder durch Schließen und erneutes Aufrufen der URL). Um sicherzustellen, dass Sitzungen, die von derselben Person (d.h. vom selben Browser) stammen, auch fortgesetzt werden können, kann die Software so konfiguriert werden, dass der Identifikator im Client gespeichert wird.\nGültige Werte: Die IRTlib-Software bietet für die Login-Modi Benutzername, Benutzername + Passwort und Zugriffstoken folgende Mechanismen zur Validierung von Anmeldeinformationen:\n\nListe: Eine Liste gültiger Berechtigungen (Benutzername oder Benutzername und Passwort, je nach Konfiguration des Login-Modus) kann als Teil der Studienkonfiguration definiert werden. Die Informationen können entweder im IRTlib-Editor bearbeitet oder aus einer CSV-Datei importiert werden. Definierte Werte können auch als CSV-Datei exportiert werden.\nCode zur Prüfung: Es kann eine Blockly-Funktion angegeben werden, welche Wahr zurückmeldet, wenn die übergebenen Anmeldedaten gültig sind (sonst Falsch).\n\nGruppenlogin: Je nach Login-Modus dienen Benutzername oder Zugriffstoken als Personenidentifikator. Wenn die Option Gruppenanmeldung aktiviert wird, dann werden diese übergebenen Anmeldedaten zur Authentifizierung verwendet, um den Testteilnehmer als Mitglied einer Gruppe zu identifizieren (d. h. nur Testteilnehmer, die den Benutzernamen kennen, können sich als Teil der Gruppe authentifizieren). Innerhalb der Gruppe wird dann ein zusätzlicher Zufallsidentifikator generiert, um verschiedene Personen aus einer Gruppe zu unterscheiden.\nLoginquelle: Die IRTlib-Software unterstützt verschiedene mögliche Optionen, wie Anmeldeinformationen bereitgestellt werden können.\n\nPlattform: Ein Anmeldedialog wird vom IRTlib-Player (d.h. der Plattform) angezeigt. Die Überschrift zur Eingabe der Zugangsdaten, die Beschriftung der Eingabe für Benutzernamen und Passwort, die Beschriftung des Weiter-Buttons, ein Begrüßungs- und ein Instruktionstext sowie ein Fehlertext bei fehlgeschlagenen Login-Versuchen können konfiguriert werden.\nParameter: Gültige Anmeldedaten für Testteilnehmer können auch über die Befehlszeile (d.h. Parameter beim Aufruf der Offline-Version des IRTlib Players) oder über URL-Parameter (d.h. Parameter beim Aufruf der Studie über einen Link auf eine Online-Version des IRTlib Players) bereitgestellt werden. In diesem Fall wird kein Anmeldedialog oder Login-Item angezeigt.\nItem: Alternativ zu einem Dialog des IRTlib-Players kann auch ein CBA ItemBuilder-Task konfiguriert werden, der als Login-Eingabemaske dient. Innerhalb des Items wird ein sogenannter ExternalPageFrame verwendet, um zur Validierung einer Eingabe einen bestimmten JavaScript-Befehl an den IRTlib-Player zu senden (ein Beispiel finden Sie hier).\n\n\n\n\nDas Login Item muss als CBA ItemBuilder-Projektdatei für die konfigurierte Laufzeitumgebung (Runtime) verfügbar sein und der Studienkonfiguration hinzugefügt werden. Um ein Login-Item zur Studienkonfiguration hinzuzufügen, kann der integrierte Importdialog verwendet werden. Mehr Informationen zum Importieren von CBA ItemBuilder-Projekten findet sich in der Hilfe zum Abschnitt Items eines Erhebungsteils.\n\n\n\nZusätzliche Parameter: Neben der Authentifizierung von Testteilnehmern können die Anmeldeinformationen in der IRTlib-Software auch als zusätzlicher Parameter hinterlegt werden, die dann bspw. in der Ablaufsteuerung verwendet werden können.\n\nParameter für Dateinamen: Der RawDataPath (d.h. der relative Pfad unter dem der Offline-IRTlib-Player die Ergebnisdaten speichert) und der MonitoringFile (d.h. der Name der Datei in welcher der Offline-IRTlib-Player Informationen fürs Studienmonitoring schreibt) können als Teil der Anmeldedaten konfiguriert werden.\nBlockly-Variablen: Zusätzliche Parameter können auch als sogenannte Preload-Variablen mit den Anmeldeinformationen hinterlegt werde.\n\n\n\n\n\nTabelle 1: Zusammenfassung der Optionen, die als Konfiguration der Anmeldung kombiniert werden können\n\n\n\n\n\n\n\n\n\n\nLogin Modus\nSpeicher für Sessiondaten\nGruppenlogin\nGültige Werte\nLoginquelle\nZusätzliche Parameter\n\n\n\n\nZufälliger Inditifikator\nja\nnein\nnein\nkeine\nnein\n\n\nBenutzername\nja\nja\nListe oder Code\nPlattform, Item + Parameter\nWerte oder Parameter\n\n\nBenutzername und Passwort\nja\nja\nListe oder Code\nPlattform, Item + Parameter\nWerte oder Parameter\n\n\nZugriffstoken\nja\nja\nSchema oder Code\nPlattform, Item + Parameter\nParameter\n\n\n\n\n\n\n\n\n\n\nStudien können festlegen, wie der CBA ItemBuilder-Inhalt dargestellt werden soll. Die Einstellungen im Aschnitt Anzeige können sich auf die Skalierung und die Ausrichtung der Inhalte sowie auf das Verhalten der IRTlib Player-Anwendung beziehen.\nDetaillierte Informationen zu der Konfiguration der Anzeige einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nFür die Konfiguration der Anzeige stehen ausgewählte Optionen zur Verfügung, die sich auf die Darstellung der Assessmentinhalte und die Verwendung von CBA ItemBuilder-Inhalten beziehen, welche mit einem festgelegten Seitenverhältnis (Breite und Höhe) erstellt werden.\n\n\nIn der Auswahl Fenstermodus kann konfiguriert werden, ob ein zusätzliches Fenster im IRTlib Player angezeigt wird. Die Konfiguration wird je nach Umgebung unterschiedlich umgesetzt:\n\nWindow: In diesem Fenstermodus wird im Offline-IRTlib Player ein reguläres Programmfenster verwendet, im Online-IRTlib Player wird der Assessmentinhalt im normalen Browserbereich angezeigt, und die Adressleiste und die Navigationsschaltflächen des Browsers sind in diesem Modus sichtbar.\n\n\n\n\n\nVollbild: Der Offline-IRTlib Player startet direkt im Vollbildmodus, wenn diese Option konfiguriert ist. Damit verbunden ist auch ein Kiosk-Modus, d.h. der Zugriff auf andere Programme und das (versehentliche) Beenden des Programms ist nur über den Task Manager möglich. Soll die Möglichkeit zum Beenden der Testung bspw. für einen Testleiter möglich sein, muss ein Testleitermenü konfiguriert sein.\n\n\nDer Online-IRTlib Player kann Assessmentinhalte auch im Vollbildmodus anzeigen, wenn diese Option gewählt ist. Wird der Vollbildmodus im Browser verlassen, wird dann der Assessmentinhalt ausgeblendet. Da automatisiert nicht in einem Browser in den Vollbildmodus gewechselt werden kann, sieht die Zielperson zunächst folgende Nachricht der Plattform:\n\n\n\n\n\nDurch klick auf den Button Vollbild Aktivieren wird der Vollbildmodus gestartet und der Assessmentinhalt dann ohne Fensterrahmen und Navigationsflächen des Browsers dargestellt. Für kurze Zeit wird dann von den Browser typischerweise ein Hinweis eingeblendet dass mit Esc der Vollbildmodus wieder beendet werden kann.\n\n\n\n\n\nBeachten Sie, dass diese Funktion nur in Browsern zur Verfügung steht, die den Vollbildmodus unterstützen (insbesondere auf älteren mobilen Geräten wird der Vollbildmodus nicht vollständig unterstützt; siehe für Details z.B. auf caniuse.com).\n\n\nVollbild, wenn unterstützt: In diesem Modus wird das Assessment im Online-IRTlib Player nur dann im im Vollbildmodus angezeigt, wenn der Browser den Vollbildmodus unterstützt. Der Inhalt des computerbasierten Assessments wird jedoch im Fenstermodus angezeigt, wenn eine Studie online bereitgestellt wird und ein Browser verwendet wird, der den Vollbildmodus nicht unterstützt. Für den IRlLib Player offline ist diese Konfiguration identisch mit Vollbild.\n\n\n\n\n\nDebug: Dieser Modus ermöglicht während der Testausführung den Zugriff auf die Entwicklerwerkzeuge des Browsers, die für die Fehlersuche von Softwareentwicklern vorgesehen sind.\n\n\nWenn der Offline-IRTlib Player mit einer Studie gestartet wird, welche als Festermodus den Eintrag Debug konfiguriert hat, dann lassen sich über die rechte Maustaste während der Aufgabenpräsentation die sogenannten Entwickertools (DevTools) abrufen.\n\n\n\n\n\n\n\n\nAssessmentinhalte, die mit dem CBA ItemBuilder erstellt werden, werden für eine konkrete Größe in Pixeln (Breite mal Höhe) erstellt. Für die Darstellung auf Geräten mit unterschiedlichen Bildschirmgröße und Bildschirmauflösungen können die Inhalte dann skaliert werden. Im CBA ItemBuilder stehen deshalb in der Preview die Option unter Scaling Options zur Verfügung:\n\n\n\nIm IRTlib Editor können analoge Einstellung vorgenommen werden.\n\nSkalierung: Einstellung wie Inhalte sollen angepasst werden, wenn verfügbarer Platz und Größe der Items abweichen (Scaling Mode).\n\nkeine: Die Inhalte werden ohne Anpassung an die verfügbare Fenster- bzw. Bildschirmgröße angezeigt (entspricht None).\nhochskalieren: Inhalte werden vergrößert, damit der verfügbare Platz ausgenutzt wird (entspricht Up).\nrunterskalieren: Inhalte werden verkleinert, damit sie auf den Bildschirm/ins Fenster passen (entspricht Down).\nFenstergröße: Inhalte werden vergrößert und verkleinert (entspricht Both).\n\nHorizontale Ausrichtung: Die Optionen zentriert / links / rechts werden genutzt um Iteminhalte horizontal auszurichten, wenn die Breite von Fenster oder Bildschirm größer ist als die Breite des Inhalts.\nVertikale Ausrichtung: Die Optionen zentriert / oben / unten werden genutzt um Iteminhalte vertikal auszurichten, wenn die Höhe von Fenster oder Bildschirm größer ist als die Höhe des Inhalts.\n\n\n\n\nPassende Bildschirmgröße erzwingen: Wenn bei Skalierung nicht runterskalieren oder Fenstergröße ausgewählt ist, kann über diese Option erzwungen werden, dass man nur dann mit der Aufgabenbearbeitung starten kann, wenn die verfügbare Größe des Fensters bzw. Bildschirms größer ist als die benötigte Breite/Höhe der Items. Andernfalls wird folgende Nachricht angezeigt:\n\n\n\n\n\nHinweis: Die Einstellungen zur Anzeige beziehen sich auf alle Erhebungsteile innerhalb einer Studie. Werden in einem IRTlib-Player mehrere Studien konfiguriert, müssen die Einstellungen zueinander passen, d.h. es ist nicht mögliche mit einer Instanz eines IRTlib-Players gleichzeitig eine Studie im Fenstermodus: Fenster oder im Fenstermodus: Vollbild zu administrieren.\n\nWenn geänderte Einstellungen erhalten bleiben sollen, müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:\n\n\n\n\n\n\n\n\n\n\n\n\n\nWenn die Durchführung von Assessments begleitet durch Testleiter oder Interviewer erfolgt, können Funktionen passwortgeschützt für Testleiter definiert werden.\n\n\n\n\n\n\nWarnung\n\n\n\nAuch wenn Sie die Funktionalität eines Testadministratormenüs für die Durchführung Ihrer Datenerfassung nicht benötigen, sollten Sie dennoch ein Testadministratormenü definieren, wenn Sie planen, mit dem IRTlib Player Daten offline zu erfassen. Nur so können Sie sicherstellen, dass Sie die Anwendung im Falle unvorhergesehener Ereignisse ohne den Task-Manager (und ohne möglichen Datenverlust) beenden können.\n\n\nDetaillierte Informationen zu der Konfiguration des Testleitermenüs finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDie Konfiguration des Menüs für Testadministratoren erfolgt in zwei Schritten. Zunächst muss eine Tastenkombination definiert werden, mit der das Testleitermenü aufgerufen werden kann. Wird diese Tastenkombination während der Testbearbeitung gedrückt, erscheint ein Fenster zur Passworteingabe. Testadministratoren geben das (nur) ihnen bekannte Passwort ein und erhalten so Zugriff auf ausgewählte Funktionen. Zu diesem Zweck müssen in einem zweiten Schritt eine oder mehrere Rollen im IRTlib Editor definiert werden.\n\n\nZunächst muss eine Tastenkombination definiert werden.\n\nTaste: Die Konfiguration der Tastenkombination für das Testleitermenü erfordert zunächst die Definition einer Taste. Um eine Taste festzulegen klickt man in das Feld und drückt die Taste, welche für das Testleitermenü verwendet werden soll.\nModifikatoren (Alt, Strg und Shift): Für eine Taste kann dann zusätzlich festgelegt werden, ob eine oder mehrere Modifkatoren gedrück werden müssen damit das Testleitermenü geöffnet wird.\n\nBeispiel:\n\nDie folgende Konfiguration definiert die Tastenkombination Strg + Shift+ X:\n\n\n\n\nDie definierte Tastenkombination öffnet nur die Option zur Eingabe eines Passowrt für Testleiter während der Testbearbeitung im IRTlib Player. Um die Funktion zu nutzen, ist ein Passwort notwendig, welches zusammen mit einer Rolle im zweiten Schritt definiert wird.\n\n\n\nNach dem Aufruf der definierten Tastenkombination wird während der Testbearbeitung die Aufforderung zur Eingabe eines Passworts angezeigt:\n\nWelche Funktionen nun wirklich zugreifbar sind wird dadurch gesteuert, welches Passwort eingegeben wird. Nur wenn ein gültige Passwort bekannt ist, können Funktionen der Testleitung aufgerufen werden.\nBeispiel:\n\nIn der folgenden Konfiguration können Testleiter mit diesem Passwort zur nächsten Aufgabe springen (Weiter) oder die Anwendung beenden (Sitzung beenden):\n\n\n\n\n\nUm eine Rolle zu definieren, muss zunächst das +-Symbol unten rechts geklickt werden. Danach kann der Name einer Rolle und ein Passwort definiert:\n\n\n\n\n\nDer Name der Rolle dient nur der Dokumentation. Entscheidend für die Funktionalität ist die Vergabe eines eindeutigen Passwortes und die Auswahl einer oder mehrerer der folgenden Funktionen:\n\n\nAufgabe zurück: Ermöglicht die Navigation zur vorherigen Aufgabe.\nAufgabe vor: Ermöglicht die Navigation zur nächsten Aufgabe.\nItemliste abbrechen: Ermöglicht die Abarbeitung der aktuellen Itemliste abzubrechen. Diese Option ist insbesondere sinnvoll, wenn in einem Erhebungsteil die Option Routing aktiviert ist und die Definition von CBA ItemBuilder Tasks mit Hilfe von Itemlisten umgesetzt ist.\n\nErhebungsteil abbrechen: Ermöglicht den Abbruch des aktuellen Erhebungsteils.\nSitzung beenden: Ermöglicht das Beenden der aktuellen Sitzung.\nLautstärkeregelung: Ermöglicht die Änderung der Lautstärke.\n\nDie Audiodatei, welche zur Kontrolle der Audioausgabe abgespielt wird nachdem die Lautstärke verändert wurde, kann im Abschnitt Audio für Soundtest eingefügt und in der Studienkonfiguration hinterlegt werden.\n\nWenn geänderte Einstellungen erhalten bleiben sollen, müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:\n\n\n\n\n\n\n\n\n\n\n\n\nFür die Integration von Assessments in externe Abläufe besteht die Möglichkeit, zu konfigurieren, wie nach der Bearbeitung der Assessmentinhalte in einer Session vorgegangen werden soll, was also am Session-Ende geschehen wird.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nEine Session bezieht sich auf die Durchführung einer Erhebung mit einer Person zu einem bestimmten Zeitpunkt. Der in einer Session angezeigte Inhalt entspricht einer konfigurierten Studie, wie sie im IRTlib Editor erstellt werden kann. Nachdem alle in einer Studie definierten Erhebungsteile durchgeführt worden sind, wird das Session-Ende erreicht.\n\n\nWas nach einem Session-Ende erfolgt, d.h. wie sich der IRTlib Players am Ende einer Sitzung verhält, kann mit den folgenden Optionen festgelegt werden:\n\nNeue Session starten: Es wird eine neue Sitzung gestartet. Dieses Verhalten ist nicht sinnvoll, wenn die Anmeldedaten übergeben werden (entweder als Startup-Parameter oder als URL-Parameter).\nEndtext anzeigen: Wenn diese Option ausgewählt ist, zeigt die Plattform den konfigurierten Text an. Der Text kann als Nachricht auf Endseite konfiguriert werden.\nEnd-Item anzeigen: Analog zu einem Login-Item kann auch ein CBA ItemBuilder-Item definiert werden, das am Ende einer Sitzung angezeigt wird.\n\n\nDas End-Item kann schließlich das Beenden des Offline-IRTlib Players anstoßen. Ein Beispiel für ein End-Item mit dem notwendigen JavaScript-Aufruf findet sich hier.\n\n\nRedirect to Exit URL (Redirect zu Exit-Url): Bei Online-Lieferungen mit dem IRTlib Player ist es möglich, auf eine URL umzuleiten. Die Weiterleitungs-URL kann dann konfiguriert werden.\n\n\n\n\n\nSession ID kann wiederverwendet werden: Wenn diese Option aktiviert ist, können mehrere Datenerfassungen mit einer Session-ID administriert werden.\n\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#studienverwaltung",
    "href": "preparation-studies.html#studienverwaltung",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Nach dem Start des IRTlib-Editors wird die Ansicht Studien angezeigt. In dieser Ansicht ist der erste Schritt zur Vorbereitung einer neuen Konfiguration das Hinzufügen einer neuen Studie:\n\nDie erstellten Studien erscheinen als Karten in der Ansicht Studien. Beachten Sie, dass die Reihenfolge, in der die Studien in der Studienansicht angezeigt werden, keine Rolle spielt.\nEine detaillierte Anleitung zur Erstellung einer Studie findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nMit dem IRTLib Editor werden Konfigurationen für Studien erstellt, welche dann in einem IRTLib Player zur Durchführung computerbasierter Assessments verwendet werden können.\n\n\nUm mit der Konfiguration einer Studie zu beginnen, klicken Sie auf das Plus-Icon unten rechts:\n\n\n\n\n\nDanach geben Sie bitte in dem Dialog Neue Studie erstellen eine Bezeichnung und optional eine Beschreibung ein.\nAchten Sie darauf, dass für die Bezeichnung nur Buchstaben (Groß- und Kleinbuchstaben), Ziffern und ein _ erlaubt sind.\n\n\n\n\n\nKlicken Sie anschließend auf Speichern.\nBei Bedarf können Sie über das folgende Icon einer Studie auch ein Bild zuordnen. Dieses Bild wird im IRTLib Editor für diese Studie verwendet:\n\n\n\n\n\n\n\n\nErstellten Studien werden in der Studienübersicht als Kacheln angezeigt:\n\n\n\n\n\nUm nun mit der Erstellung und Konfiguration einer Studie fortzufahren, klicken Sie auf das kleine Bearbeiten-Icon:\n\n\n\n\n\n\n\n\n\n\nStudie Löschen: Mit dem Papierkorb-Icon können Sie Studien auch wieder löschen. Das Löschen von Studien kann nicht rückgängig gemacht werden:\n\n\n\n\n\n\n\nSprache Wechseln: Über den Menüpunkt Einstellungen gelangen Sie zu dem Punkt Allgemeine Einstellungen, wo sie die Sprache des IRTLib Editors ändern können.\n\n\n\n\n\n\nÜber diesen Punkt erhalten Sie auch Zugriff auf die im IRTLib Editor verfügbaren CBA ItemBuilder Runtimes (Unterstützung für die Verwendung von CBA ItemBuilder-Inhalten, die mit unterschiedlichen Versionen des Programms erstellt wurden)."
  },
  {
    "objectID": "preparation-studies.html#grundlegende-konfigurationen",
    "href": "preparation-studies.html#grundlegende-konfigurationen",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Die Konfigurationen einer bestimmten Studie, einschließlich Versionierung und Veröffentlichung, werden innerhalb von Studien verwaltet (d.h. nach dem Öffnen einer Studie zur Bearbeitung durch Klicken auf das Bearbeitungssymbol am unteren rechten Rand der Karte).\nErstellte Studien, die im IRTlib Editor in der Ansicht Studien angezeigt werden, können zur Bearbeitung geöffnet werden.\n\nDetaillierte Informationen zur Grundkonfiguration einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nBezeichnung: Wie soll die Studie benannt werden? Achten Sie darauf, dass für die Bezeichnung nur Buchstaben (Groß- und Kleinbuchstaben), Ziffern und ein _ erlaubt sind.\nBeschreibung: Um eine ausführliche Beschreibung der Studie hinterlegen zu können, ist dieses optionle Feld vorgesehen. Hier können auch Sonderzeichen und Umlaute usw. eingegeben werden.\nRouting für Erhebungsteile aktivieren: Studien bestehen aus einem oder mehreren Erhebungsteilen. Die Erhebungsteile werden per Default als lineare Abfolge administriert. Wenn die Option Routing für Erhebungsteile aktivieren ausgewählt ist, kann die Reihenfolge der Erhebungsteile mit einem Blockly-basierten Routing definiert werden. Dadurch sind dynamische Abfolgen von Erhebungsteilen möglich, wobei auch Aufrufparameter der Studie bspw. für die Zuordnung von unterschiedlichen Reihenfolgen genutzt werden können.\nBildschirmgröße überprüfen: In Erhebungen, bei denen die Bildschirmgröße nicht bekannt ist, kann mit dieser Option ein Größenvergleich von Objekten (EC-Karte, Banknote, Personalausweis) mit Darstellungen auf dem Bildschirm vorgenommen werden.\n\n\nDie Geräteprüfung erfolgt mit folgendem Dialog:\n\n\n\n\n\nWenn die Option Passende Bildschirmgröße erzwingen (im Abschnitt Anzeige) nicht aktiviert ist, dann kann die Testbearbeitung dennoch begonnen werden. Es wird, wenn die Auflösung zu klein ist, folgender Dialog angezeigt:\n\n\n\n\n\nHinweis: Diese Option ist zur Zeit nicht weiter konfigurierbar.\n\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#zugang-zu-studien-login",
    "href": "preparation-studies.html#zugang-zu-studien-login",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Die IRTlib Software unterstützt verschiedene Wege, wie sich Personen (Testteilnehmer, Befragte, …) für ein Assessment authentifizieren können. Die Konfigurationen umfassen zwei Aspekte:\n\nLogin-Modus: Wird ein Zugang benötigt (Login, Login+Passwort, Passphrases/Token) oder nicht? Und wenn Zugangsdaten benötigt werden, was sind gültige Werte?\nLoginquelle: Wie wird die Login-Information abgefragt (direkte Eingabe auf der Plattform, CBA ItemBuilder Item, ….) oder übergeben (Login-Parameter oder Aufruf-Parameter)?\n\nDetaillierte Informationen zu der Konfiguration der Anmeldung einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nIm Abschnitt Login kann konfiguriert werden, wie Testteilnehmer, die ein Assessment starten (entweder durch Aufruf eines Links in einem Browser der auf den Online-IRTlib-Player verweist oder durch Start des Offline-IRTlib-Players), identifiziert oder authentifiziert werden sollen.\n\nLogin-Modus: Die IRTlib-Software unterstützt verschiedene Login-Modi.\n\nZufälliger Inditifikator: Wenn eine Sitzung zum ersten Mal gestartet wird, wird in diesem Login-Modus ein Identifikator generiert. Diese zufällige, aber eindeutige Zeichenkette (eine sogenannte UUID, d.h. ein Universally Unique Identifier) wird als Personenidentifikator in allen Daten (d.h. Ergebnisdaten) und allen anderen gespeicherten Daten (z.B. Log-Daten/Trace-Daten, Snapshot-Daten, etc.) verwendet.\nBenutzername: Wenn von den Testteilnehmern erwartet wird, dass sie sich durch eine eindeutige Zeichenfolge identifizieren (z.B. eine Zahl oder ein Text, der als Zugangskennung verwendet wird), kann eine Studie mit dem Login-Modus Benutzername konfiguriert werden. Der Zugang zum Assessment ist dann nur möglich, wennd die als Benutzername eingegebene Zeichenkette gültig ist. Die zugrundeliegende Idee ist, dass die Studienkonfiguration mit einer Liste gültiger Benutzernamen geladen wird und dass ein Testteilnehmer einen gültigen Benutzernamen eingeben muss, bevor er oder sie das Assessment starten kann. Nur authentifizierte Testteilnehmer können auf die als Studie definierten Assessmentinhalte zugreifen und die Aufgaben bzw. Fragen beantworten.\nBenutzername und Passwort: Wenn in einer Studie nicht nur gültige Benutzernamen, sondern ein Passwort zur Authentifizierung der Testpersonen verwendet werden soll, ermöglicht der Login-Modus Benutzername und Passwort eine Eingabe von Benutzernamen und Passwort. Analog zu Benutzername müssen dann beide Informationen in der Studienkonfiguration hinterlegt sein.\nZugriffstoken: Wenn in der Studienkonfiguration die gültigen Benutzernamen nicht gespeichert werden sollen, kann die Option Zugriffstoken verwendet werden. Jedes Token, das einem definierten Schema entspricht, wird dann akzeptiert und als Identifikator für die Testteilnehmer verwendet.\n\nSpeicher für Sessiondaten: Bei Onlineauslieferungen kann nach einer Unterbrechung ein Assessment forgesetzt werden. Diese Funktionalität wird bspw. auch benötigt, wenn im Browser die Seite neu geladen wird (bspw. durch Erzwingen eines Reload/F5, oder durch Schließen und erneutes Aufrufen der URL). Um sicherzustellen, dass Sitzungen, die von derselben Person (d.h. vom selben Browser) stammen, auch fortgesetzt werden können, kann die Software so konfiguriert werden, dass der Identifikator im Client gespeichert wird.\nGültige Werte: Die IRTlib-Software bietet für die Login-Modi Benutzername, Benutzername + Passwort und Zugriffstoken folgende Mechanismen zur Validierung von Anmeldeinformationen:\n\nListe: Eine Liste gültiger Berechtigungen (Benutzername oder Benutzername und Passwort, je nach Konfiguration des Login-Modus) kann als Teil der Studienkonfiguration definiert werden. Die Informationen können entweder im IRTlib-Editor bearbeitet oder aus einer CSV-Datei importiert werden. Definierte Werte können auch als CSV-Datei exportiert werden.\nCode zur Prüfung: Es kann eine Blockly-Funktion angegeben werden, welche Wahr zurückmeldet, wenn die übergebenen Anmeldedaten gültig sind (sonst Falsch).\n\nGruppenlogin: Je nach Login-Modus dienen Benutzername oder Zugriffstoken als Personenidentifikator. Wenn die Option Gruppenanmeldung aktiviert wird, dann werden diese übergebenen Anmeldedaten zur Authentifizierung verwendet, um den Testteilnehmer als Mitglied einer Gruppe zu identifizieren (d. h. nur Testteilnehmer, die den Benutzernamen kennen, können sich als Teil der Gruppe authentifizieren). Innerhalb der Gruppe wird dann ein zusätzlicher Zufallsidentifikator generiert, um verschiedene Personen aus einer Gruppe zu unterscheiden.\nLoginquelle: Die IRTlib-Software unterstützt verschiedene mögliche Optionen, wie Anmeldeinformationen bereitgestellt werden können.\n\nPlattform: Ein Anmeldedialog wird vom IRTlib-Player (d.h. der Plattform) angezeigt. Die Überschrift zur Eingabe der Zugangsdaten, die Beschriftung der Eingabe für Benutzernamen und Passwort, die Beschriftung des Weiter-Buttons, ein Begrüßungs- und ein Instruktionstext sowie ein Fehlertext bei fehlgeschlagenen Login-Versuchen können konfiguriert werden.\nParameter: Gültige Anmeldedaten für Testteilnehmer können auch über die Befehlszeile (d.h. Parameter beim Aufruf der Offline-Version des IRTlib Players) oder über URL-Parameter (d.h. Parameter beim Aufruf der Studie über einen Link auf eine Online-Version des IRTlib Players) bereitgestellt werden. In diesem Fall wird kein Anmeldedialog oder Login-Item angezeigt.\nItem: Alternativ zu einem Dialog des IRTlib-Players kann auch ein CBA ItemBuilder-Task konfiguriert werden, der als Login-Eingabemaske dient. Innerhalb des Items wird ein sogenannter ExternalPageFrame verwendet, um zur Validierung einer Eingabe einen bestimmten JavaScript-Befehl an den IRTlib-Player zu senden (ein Beispiel finden Sie hier).\n\n\n\n\nDas Login Item muss als CBA ItemBuilder-Projektdatei für die konfigurierte Laufzeitumgebung (Runtime) verfügbar sein und der Studienkonfiguration hinzugefügt werden. Um ein Login-Item zur Studienkonfiguration hinzuzufügen, kann der integrierte Importdialog verwendet werden. Mehr Informationen zum Importieren von CBA ItemBuilder-Projekten findet sich in der Hilfe zum Abschnitt Items eines Erhebungsteils.\n\n\n\nZusätzliche Parameter: Neben der Authentifizierung von Testteilnehmern können die Anmeldeinformationen in der IRTlib-Software auch als zusätzlicher Parameter hinterlegt werden, die dann bspw. in der Ablaufsteuerung verwendet werden können.\n\nParameter für Dateinamen: Der RawDataPath (d.h. der relative Pfad unter dem der Offline-IRTlib-Player die Ergebnisdaten speichert) und der MonitoringFile (d.h. der Name der Datei in welcher der Offline-IRTlib-Player Informationen fürs Studienmonitoring schreibt) können als Teil der Anmeldedaten konfiguriert werden.\nBlockly-Variablen: Zusätzliche Parameter können auch als sogenannte Preload-Variablen mit den Anmeldeinformationen hinterlegt werde.\n\n\n\n\n\nTabelle 1: Zusammenfassung der Optionen, die als Konfiguration der Anmeldung kombiniert werden können\n\n\n\n\n\n\n\n\n\n\nLogin Modus\nSpeicher für Sessiondaten\nGruppenlogin\nGültige Werte\nLoginquelle\nZusätzliche Parameter\n\n\n\n\nZufälliger Inditifikator\nja\nnein\nnein\nkeine\nnein\n\n\nBenutzername\nja\nja\nListe oder Code\nPlattform, Item + Parameter\nWerte oder Parameter\n\n\nBenutzername und Passwort\nja\nja\nListe oder Code\nPlattform, Item + Parameter\nWerte oder Parameter\n\n\nZugriffstoken\nja\nja\nSchema oder Code\nPlattform, Item + Parameter\nParameter"
  },
  {
    "objectID": "preparation-studies.html#anzeige-von-assessment-inhalten",
    "href": "preparation-studies.html#anzeige-von-assessment-inhalten",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Studien können festlegen, wie der CBA ItemBuilder-Inhalt dargestellt werden soll. Die Einstellungen im Aschnitt Anzeige können sich auf die Skalierung und die Ausrichtung der Inhalte sowie auf das Verhalten der IRTlib Player-Anwendung beziehen.\nDetaillierte Informationen zu der Konfiguration der Anzeige einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nFür die Konfiguration der Anzeige stehen ausgewählte Optionen zur Verfügung, die sich auf die Darstellung der Assessmentinhalte und die Verwendung von CBA ItemBuilder-Inhalten beziehen, welche mit einem festgelegten Seitenverhältnis (Breite und Höhe) erstellt werden.\n\n\nIn der Auswahl Fenstermodus kann konfiguriert werden, ob ein zusätzliches Fenster im IRTlib Player angezeigt wird. Die Konfiguration wird je nach Umgebung unterschiedlich umgesetzt:\n\nWindow: In diesem Fenstermodus wird im Offline-IRTlib Player ein reguläres Programmfenster verwendet, im Online-IRTlib Player wird der Assessmentinhalt im normalen Browserbereich angezeigt, und die Adressleiste und die Navigationsschaltflächen des Browsers sind in diesem Modus sichtbar.\n\n\n\n\n\nVollbild: Der Offline-IRTlib Player startet direkt im Vollbildmodus, wenn diese Option konfiguriert ist. Damit verbunden ist auch ein Kiosk-Modus, d.h. der Zugriff auf andere Programme und das (versehentliche) Beenden des Programms ist nur über den Task Manager möglich. Soll die Möglichkeit zum Beenden der Testung bspw. für einen Testleiter möglich sein, muss ein Testleitermenü konfiguriert sein.\n\n\nDer Online-IRTlib Player kann Assessmentinhalte auch im Vollbildmodus anzeigen, wenn diese Option gewählt ist. Wird der Vollbildmodus im Browser verlassen, wird dann der Assessmentinhalt ausgeblendet. Da automatisiert nicht in einem Browser in den Vollbildmodus gewechselt werden kann, sieht die Zielperson zunächst folgende Nachricht der Plattform:\n\n\n\n\n\nDurch klick auf den Button Vollbild Aktivieren wird der Vollbildmodus gestartet und der Assessmentinhalt dann ohne Fensterrahmen und Navigationsflächen des Browsers dargestellt. Für kurze Zeit wird dann von den Browser typischerweise ein Hinweis eingeblendet dass mit Esc der Vollbildmodus wieder beendet werden kann.\n\n\n\n\n\nBeachten Sie, dass diese Funktion nur in Browsern zur Verfügung steht, die den Vollbildmodus unterstützen (insbesondere auf älteren mobilen Geräten wird der Vollbildmodus nicht vollständig unterstützt; siehe für Details z.B. auf caniuse.com).\n\n\nVollbild, wenn unterstützt: In diesem Modus wird das Assessment im Online-IRTlib Player nur dann im im Vollbildmodus angezeigt, wenn der Browser den Vollbildmodus unterstützt. Der Inhalt des computerbasierten Assessments wird jedoch im Fenstermodus angezeigt, wenn eine Studie online bereitgestellt wird und ein Browser verwendet wird, der den Vollbildmodus nicht unterstützt. Für den IRlLib Player offline ist diese Konfiguration identisch mit Vollbild.\n\n\n\n\n\nDebug: Dieser Modus ermöglicht während der Testausführung den Zugriff auf die Entwicklerwerkzeuge des Browsers, die für die Fehlersuche von Softwareentwicklern vorgesehen sind.\n\n\nWenn der Offline-IRTlib Player mit einer Studie gestartet wird, welche als Festermodus den Eintrag Debug konfiguriert hat, dann lassen sich über die rechte Maustaste während der Aufgabenpräsentation die sogenannten Entwickertools (DevTools) abrufen.\n\n\n\n\n\n\n\n\nAssessmentinhalte, die mit dem CBA ItemBuilder erstellt werden, werden für eine konkrete Größe in Pixeln (Breite mal Höhe) erstellt. Für die Darstellung auf Geräten mit unterschiedlichen Bildschirmgröße und Bildschirmauflösungen können die Inhalte dann skaliert werden. Im CBA ItemBuilder stehen deshalb in der Preview die Option unter Scaling Options zur Verfügung:\n\n\n\nIm IRTlib Editor können analoge Einstellung vorgenommen werden.\n\nSkalierung: Einstellung wie Inhalte sollen angepasst werden, wenn verfügbarer Platz und Größe der Items abweichen (Scaling Mode).\n\nkeine: Die Inhalte werden ohne Anpassung an die verfügbare Fenster- bzw. Bildschirmgröße angezeigt (entspricht None).\nhochskalieren: Inhalte werden vergrößert, damit der verfügbare Platz ausgenutzt wird (entspricht Up).\nrunterskalieren: Inhalte werden verkleinert, damit sie auf den Bildschirm/ins Fenster passen (entspricht Down).\nFenstergröße: Inhalte werden vergrößert und verkleinert (entspricht Both).\n\nHorizontale Ausrichtung: Die Optionen zentriert / links / rechts werden genutzt um Iteminhalte horizontal auszurichten, wenn die Breite von Fenster oder Bildschirm größer ist als die Breite des Inhalts.\nVertikale Ausrichtung: Die Optionen zentriert / oben / unten werden genutzt um Iteminhalte vertikal auszurichten, wenn die Höhe von Fenster oder Bildschirm größer ist als die Höhe des Inhalts.\n\n\n\n\nPassende Bildschirmgröße erzwingen: Wenn bei Skalierung nicht runterskalieren oder Fenstergröße ausgewählt ist, kann über diese Option erzwungen werden, dass man nur dann mit der Aufgabenbearbeitung starten kann, wenn die verfügbare Größe des Fensters bzw. Bildschirms größer ist als die benötigte Breite/Höhe der Items. Andernfalls wird folgende Nachricht angezeigt:\n\n\n\n\n\nHinweis: Die Einstellungen zur Anzeige beziehen sich auf alle Erhebungsteile innerhalb einer Studie. Werden in einem IRTlib-Player mehrere Studien konfiguriert, müssen die Einstellungen zueinander passen, d.h. es ist nicht mögliche mit einer Instanz eines IRTlib-Players gleichzeitig eine Studie im Fenstermodus: Fenster oder im Fenstermodus: Vollbild zu administrieren.\n\nWenn geänderte Einstellungen erhalten bleiben sollen, müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#menü-für-testadministratoren",
    "href": "preparation-studies.html#menü-für-testadministratoren",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Wenn die Durchführung von Assessments begleitet durch Testleiter oder Interviewer erfolgt, können Funktionen passwortgeschützt für Testleiter definiert werden.\n\n\n\n\n\n\nWarnung\n\n\n\nAuch wenn Sie die Funktionalität eines Testadministratormenüs für die Durchführung Ihrer Datenerfassung nicht benötigen, sollten Sie dennoch ein Testadministratormenü definieren, wenn Sie planen, mit dem IRTlib Player Daten offline zu erfassen. Nur so können Sie sicherstellen, dass Sie die Anwendung im Falle unvorhergesehener Ereignisse ohne den Task-Manager (und ohne möglichen Datenverlust) beenden können.\n\n\nDetaillierte Informationen zu der Konfiguration des Testleitermenüs finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDie Konfiguration des Menüs für Testadministratoren erfolgt in zwei Schritten. Zunächst muss eine Tastenkombination definiert werden, mit der das Testleitermenü aufgerufen werden kann. Wird diese Tastenkombination während der Testbearbeitung gedrückt, erscheint ein Fenster zur Passworteingabe. Testadministratoren geben das (nur) ihnen bekannte Passwort ein und erhalten so Zugriff auf ausgewählte Funktionen. Zu diesem Zweck müssen in einem zweiten Schritt eine oder mehrere Rollen im IRTlib Editor definiert werden.\n\n\nZunächst muss eine Tastenkombination definiert werden.\n\nTaste: Die Konfiguration der Tastenkombination für das Testleitermenü erfordert zunächst die Definition einer Taste. Um eine Taste festzulegen klickt man in das Feld und drückt die Taste, welche für das Testleitermenü verwendet werden soll.\nModifikatoren (Alt, Strg und Shift): Für eine Taste kann dann zusätzlich festgelegt werden, ob eine oder mehrere Modifkatoren gedrück werden müssen damit das Testleitermenü geöffnet wird.\n\nBeispiel:\n\nDie folgende Konfiguration definiert die Tastenkombination Strg + Shift+ X:\n\n\n\n\nDie definierte Tastenkombination öffnet nur die Option zur Eingabe eines Passowrt für Testleiter während der Testbearbeitung im IRTlib Player. Um die Funktion zu nutzen, ist ein Passwort notwendig, welches zusammen mit einer Rolle im zweiten Schritt definiert wird.\n\n\n\nNach dem Aufruf der definierten Tastenkombination wird während der Testbearbeitung die Aufforderung zur Eingabe eines Passworts angezeigt:\n\nWelche Funktionen nun wirklich zugreifbar sind wird dadurch gesteuert, welches Passwort eingegeben wird. Nur wenn ein gültige Passwort bekannt ist, können Funktionen der Testleitung aufgerufen werden.\nBeispiel:\n\nIn der folgenden Konfiguration können Testleiter mit diesem Passwort zur nächsten Aufgabe springen (Weiter) oder die Anwendung beenden (Sitzung beenden):\n\n\n\n\n\nUm eine Rolle zu definieren, muss zunächst das +-Symbol unten rechts geklickt werden. Danach kann der Name einer Rolle und ein Passwort definiert:\n\n\n\n\n\nDer Name der Rolle dient nur der Dokumentation. Entscheidend für die Funktionalität ist die Vergabe eines eindeutigen Passwortes und die Auswahl einer oder mehrerer der folgenden Funktionen:\n\n\nAufgabe zurück: Ermöglicht die Navigation zur vorherigen Aufgabe.\nAufgabe vor: Ermöglicht die Navigation zur nächsten Aufgabe.\nItemliste abbrechen: Ermöglicht die Abarbeitung der aktuellen Itemliste abzubrechen. Diese Option ist insbesondere sinnvoll, wenn in einem Erhebungsteil die Option Routing aktiviert ist und die Definition von CBA ItemBuilder Tasks mit Hilfe von Itemlisten umgesetzt ist.\n\nErhebungsteil abbrechen: Ermöglicht den Abbruch des aktuellen Erhebungsteils.\nSitzung beenden: Ermöglicht das Beenden der aktuellen Sitzung.\nLautstärkeregelung: Ermöglicht die Änderung der Lautstärke.\n\nDie Audiodatei, welche zur Kontrolle der Audioausgabe abgespielt wird nachdem die Lautstärke verändert wurde, kann im Abschnitt Audio für Soundtest eingefügt und in der Studienkonfiguration hinterlegt werden.\n\nWenn geänderte Einstellungen erhalten bleiben sollen, müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#abschluss-von-erhebungen",
    "href": "preparation-studies.html#abschluss-von-erhebungen",
    "title": "Vorbereitung Studien / Preparation Studies",
    "section": "",
    "text": "Für die Integration von Assessments in externe Abläufe besteht die Möglichkeit, zu konfigurieren, wie nach der Bearbeitung der Assessmentinhalte in einer Session vorgegangen werden soll, was also am Session-Ende geschehen wird.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nEine Session bezieht sich auf die Durchführung einer Erhebung mit einer Person zu einem bestimmten Zeitpunkt. Der in einer Session angezeigte Inhalt entspricht einer konfigurierten Studie, wie sie im IRTlib Editor erstellt werden kann. Nachdem alle in einer Studie definierten Erhebungsteile durchgeführt worden sind, wird das Session-Ende erreicht.\n\n\nWas nach einem Session-Ende erfolgt, d.h. wie sich der IRTlib Players am Ende einer Sitzung verhält, kann mit den folgenden Optionen festgelegt werden:\n\nNeue Session starten: Es wird eine neue Sitzung gestartet. Dieses Verhalten ist nicht sinnvoll, wenn die Anmeldedaten übergeben werden (entweder als Startup-Parameter oder als URL-Parameter).\nEndtext anzeigen: Wenn diese Option ausgewählt ist, zeigt die Plattform den konfigurierten Text an. Der Text kann als Nachricht auf Endseite konfiguriert werden.\nEnd-Item anzeigen: Analog zu einem Login-Item kann auch ein CBA ItemBuilder-Item definiert werden, das am Ende einer Sitzung angezeigt wird.\n\n\nDas End-Item kann schließlich das Beenden des Offline-IRTlib Players anstoßen. Ein Beispiel für ein End-Item mit dem notwendigen JavaScript-Aufruf findet sich hier.\n\n\nRedirect to Exit URL (Redirect zu Exit-Url): Bei Online-Lieferungen mit dem IRTlib Player ist es möglich, auf eine URL umzuleiten. Die Weiterleitungs-URL kann dann konfiguriert werden.\n\n\n\n\n\nSession ID kann wiederverwendet werden: Wenn diese Option aktiviert ist, können mehrere Datenerfassungen mit einer Session-ID administriert werden.\n\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-overview.html",
    "href": "preparation-overview.html",
    "title": "Vorbereitung: Übersicht / Preparation: Overview",
    "section": "",
    "text": "Die Vorbereitung eines computerbasierten Assessments auf der Grundlage von CBA ItemBuilder-Inhalten beginnt mit der Verwendung des IRTlib-Editors zur Erstellung einer Studienkonfiguration. Dies umfasst in der Regel die folgenden Schritte:\n\n\n\n\n\n\nOptional: Verwenden eine Runtime für CBA ItemBuilder vor Version 9.9?\n\n\n\n\n\n\nVoraussetzung: Überprüfen Sie die Verfügbarkeit der Runtime. Der IRTlib Editor kann zur Vorbereitung von Assessments mit im CBA ItemBuilder erstellten Inhalten verwendet werden. Für die Verwendung von CBA ItemBuilder Tasks, die in Projektdateien gespeichert sind, ist eine Runtime (d.h. die Dateien main.*.js und main.*.css) in der Version erforderlich, die genau der Version des CBA ItemBuilders entspricht, der zur Erstellung der Items verwendet wurde (z.B. 9.9.0). Bevor Sie den IRTLib-Editor verwenden, vergewissern Sie sich, dass die erforderliche Runtime enthalten ist, oder importieren Sie die Runtime-Dateien (siehe Abschnitt Einstellungen für Details).\n\nHinweis: Für die Verwendung von CBA ItemBuilder-Items ab Version 9.9 ist dieser Schritt in der Regel nicht notwendig.\n\n\n\n\nErstellen einer neuen Studie: Der IRTlib-Editor wird verwendet, um sogenannte Studien zu konfigurieren. Die Versionen von Studien können im Editor nachverfolgt werden, Studien können dort veröffentlicht (d.h. für die Datenerfassung versiegelt) werden. Um mit dem IRTlib-Editor mit der Erstellung von Inhalten zu beginnen, muss zuerst eine Studie erstellt werden (siehe Abschnitt Studien für Details).\n\n\n\n\n\n\n\nHinweis: Das Anlegen einer Studie ist immer notwendig.\n\n\n\n\n\nBeachten Sie, dass mindestens eine Studie im IRTlib Editor definiert sein muss, bevor eine Studienkonfiguration zur Datenerfassung mit einem IRTlib Player verwendet werden kann.\n\n\n\n\nBasiskonfigurationen für Studie festlegen (Info): Zu den Basiskonfigurationen, die sich auf den Inhalt einer vorbereiteten Studie beziehen, gehören die Studienbezeichnung und -beschreibung, der Anmeldemodus, die Anzeigekonfiguration, das Menü für die Testadministratoren und die Angabe, wie nach Abschluss aller in einer Studie definierten Inhalte fortgefahren werden soll (siehe Abschnitt Studien für weitere Einzelheiten).\nErstellen eines neuen Erhebungsteils: Jede Studie besteht aus einem oder mehreren Erhebungsteilen. Erhebungsteile werden als Bausteine von Assessments betrachtet, die zusammen verwaltet werden, wie z.B. Items aus einer bestimmte Domäne. Erhebungsteile vom Typ CBA ItemBuilder können verwendet werden, um CBA ItemBuilder-Aufgaben in einer linearen Sequenz oder mit Blockly-basiertem Routing zu administrieren.\n\n\n\n\n\n\n\nHinweis: Das Anlegen eines Erhebungsteils ist immer notwendig.\n\n\n\n\n\nBeachten Sie, dass jede Studie mindestens einen im IRTlib Editor definierten Erhebungsteil benötigt, bevor eine Studienkonfiguration zur Datenerhebung mit einem IRTlib Player verwendet werden kann.\n\n\n\n\nGrundeinstellungen für Erhebungsteil konfigurieren (Info): Ein Erhebungsteil vom Typ CBA ItemBuilder basiert auf einer Menge von CBA ItemBuilder-Tasks. Jede CBA ItemBuilder-Projektdatei benötigt mindestens einen Task, es werden aber auch Projekte mit mehreren Tasks unterstützt. Wenn CBA ItemBuilder-Inhalte mit einem gemeinsamen Zeitlimit über Tasks hinweg administriert werden sollen, erlauben Erhebungsteile die Zuordnung von Aufgaben zu einer Struktur, die Assessmentinhalte unterscheidet, welche vor einem zeitlich begrenzten Abschnitt administriert werden (z.B. Instruktionen, im Abschnitt Vorspann-Items), Inhalte die nach einem zeitlich begrenzten Abschnitt administriert werden (z.B. Danksagung, im Abschnitt Nachspann-Items) und dazwischen liegende Aufgaben mit begrenzter Zeit (Items, siehe Abschnitt Erhebungsteile).\nItems Hinzufügen: Um die Definition eines Erhebungsteils abzuschließen, müssen die CBA ItemBuilder-Projektdateien in den Abschnitt Items importiert werden. Standardmäßig wird davon ausgegangen, dass die Reihenfolge der CBA ItemBuilder-Tasks linear ist. Wenn jedoch das Routing für einen Studienteil aktiviert ist, kann das Blockly-basierte Ablaufdefinition verwendet werden, um verschiedene Testdesigns zu implementieren (z. B. mehrere Hefte, mehrstufige Tests usw.).\n\n\n\nFür die Verwendung des IRTlib Editors ist eine Programmhilfe direkt in die Anwendung integriert, welche über das kleine ?-Symbol oben rechts eingeblendet werden kann.\n\n\n\nBeispiel des IRTlib Editors mit eingeblendeter Hilfe\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\nDie Inhalte dieser Hilfe-Seiten aus dem IRTlib Editor sind in diese IRTlib Dokumentation integriert und werden immer in diesem Rahmen mit der überschrift Eingebettete Programmhilfe dargestellt.\n\n\n\n\n\nDie IRTlib Software wird benötigt, um die mit dem CBA ItemBuilder erstellten Assessmentinhalte anzuzeigen und für Datenerhebungen zu verwenden. Dafür müssen die Projektdateien (ZIP-Archive), die mit dem CBA ItemBuilder erstellt werden können, vorliegen.\n\n\nJede CBA ItemBuilder-Projektdatei muss mindestens einen Task definieren. Nur Tasks können in der IRTlib Software verwendet werden. Dass ein Task vollständig definiert ist, lässt sich in der Preview des CBA ItemBuilder leicht überprüfen:\n\n\n\nBeispiel aus CBA ItemBuilder zur Anforderung einer Preview für einen Task\n\n\n\n\n\n\n\n\nDie IRTlib Software benötigt definierte Tasks.\n\n\n\nAssessmentinhalte können mit der IRTlib Software aus einzelnen Task zusammgengesetzt werden. Die Reihenfolge von Tasks kann statisch als lineare Sequenz oder als programmierter Ablauf in Blockly definiert werden. Aus der IRTlib Software heraus können keine einzelnen Seiten innerhalb von CBA ItemBuilder-Tasks angesteuert werden.\n\n\nCBA ItemBuilder-Projektdateien welche nur über die Option Project oder Page in der Preview angezeigt werden können, lassen sich in der IRTlib Software nicht verwenden.\n\n\n\nMit Hilfe der Preview des CBA ItemBuilder kann auch geprüft werden, ob die Assessmentinhalte in der gewünschten Skalierung, die unter Scaling Options eingestellt werden kann, den Erfordernissen entsprechend angezeigt werden.\n\n\n\nEinstellungen zu Scaling Options aus CBA ItemBuilder-Preview\n\n\nEinstellungen analog zur Preview können in dem IRTlib Editor für die Anzeigeeinstellungen einer Studie definiert werden (siehe Abschnitt Studien).\n\n\n\nDie IRTlib Software ist dafür gedacht, Daten mit Hilfe von CBA ItemBuilder-Task zu erheben. Was aus der Bearbeitung eines Tasks an Ergebnisvariablen gespeichert wird, können Itemautoren in der Scoring-Definition eines Tasks definieren.\n\n\n\n\n\n\nDas Scoring muss bereits im CBA ItemBuilder definiert werden.\n\n\n\nAus der Bearbeitung von Tasks werden die als Classes definierten Ergebnisvariablen gespeichert, deren Werte entweder einzelne Hits sein können, oder die Übernahme von Informationen mit Hilfe des sogenannten ResultText-Operators im CBA ItemBuilder.\n\n\nMit Hilfe des eingebauten Scoring Debug Window sollte das Scoring einzelner CBA ItemBuider-Tasks bereits im CBA ItemBuilder geprüft werden, bevor die Assessmentinhalte mit Hilfe der IRTlib Software zu Studien mit einem oder mehreren Erhebungsteilen kombiniert werden. Weitere Hinweise zu vorgeschlagenen Prüfungen sind im Abschnitt Auslieferungen Testen und Freigeben formuliert.\n\n\n\n\n\n\nLog-Daten werden automatisch gesammelt.\n\n\n\nOhne weitere Konfiguration werden Log-Daten in den mit dem CBA ItemBuilder erstellten Assessmentinhalten automatisch erfasst und über die IRTlib Software gesammelt.\n\n\n\n\n\nDie mit dem CBA ItemBuilder erstellten Assessmentinhalte können Multimedia-Inhalte (Bilder, Videos, Audiodateien) enthalten. Bilder und Videos werden dabei in einer Größe angezeigt, die in der entsprechenden Komponente des CBA ItemBuilder im Page Editor verwendet wird. In den Projektdateien werden Bilder, Videos und Audiodateien als Ressourcen gespeichert, sobald diese über den Ressource Browser eingefügt wurden. Nicht verwendete Ressourcen bleiben dabei in den Projektdateien enthalten.\n\n\n\n\n\n\nDateigröße von CBA ItemBuilder-Projektdateien sollte möglichst klein sein.\n\n\n\nDie Dateigröße von CBA ItemBuilder-Projekdateien ist für die Verwendung insbesondere in Online-Auslieferungen relevant und sollte so klein wie möglich gehalten werden.\n\n\nVor der Verwendung von CBA ItemBuilder-Projektdateien wird empfohlen, folgende Punkte zu berücksichtigen:\n\nBilder und Videos nur in der benötigten Größe: Bilder und Videos können ohne Qualitätsverlust auf die Größe (Breite/Width udn Höhe/Height) reduziert werden, in welcher sie in CBA ItemBuilder-Projekten auch wirklich verwendet werden.\nBilder wenn möglich komprimieren: Ohne die Bildgröße zu verändern können Bilder häufig in der Dateigröße weiter reduziert werden.\nVideos wenn möglich komprimieren: Ohne die Video zu verändern können Videos häufig in der Dateigröße weiter reduziert werden.\nAudios nicht in höchster Qualität: Wenn nicht notwendig, sollten Audio-Dateien in ihrer Qualität soweit reduziert werden, dass sie noch akzeptabel klingen, aber bzgl. der Übertragungszeiten optimiert sind.\nEntfernen nicht verwendeter Ressourcen: Der CBA ItemBuilder stellt eine Schaltfläche im Resource Browser zur verfügung, um nicht verwendeten Ressourcen automatisch zu entfernen. Diese Funktion sollte abschließend genutzt werden, damit die Projekt-Dateien keine unnötigen Ressourcen enthalten.\n\nEin sorgsamer Umgang mit Ressourcen und eine Optimierung der Dateigröße von CBA ItemBuilder-Projektdateien kann entscheidend für ein flüssiges und reibungsfreies Assessment sein, was sich mit der IRTlib Software online ausliefern und bspw. über Mobilgeräte mit beschränkter Internetbandbreite nutze lässt."
  },
  {
    "objectID": "preparation-overview.html#eingebettete-programhilfe",
    "href": "preparation-overview.html#eingebettete-programhilfe",
    "title": "Vorbereitung: Übersicht / Preparation: Overview",
    "section": "",
    "text": "Für die Verwendung des IRTlib Editors ist eine Programmhilfe direkt in die Anwendung integriert, welche über das kleine ?-Symbol oben rechts eingeblendet werden kann.\n\n\n\nBeispiel des IRTlib Editors mit eingeblendeter Hilfe\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\nDie Inhalte dieser Hilfe-Seiten aus dem IRTlib Editor sind in diese IRTlib Dokumentation integriert und werden immer in diesem Rahmen mit der überschrift Eingebettete Programmhilfe dargestellt."
  },
  {
    "objectID": "preparation-overview.html#vorbereitung-von-cba-itembuilder-inhalten",
    "href": "preparation-overview.html#vorbereitung-von-cba-itembuilder-inhalten",
    "title": "Vorbereitung: Übersicht / Preparation: Overview",
    "section": "",
    "text": "Die IRTlib Software wird benötigt, um die mit dem CBA ItemBuilder erstellten Assessmentinhalte anzuzeigen und für Datenerhebungen zu verwenden. Dafür müssen die Projektdateien (ZIP-Archive), die mit dem CBA ItemBuilder erstellt werden können, vorliegen.\n\n\nJede CBA ItemBuilder-Projektdatei muss mindestens einen Task definieren. Nur Tasks können in der IRTlib Software verwendet werden. Dass ein Task vollständig definiert ist, lässt sich in der Preview des CBA ItemBuilder leicht überprüfen:\n\n\n\nBeispiel aus CBA ItemBuilder zur Anforderung einer Preview für einen Task\n\n\n\n\n\n\n\n\nDie IRTlib Software benötigt definierte Tasks.\n\n\n\nAssessmentinhalte können mit der IRTlib Software aus einzelnen Task zusammgengesetzt werden. Die Reihenfolge von Tasks kann statisch als lineare Sequenz oder als programmierter Ablauf in Blockly definiert werden. Aus der IRTlib Software heraus können keine einzelnen Seiten innerhalb von CBA ItemBuilder-Tasks angesteuert werden.\n\n\nCBA ItemBuilder-Projektdateien welche nur über die Option Project oder Page in der Preview angezeigt werden können, lassen sich in der IRTlib Software nicht verwenden.\n\n\n\nMit Hilfe der Preview des CBA ItemBuilder kann auch geprüft werden, ob die Assessmentinhalte in der gewünschten Skalierung, die unter Scaling Options eingestellt werden kann, den Erfordernissen entsprechend angezeigt werden.\n\n\n\nEinstellungen zu Scaling Options aus CBA ItemBuilder-Preview\n\n\nEinstellungen analog zur Preview können in dem IRTlib Editor für die Anzeigeeinstellungen einer Studie definiert werden (siehe Abschnitt Studien).\n\n\n\nDie IRTlib Software ist dafür gedacht, Daten mit Hilfe von CBA ItemBuilder-Task zu erheben. Was aus der Bearbeitung eines Tasks an Ergebnisvariablen gespeichert wird, können Itemautoren in der Scoring-Definition eines Tasks definieren.\n\n\n\n\n\n\nDas Scoring muss bereits im CBA ItemBuilder definiert werden.\n\n\n\nAus der Bearbeitung von Tasks werden die als Classes definierten Ergebnisvariablen gespeichert, deren Werte entweder einzelne Hits sein können, oder die Übernahme von Informationen mit Hilfe des sogenannten ResultText-Operators im CBA ItemBuilder.\n\n\nMit Hilfe des eingebauten Scoring Debug Window sollte das Scoring einzelner CBA ItemBuider-Tasks bereits im CBA ItemBuilder geprüft werden, bevor die Assessmentinhalte mit Hilfe der IRTlib Software zu Studien mit einem oder mehreren Erhebungsteilen kombiniert werden. Weitere Hinweise zu vorgeschlagenen Prüfungen sind im Abschnitt Auslieferungen Testen und Freigeben formuliert.\n\n\n\n\n\n\nLog-Daten werden automatisch gesammelt.\n\n\n\nOhne weitere Konfiguration werden Log-Daten in den mit dem CBA ItemBuilder erstellten Assessmentinhalten automatisch erfasst und über die IRTlib Software gesammelt.\n\n\n\n\n\nDie mit dem CBA ItemBuilder erstellten Assessmentinhalte können Multimedia-Inhalte (Bilder, Videos, Audiodateien) enthalten. Bilder und Videos werden dabei in einer Größe angezeigt, die in der entsprechenden Komponente des CBA ItemBuilder im Page Editor verwendet wird. In den Projektdateien werden Bilder, Videos und Audiodateien als Ressourcen gespeichert, sobald diese über den Ressource Browser eingefügt wurden. Nicht verwendete Ressourcen bleiben dabei in den Projektdateien enthalten.\n\n\n\n\n\n\nDateigröße von CBA ItemBuilder-Projektdateien sollte möglichst klein sein.\n\n\n\nDie Dateigröße von CBA ItemBuilder-Projekdateien ist für die Verwendung insbesondere in Online-Auslieferungen relevant und sollte so klein wie möglich gehalten werden.\n\n\nVor der Verwendung von CBA ItemBuilder-Projektdateien wird empfohlen, folgende Punkte zu berücksichtigen:\n\nBilder und Videos nur in der benötigten Größe: Bilder und Videos können ohne Qualitätsverlust auf die Größe (Breite/Width udn Höhe/Height) reduziert werden, in welcher sie in CBA ItemBuilder-Projekten auch wirklich verwendet werden.\nBilder wenn möglich komprimieren: Ohne die Bildgröße zu verändern können Bilder häufig in der Dateigröße weiter reduziert werden.\nVideos wenn möglich komprimieren: Ohne die Video zu verändern können Videos häufig in der Dateigröße weiter reduziert werden.\nAudios nicht in höchster Qualität: Wenn nicht notwendig, sollten Audio-Dateien in ihrer Qualität soweit reduziert werden, dass sie noch akzeptabel klingen, aber bzgl. der Übertragungszeiten optimiert sind.\nEntfernen nicht verwendeter Ressourcen: Der CBA ItemBuilder stellt eine Schaltfläche im Resource Browser zur verfügung, um nicht verwendeten Ressourcen automatisch zu entfernen. Diese Funktion sollte abschließend genutzt werden, damit die Projekt-Dateien keine unnötigen Ressourcen enthalten.\n\nEin sorgsamer Umgang mit Ressourcen und eine Optimierung der Dateigröße von CBA ItemBuilder-Projektdateien kann entscheidend für ein flüssiges und reibungsfreies Assessment sein, was sich mit der IRTlib Software online ausliefern und bspw. über Mobilgeräte mit beschränkter Internetbandbreite nutze lässt."
  },
  {
    "objectID": "data-collection-publish-and-export.html",
    "href": "data-collection-publish-and-export.html",
    "title": "Datenerhebung: Veröffentlichen & Exportieren / Data Collection: Publish & Export",
    "section": "",
    "text": "Die Konfiguration von Studien und den darin enthaltenen Erhebungsteil(en) erfolgt im IRTlib Editor. Änderungen werden innerhalb des IRTlib Editors immer gespeichert, wenn das Disketten-Symbol unten rechts geklickt wird. Während der Vorbereitung einer Studie speichert man die Änderungen, wenn sie übernommen werden sollen. Aber sobald die Vorbereitung abgeschlossen ist, sollten Änderungen nicht mehr möglich sein oder zumindest nachvollzogen werden, damit die Version im IRTlib Editor der Version im IRTlib Player entspricht.\nUm diesen Prozess der Verwendung von IRTlib Editor und IRTlib Player zu unterstützen, ist folgendes Konzept implementiert. Damit zu jeder Zeit eindeutig benennbar ist, mit welcher Konfiguration einer Studie eine Datenerhebung durchgeführt wird, muss die Konfiguration vor der Übertragung an einen IRTlib Player versiegelt werden.\nDas geschieht in der Ansicht Veröffentlichen einer Studie, in welcher die Studienversionen aufgelistet werden. Bei einer neuen Studie sieht diese Ansicht zunächst so aus:\n\nIn diesem Zustand könenn Sie Änderungen an den Einstellung der Studie und aller enthaltenen Erhebungsteile vornehmen.\nDie Schaltflächen zum Validieren, Herunterladen und Veröffentlichen von Studien sind ausgegraut, weil keine Revision markiert ist. Durch Klick auf die Zeile mit der noch nicht veröffentlichten Revision 1 sind die Schaltflächen aktivierbar:\n\nBevor Sie nun fortfahren, prüfen Sie bitte ob Sie an alles gedacht haben. Dafür dient die folgende Checkliste.\n\n\n\nIst die Anmeldung konfiguriert?\n\n\nDamit nach dem Start des IRTlib Players die richtige Studie gestartet werden kann, muss ein zu der geplanten Verwendung passender Loginmodus konfiguriert sein. Die Definition des Loginmodus ist in der Studienkonfiguration im Abschnitt Login möglich.\n\n\nIst ein Testleitermenü konfiguriert?\n\n\nWenn im Offline IRTlib Player der Kiosk-Modus aktiviert ist, kann das Beenden der Anwendung ohne konfiguriertes Testleitermenü schwierig bzw. unmöglich sein. Die Definition von Tastenkombination und Passwörtern mit Rollen erfolgt in der Studienkonfiguration im Abschnitt Testleitermenü.\n\n\nSind die Items eingefügt?\n\n\nDie Assessmentinhalte werden in einem oder mehreren Erhebunsteilen konfiguriert. Die meisten CBA ItemBuilder-Tasks werden sich im Abschnitt Items eines Erhebungsteils befinden.\n\n\nSind die Laufzeitumgebungen (Runtimes) vorhanden?\n\n\nDie Konfiguration von Runtimes erfolgt in den Einstellungen.\n\nWenn Sie diese Checkliste geprüft haben können Sie mit fortsetzen wie im nächsten Abschnitt beschrieben.\n\n\n\nDer Prozess zum Validieren, Veröffentlichen und Herunterlade von Studienkonfigurationen ist in der eingebetteten Hilfe beschrieben:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nBevor eine Version einer Studie zu veröffentlicht wird, kann über die Schaltfläche Validieren geprüft werden, ob die *StudieÜ fehlerfrei konfiguriert wurde.\n\n\n\nEine Studie muss beispielsweise immer mindestens einen Erhebungsteil enthalten. Ist das nicht der Fall, erscheint beim Validieren die folgende Meldung:\n\nHinweis: Werden keine Fehler beim Validieren gefunden, wird keine weitere Nachricht angezeigt und die Studie kann veröffentlicht werden.\nWenn keine Fehler mehr enthalten sind und die Studie für den Export vorbereitet werden soll, kann eine Version erstellt werden. Dazu dient die folgende Schaltfläche:\n\n\n\nDanach erscheint der folgende Dialog:\n\nVersionen benötigen eine Bezeichnung und können optional mit einer Beschreibung dokumentiert werden. Nach dem Bestätigen mit Speichern erscheint die Studie mit einem Veröffentlichungsdatum in der Liste:\n\n\n\n\nVeröffentliche Versionen können über die folgende Schaltfläche kann die Version heruntergeladen werden:\n\n\n\nNach dem Betätigen dieser Schaltfläche erscheint ein Save As / Speichern unter - Dialog, und die vollständige Studienkonfiguration kann als ZIP-Archiv gespeichert werden. Dieses ZIP-Archiv kann dann in einem nächsten Schritt verwendet werden, um es in einen IRTlib Player zu laden.\n\n\n\nDie IRTlib Software ist so erstellt, dass im Datensatz immer die Revision der Studie gespeichert wird, sodass nachvollzogen werden kann mit welcher Konfiguration (d.h. welche CBA ItemBuilder-Inhalten und Einstellungen im IRTlib Editor) Daten erhoben werden.\nUnveröffentlichte Versionen: Es ist auch möglich, nicht veröffentliche Versionen herunterzuladen und in einem IRTlib Player auszuprobieren. Zur Sicherheit wird dann aber eine farbliche Markierung während der Testung angezeigt, damit klar erstichtlich ist dass es sich hierbei nur eine Vorabversion handelt. Mit nicht veröffentlichten Studien sollten niemals Daten erhoben werden.\nÄnderungen veröffentlichter Versionen: Versionen versiegeln die Konfiguration, und machen Änderungen durch eine Revisionsnummer, eine Bezeichnung und eine optionale Beschreibung nachvollziehbar. Änderungen nach dem Versiegeln einer Version sind aber weiterhin möglich. Bevor veränderte Versionen für eine Datenerhebung verwendet werden können, müssen diese aber ebenfalls versiegelt werden, d.h. eine neue Version muss über Veröffentlichen erstellt werden.\n\n\n\n\nEine Datenerhebung mit einem IRTlib Player kann erfolgen, wenn eine veröffentlichte Studie aus dem IRTlib Editor als ZIP-Archiv heruntergeladen wurde."
  },
  {
    "objectID": "data-collection-publish-and-export.html#checkliste-vor-dem-veröffentlichen",
    "href": "data-collection-publish-and-export.html#checkliste-vor-dem-veröffentlichen",
    "title": "Datenerhebung: Veröffentlichen & Exportieren / Data Collection: Publish & Export",
    "section": "",
    "text": "Ist die Anmeldung konfiguriert?\n\n\nDamit nach dem Start des IRTlib Players die richtige Studie gestartet werden kann, muss ein zu der geplanten Verwendung passender Loginmodus konfiguriert sein. Die Definition des Loginmodus ist in der Studienkonfiguration im Abschnitt Login möglich.\n\n\nIst ein Testleitermenü konfiguriert?\n\n\nWenn im Offline IRTlib Player der Kiosk-Modus aktiviert ist, kann das Beenden der Anwendung ohne konfiguriertes Testleitermenü schwierig bzw. unmöglich sein. Die Definition von Tastenkombination und Passwörtern mit Rollen erfolgt in der Studienkonfiguration im Abschnitt Testleitermenü.\n\n\nSind die Items eingefügt?\n\n\nDie Assessmentinhalte werden in einem oder mehreren Erhebunsteilen konfiguriert. Die meisten CBA ItemBuilder-Tasks werden sich im Abschnitt Items eines Erhebungsteils befinden.\n\n\nSind die Laufzeitumgebungen (Runtimes) vorhanden?\n\n\nDie Konfiguration von Runtimes erfolgt in den Einstellungen.\n\nWenn Sie diese Checkliste geprüft haben können Sie mit fortsetzen wie im nächsten Abschnitt beschrieben."
  },
  {
    "objectID": "data-collection-publish-and-export.html#veröffentlichen-exportieren",
    "href": "data-collection-publish-and-export.html#veröffentlichen-exportieren",
    "title": "Datenerhebung: Veröffentlichen & Exportieren / Data Collection: Publish & Export",
    "section": "",
    "text": "Der Prozess zum Validieren, Veröffentlichen und Herunterlade von Studienkonfigurationen ist in der eingebetteten Hilfe beschrieben:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nBevor eine Version einer Studie zu veröffentlicht wird, kann über die Schaltfläche Validieren geprüft werden, ob die *StudieÜ fehlerfrei konfiguriert wurde.\n\n\n\nEine Studie muss beispielsweise immer mindestens einen Erhebungsteil enthalten. Ist das nicht der Fall, erscheint beim Validieren die folgende Meldung:\n\nHinweis: Werden keine Fehler beim Validieren gefunden, wird keine weitere Nachricht angezeigt und die Studie kann veröffentlicht werden.\nWenn keine Fehler mehr enthalten sind und die Studie für den Export vorbereitet werden soll, kann eine Version erstellt werden. Dazu dient die folgende Schaltfläche:\n\n\n\nDanach erscheint der folgende Dialog:\n\nVersionen benötigen eine Bezeichnung und können optional mit einer Beschreibung dokumentiert werden. Nach dem Bestätigen mit Speichern erscheint die Studie mit einem Veröffentlichungsdatum in der Liste:\n\n\n\n\nVeröffentliche Versionen können über die folgende Schaltfläche kann die Version heruntergeladen werden:\n\n\n\nNach dem Betätigen dieser Schaltfläche erscheint ein Save As / Speichern unter - Dialog, und die vollständige Studienkonfiguration kann als ZIP-Archiv gespeichert werden. Dieses ZIP-Archiv kann dann in einem nächsten Schritt verwendet werden, um es in einen IRTlib Player zu laden.\n\n\n\nDie IRTlib Software ist so erstellt, dass im Datensatz immer die Revision der Studie gespeichert wird, sodass nachvollzogen werden kann mit welcher Konfiguration (d.h. welche CBA ItemBuilder-Inhalten und Einstellungen im IRTlib Editor) Daten erhoben werden.\nUnveröffentlichte Versionen: Es ist auch möglich, nicht veröffentliche Versionen herunterzuladen und in einem IRTlib Player auszuprobieren. Zur Sicherheit wird dann aber eine farbliche Markierung während der Testung angezeigt, damit klar erstichtlich ist dass es sich hierbei nur eine Vorabversion handelt. Mit nicht veröffentlichten Studien sollten niemals Daten erhoben werden.\nÄnderungen veröffentlichter Versionen: Versionen versiegeln die Konfiguration, und machen Änderungen durch eine Revisionsnummer, eine Bezeichnung und eine optionale Beschreibung nachvollziehbar. Änderungen nach dem Versiegeln einer Version sind aber weiterhin möglich. Bevor veränderte Versionen für eine Datenerhebung verwendet werden können, müssen diese aber ebenfalls versiegelt werden, d.h. eine neue Version muss über Veröffentlichen erstellt werden.\n\n\n\n\nEine Datenerhebung mit einem IRTlib Player kann erfolgen, wenn eine veröffentlichte Studie aus dem IRTlib Editor als ZIP-Archiv heruntergeladen wurde."
  },
  {
    "objectID": "download.html",
    "href": "download.html",
    "title": "Download & Installation",
    "section": "",
    "text": "Die IRTlib-Software wird für die Offline-Nutzung (z.Zt. für Windows-Betriebssysteme) und für die Online-Nutzung (in Form von Docker-Containern) bereitgestellt.\n\n\nDie IRTlib-Software (IRTlib Editor und IRTlib Player) für die Offline-Nutzung kann aus dem Abschnitt [Releases] des Repository https://github.com/DIPFtba/IRTlibDeploymentSoftware bezogen und heruntergeladen werden.\nIm Abschnitt Releases stehen zwei ZIP-Archive zum Download bereit.\n\nTestApp.Editor.Desktop.exe: Ist in TestApp.Editor.Desktop.zip und muss gestartet werden, umd den IRTlib Editor zu verwenden.\nTestApp.Player.Desktop.exe: Ist in TestApp.Player.Desktop.zip enthalten und muss gestartet werden, umd den IRTlib Player zu verwenden.\n\n\n\n\n\n\n\nHinweis: Versionen aus der aktuellen Entwicklung als Preview.\n\n\n\n\n\nBeachten Sie, dass der aktuellste Build im Abschnitt Preview des Release-Abschnitts des repository zu finden ist. Preview-Versionen sind die aktuellsten Version der Software, nach der letzten veröffentlichten Version der IRTlib Software. Um reproduzierbare Ergebnisse zu erhalten, sollten immer veröffentlichte Versionen verwendet werden.\n\n\n\n\n\n\n\n\n\nHinweis: Warnmeldung beim Programmstart\n\n\n\n\n\nDie automatisch erstellten Vorschauversionen des IRTlib Editors und IRTlib Players sind nicht signiert. Eine Warnmeldung des Betriebssystems muss akzeptiert werden, bevor die Programme ausgeführt werden können. Je nach Konfiguration des Betriebssystems können die ausführbaren Dateien der IRTlib Software auch als unbekannt eingestuft und vor ihrer Verwendung zusätzlich gewarnt werden.\n\n\n\n\n\nDer IRTlib Editor für die Offline-Nutzung wird als ZIP-Archiv (z.B. TestApp.Editor.Desktop.zip) bereitgestellt, das entpackt werden muss. Nach dem Entpacken des Editors kann die Anwendung TestApp.Editor.Desktop.exe auf einem Windows-Gerät gestartet werden.\nIn den Abschnitten Vorbereitung &gt; Übersicht, Vorbereitung &gt; Studien und Vorbereitung &gt; Erhebungsteile ist dokumentiert, wie man mit Hilfe von CBA ItemBuilder-Items Datenerhebungen vorbereitet und konfiguriert.\n\n\n\nDer IRTlib Player ist auch als Windows-Anwendung für die Offline-Nutzung verfügbar und wird als ZIP-Archiv (z.B. TestApp.Player.Desktop.zip) bereitgestellt. Nach dem Entpacken des IRTlib Player ist eine veröffentlichte Studienkonfiguration erforderlich, die zur Datenerhebung verwendet werden soll.\nNach dem Hinzufügen der als Studienkonfiguration bereitgestellten Inhalte einer veröffentlichten Studie kann die ausführbare Datei TestApp.Player.Desktop.exe gestartet werden (entweder mit oder ohne Startparameter).\n\nKiosk Mode: Der IRTlib Player kann über die ausführbare Datei TestApp.Player.Desktop.exe auf dem Computer, auf dem er lokal ausgeführt wird, direkt zur Datenerhebung verwendet werden. Die Studie kann dazu so konfiguriert werden, dass es in einem Kiosk Mode auf einem Bildschirm angezeigt wird und nur über den Task Manager oder das Testleitermenü beendet werden kann (siehe Vollbildmodus im Abschnitt Konfiguration zur Anzeige).\nLokaler Server: Der IRTlib Player kann aber auch als lokaler Server ausgeführt werden. Nach dem Start des Programms TestApp.Player.Server.exe kann eine konfigurierte Studie auch über Webbrowser oder andere Browser mit Kiosk Mode ausgeliefert werden (z.B. den Safe Exam Browser). Mit dieser Konfiguration lassen sich Datenerhebungen bspw. in Schulen ohne Internetverbindung aber mit einem als Bring-in-Server fungierenden Notebook durchführen.\n\nIn den Abschnitten Datenerhebung &gt; Übersicht, Datenerhebung &gt; Veröffentlichen & Export und Datenerhebung &gt; Integration & Auslieferung ist dokumentiert, wie man mit Hilfe des IRTlib Players in den unterschiedlichen Konstellationen Datenerhebungen durchführen kann.\n\n\n\n\nDie IRTlib-Software (IRTlib Editor und IRTlib Player) für die Online-Nutzung kann als Docker-Container bezogen werden. Ein Beispiel ist unter https://github.com/DIPFtba/IRTlibDeploymentSoftware zu finden.\nUm den Docker-Container zu verwenden, wird empfohlen, das Repository auf dem Zielgerät zu klonen und den Befehl ./start.sh im Ordner docker auszuführen (erfordert installiertes docker und docker compose), um die Software zu starten.\nWenn in der Datei docker-compose.yml nichts geändert wird, ist der Editor über Port 8002 und die Player-Software über Port 8001 erreichbar.\nIn dem Abschnitt Datenerhebung &gt; Integration & Auslieferung finden sich weitere Informationen zur Verwendung der Docker-Container."
  },
  {
    "objectID": "download.html#offline-windows",
    "href": "download.html#offline-windows",
    "title": "Download & Installation",
    "section": "",
    "text": "Die IRTlib-Software (IRTlib Editor und IRTlib Player) für die Offline-Nutzung kann aus dem Abschnitt [Releases] des Repository https://github.com/DIPFtba/IRTlibDeploymentSoftware bezogen und heruntergeladen werden.\nIm Abschnitt Releases stehen zwei ZIP-Archive zum Download bereit.\n\nTestApp.Editor.Desktop.exe: Ist in TestApp.Editor.Desktop.zip und muss gestartet werden, umd den IRTlib Editor zu verwenden.\nTestApp.Player.Desktop.exe: Ist in TestApp.Player.Desktop.zip enthalten und muss gestartet werden, umd den IRTlib Player zu verwenden.\n\n\n\n\n\n\n\nHinweis: Versionen aus der aktuellen Entwicklung als Preview.\n\n\n\n\n\nBeachten Sie, dass der aktuellste Build im Abschnitt Preview des Release-Abschnitts des repository zu finden ist. Preview-Versionen sind die aktuellsten Version der Software, nach der letzten veröffentlichten Version der IRTlib Software. Um reproduzierbare Ergebnisse zu erhalten, sollten immer veröffentlichte Versionen verwendet werden.\n\n\n\n\n\n\n\n\n\nHinweis: Warnmeldung beim Programmstart\n\n\n\n\n\nDie automatisch erstellten Vorschauversionen des IRTlib Editors und IRTlib Players sind nicht signiert. Eine Warnmeldung des Betriebssystems muss akzeptiert werden, bevor die Programme ausgeführt werden können. Je nach Konfiguration des Betriebssystems können die ausführbaren Dateien der IRTlib Software auch als unbekannt eingestuft und vor ihrer Verwendung zusätzlich gewarnt werden.\n\n\n\n\n\nDer IRTlib Editor für die Offline-Nutzung wird als ZIP-Archiv (z.B. TestApp.Editor.Desktop.zip) bereitgestellt, das entpackt werden muss. Nach dem Entpacken des Editors kann die Anwendung TestApp.Editor.Desktop.exe auf einem Windows-Gerät gestartet werden.\nIn den Abschnitten Vorbereitung &gt; Übersicht, Vorbereitung &gt; Studien und Vorbereitung &gt; Erhebungsteile ist dokumentiert, wie man mit Hilfe von CBA ItemBuilder-Items Datenerhebungen vorbereitet und konfiguriert.\n\n\n\nDer IRTlib Player ist auch als Windows-Anwendung für die Offline-Nutzung verfügbar und wird als ZIP-Archiv (z.B. TestApp.Player.Desktop.zip) bereitgestellt. Nach dem Entpacken des IRTlib Player ist eine veröffentlichte Studienkonfiguration erforderlich, die zur Datenerhebung verwendet werden soll.\nNach dem Hinzufügen der als Studienkonfiguration bereitgestellten Inhalte einer veröffentlichten Studie kann die ausführbare Datei TestApp.Player.Desktop.exe gestartet werden (entweder mit oder ohne Startparameter).\n\nKiosk Mode: Der IRTlib Player kann über die ausführbare Datei TestApp.Player.Desktop.exe auf dem Computer, auf dem er lokal ausgeführt wird, direkt zur Datenerhebung verwendet werden. Die Studie kann dazu so konfiguriert werden, dass es in einem Kiosk Mode auf einem Bildschirm angezeigt wird und nur über den Task Manager oder das Testleitermenü beendet werden kann (siehe Vollbildmodus im Abschnitt Konfiguration zur Anzeige).\nLokaler Server: Der IRTlib Player kann aber auch als lokaler Server ausgeführt werden. Nach dem Start des Programms TestApp.Player.Server.exe kann eine konfigurierte Studie auch über Webbrowser oder andere Browser mit Kiosk Mode ausgeliefert werden (z.B. den Safe Exam Browser). Mit dieser Konfiguration lassen sich Datenerhebungen bspw. in Schulen ohne Internetverbindung aber mit einem als Bring-in-Server fungierenden Notebook durchführen.\n\nIn den Abschnitten Datenerhebung &gt; Übersicht, Datenerhebung &gt; Veröffentlichen & Export und Datenerhebung &gt; Integration & Auslieferung ist dokumentiert, wie man mit Hilfe des IRTlib Players in den unterschiedlichen Konstellationen Datenerhebungen durchführen kann."
  },
  {
    "objectID": "download.html#online-docker",
    "href": "download.html#online-docker",
    "title": "Download & Installation",
    "section": "",
    "text": "Die IRTlib-Software (IRTlib Editor und IRTlib Player) für die Online-Nutzung kann als Docker-Container bezogen werden. Ein Beispiel ist unter https://github.com/DIPFtba/IRTlibDeploymentSoftware zu finden.\nUm den Docker-Container zu verwenden, wird empfohlen, das Repository auf dem Zielgerät zu klonen und den Befehl ./start.sh im Ordner docker auszuführen (erfordert installiertes docker und docker compose), um die Software zu starten.\nWenn in der Datei docker-compose.yml nichts geändert wird, ist der Editor über Port 8002 und die Player-Software über Port 8001 erreichbar.\nIn dem Abschnitt Datenerhebung &gt; Integration & Auslieferung finden sich weitere Informationen zur Verwendung der Docker-Container."
  },
  {
    "objectID": "data-collection-overview.html",
    "href": "data-collection-overview.html",
    "title": "Datenerhebung: Übersicht / Data Collection: Overview",
    "section": "",
    "text": "Nachdem eine Studie mit dem IRTlib Editor angelegt und konfiguriert wurde, muss eine finalisierte Version dieser Konfiguration erstellt werden. Versionen versiegeln und vervollständigen alle Konfigurationen und haben eine eindeutige Versionsnummer (bezeichnet als Revision). Die Verwendung von Revisionen macht die Durchführung von Datensammlungen mit dem IRTlib Editor und IRTlib Player reproduzierbar, da die Revisionsnummer einer Konfiguration auch in den Datensätzen gespeichert wird.\n\nKonfigurationen Prüfen: Vor der Fertigstellung und dem Versiegeln einer Version ist es ratsam, alle Einstellungen noch einmal zu überprüfen. Der IRTlib-Editor stellt dafür eine zusätzliche Funktion der Validierung zur Verfügung.\nVersiegelte Version Erstellen: Wenn keine weiteren Änderungen erforderlich sind, kann die Version versiegelt werden. Dies geschieht durch das Auswählen der noch nicht gespeicherten Änderungen und einen Klick auf das Schloss-Symbol im IRTlib Editor in der Ansicht Veröffentlichen, in welcher die Studienrevisionen angezeigt werden. .\nVersion Exportieren: Versionen von Studien, die im IRTlib-Editor verfügbar sind, können exportiert werden. Der Export der Konfiguraiton ist notwendig, bevor diese mit dem IRTlib-Player verwendet werden können. Beim Exportieren wird die vollständige Studienkonfiguration inklusive der importierten CBA ItemBuilder-Inhalte als ZIP-Archiv heruntergeladen.\nStudie in IRTlib Player Importieren: Exportierte Versionen von Studien aus dem IRTlib-Editor können zur Verwendung in einen IRTlib-Player importiert werden. Für einzelne Studien gibt es einen automatische Modus, wenn mehrere Studien in einem IRTlib Player simultan verwendet werden sollen, kann diese manuell erfolgen.\nTesten der Studie: Bevor mit der eigentlichen Datenerfassung begonnen wird kann, sollte jede Konfiguration zunächst mit synthetischen Testfällen (d.h. systematisch) gestetet werden.\n\nFalls in einer exportierten Studie noch Probleme festgestellt werden, ist es möglich, zur Vorbereitung (siehe Vorbereitung von Studien und Vorbereitung von Erhebungsteilen) zurückzukehren, die Studiendefinition und die Konfiguration der Testteile zu ändern, eine weitere versiegelte Version zu erstellen und mit der geänderten Konfiguration fortzufahren."
  },
  {
    "objectID": "data-collection-overview.html#übersicht-schritte-zur-verwendung-eines-irtlib-player-zur-datenerhebung",
    "href": "data-collection-overview.html#übersicht-schritte-zur-verwendung-eines-irtlib-player-zur-datenerhebung",
    "title": "Datenerhebung: Übersicht / Data Collection: Overview",
    "section": "",
    "text": "Nachdem eine Studie mit dem IRTlib Editor angelegt und konfiguriert wurde, muss eine finalisierte Version dieser Konfiguration erstellt werden. Versionen versiegeln und vervollständigen alle Konfigurationen und haben eine eindeutige Versionsnummer (bezeichnet als Revision). Die Verwendung von Revisionen macht die Durchführung von Datensammlungen mit dem IRTlib Editor und IRTlib Player reproduzierbar, da die Revisionsnummer einer Konfiguration auch in den Datensätzen gespeichert wird.\n\nKonfigurationen Prüfen: Vor der Fertigstellung und dem Versiegeln einer Version ist es ratsam, alle Einstellungen noch einmal zu überprüfen. Der IRTlib-Editor stellt dafür eine zusätzliche Funktion der Validierung zur Verfügung.\nVersiegelte Version Erstellen: Wenn keine weiteren Änderungen erforderlich sind, kann die Version versiegelt werden. Dies geschieht durch das Auswählen der noch nicht gespeicherten Änderungen und einen Klick auf das Schloss-Symbol im IRTlib Editor in der Ansicht Veröffentlichen, in welcher die Studienrevisionen angezeigt werden. .\nVersion Exportieren: Versionen von Studien, die im IRTlib-Editor verfügbar sind, können exportiert werden. Der Export der Konfiguraiton ist notwendig, bevor diese mit dem IRTlib-Player verwendet werden können. Beim Exportieren wird die vollständige Studienkonfiguration inklusive der importierten CBA ItemBuilder-Inhalte als ZIP-Archiv heruntergeladen.\nStudie in IRTlib Player Importieren: Exportierte Versionen von Studien aus dem IRTlib-Editor können zur Verwendung in einen IRTlib-Player importiert werden. Für einzelne Studien gibt es einen automatische Modus, wenn mehrere Studien in einem IRTlib Player simultan verwendet werden sollen, kann diese manuell erfolgen.\nTesten der Studie: Bevor mit der eigentlichen Datenerfassung begonnen wird kann, sollte jede Konfiguration zunächst mit synthetischen Testfällen (d.h. systematisch) gestetet werden.\n\nFalls in einer exportierten Studie noch Probleme festgestellt werden, ist es möglich, zur Vorbereitung (siehe Vorbereitung von Studien und Vorbereitung von Erhebungsteilen) zurückzukehren, die Studiendefinition und die Konfiguration der Testteile zu ändern, eine weitere versiegelte Version zu erstellen und mit der geänderten Konfiguration fortzufahren."
  },
  {
    "objectID": "preparation-parts.html",
    "href": "preparation-parts.html",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Assessments, die mit der IRTlib Software administriert werden, bestehen aus sogenannten Erhebungsteilen. Nach der Konfiguration einer Studie muss zumindest ein Erhebungsteil angelegt werden.\n\n\nNach dem Erstellen einer Studie erfolgt in der Ansicht Erhebungsteile als nächster Schritt zur Vorbereitung einer Testauslieferung das Hinzufügen eines neuen Erhebungsteils:\n\nDie erstellten Erhebungsteile erscheinen als Karten in der Ansicht Erhebungsteile. Wenn Studien aus mehreren Erhebungsteilen bestehen, kann für lineare Abläufe die Reihenfolge der Erhebungsteile in der Ansicht Erhebungsteile / Übersicht angepasst werden. Sollen Erhebungsteile in Abhängigkeit von Variablen, z.B. übergebene Preload-Variablen oder andere Blockly-Variablen gesteuert werden, kann alternativ ein Routing zwischen Erhebungsteilen konfiguriert werden.\nEine detaillierte Anleitung zur Erstellung von Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nMit dem IRTLib Editor werden Konfigurationen für Studien erstellt, welche dann in einem IRTLib Player zur Durchführung computerbasierter Assessments verwendet werden können. Studien bestehen aus einem oder mehreren Erhebungsteilen.\n\n\nNachdem eine Studie angelegt ist, kann nun über Plus-Icon unten rechts ein Erhebungsteil hinzugefügt werden:\n\n\n\n\n\nDanach geben Sie bitte in dem Dialog Neuen Erhebungsteil erstellen eine Bezeichnung und optional eine Beschreibung ein.\nAchten Sie darauf, dass für die Bezeichnung wieder nur Buchstaben (Groß- und Kleinschreibung), Ziffer und ein _ erlaubt sind.\nKlicken Sie anschließend auf Speichern.\n\n\n\n\n\nBei Bedarf können Sie über das folgende Icon einem Erhebungsteil auch ein Bild zuordnen. Dieses Bild wird im IRTLib Editor für diesen Erhebungsteil verwendet:\n\n\n\n\n\n\n\n\nErstellten Erhebungsteile werden in der Erhebungsteilübersicht als Kacheln angezeigt:\n\n\n\n\n\n\nUm nun mit der Konfiguration eines Erhebungsteils fortzufahren, klicken Sie auf das kleine Bearbeiten-Icon:\n\n\n\n\n\n\n\nErhebungsteil Löschen: Mit dem Papierkorb-Icon können Sie Erhebungsteile auch wieder löschen. Das Löschen von Erhebungsteilen kann nicht rückgängig gemacht werden:\n\n\n\n\n\n\n\n\n\nWenn in der Konfiguration einer Studie in der Ansicht Info (Abschnitt Übersicht) die Option Routing für Erhebungsteile aktivieren nicht ausgewählt ist, dann werden Erhebungsteile in der Reihenfolge administriert, in welcher sie in der Erhebungsteilverwaltung angezeigt werden.\n\nErhebungsteile Verschieben: Um per drag-and-drop die Reihenfolge von Erhebungsteilen zu verändern, muss zunächst über folgendes Toggle-Icon der Modus Reihenfolge Ändern aktiviert werden:\n\n\n\n\n\n\n\nDanach können die Kacheln in die gewünschte Reihenfolge gebracht werden. Der Modus Reihenfolge Ändern wird beendet, wenn das Disketten-Symbol angeklickt oder die Änderungen verworfen werden:\n\n\n\n\n\n\n\n\n\n\nDie Reihenfolge von Erhebungsteilen kann in der Ansicht Erhebungsteile verändert werden:\n\nVor dem Hinzufügen bzw. Auswählen von CBA ItemBuilder Projekten, wie im Abschnitt Assessmentinhalte (Items) beschrieben, können in der Ansicht Info ausgewählte Einstellungen konfiguriert werden.\nEine detaillierte Beschreibung findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n\n\nBezeichnung: Die interne Bezeichnung des Erhebungsteils, welche im IRTlib Editor zur Bearbeitung und zur Definition des Ablaufs angezeigt wird. Bezeichnungen dürfen keine Sonderzeichen, Leerzeichen und Umlaute enthalten und nicht mit einer Ziffer beginnen.\nBeschreibung: Optionale, zusätzliche Beschreibung eines Erhebungsteils.\n\n\n\n\n\nRouting aktivieren: Die konfigurierten Assessmentinhalte im Abschnitt Items können als lineare Sequenz, d.h. in der konfigurierten Reihenfolge administriert werden. Soll eine davon abweichende Reihenfolge verwendet werden, kann hier die Option Routing aktivieren gewählt werden. Die Reihenfolge kann dann im Abschnitt Routing als visuelles Programm spezifiziert werden.\n\n\n\n\n\nSnapshot verwenden: Damit CBA ItemBuilder Tasks mehrfach besucht werden können, wird deren Inhalt beim Verlassen des Items in sogenannten Snapshots gespeichert. Snapshots können auch dazu verwendet werden, um die Inhalte eines CBA ItemBuilder Tasks zu einem späteren Zeitpunkt erneut darzustellen. Diese Option sollte nur dann deaktiviert werden, wenn es einen gewichtigen Grund gibt und die Konsequenzen (d.h. die dann nicht gespeicherten Snapshot-Daten) sorgfältig bedacht wurden.\n\n\n\n\n\nDas Hinzufügen und Verwalten von CBA ItemBuilder Projekte innerhalb des IRTlib-Editors erfolgt im Abschnitt Items.\n\n\n\n\n\n\nHinweis zur Zeitbegrenzung\n\n\n\n\n\nFür die Administration von zeitbegrenzten Erhebungsteilen kann unter Bearbeitungszeit ein Zeitlimit definiert werden. Wenn die Option Bearbeitungszeit begrenzen aktiviert ist, können ein oder mehere Tasks definiert werden, welche bei einem Timeout angezeigt werden. Außerdem können im Abschnitt Vorspann-Items(s) und Nachspann-Item(s) Inhalte definiert werden, welche vor bzw. nach dem zeitbegrenzten Teil administriert werden.\n\n\n\n\n\n\nDie Inhalte, welche in einem Erhebungsteil vom Typ CBA ItemBuilder verwendet werden sollen, werden über den IRTlib Editor in die Konfiguration übernommen, d.h. die mit dem IRTlib Editor erstellte Konfiguration enthält auch die CBA ItemBuilder Project Files. Für das Hinzufügen oder Aktualisierung von CBA ItemBuilder Projekten steht die Ansicht Items zur Verfügung.\nEine detaillierte Beschreibung findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n\n\nImportieren von CBA ItemBuilder-Projektdateien: Der IRTlib Editor pflegt eine Liste bekannter Items, zu denen CBA ItemBuilder-Projektdateien die noch nicht bekannt sind hinzugefügt werden können. Um eine Projektdatei hinzuzufügen, öffnet man zunächst mit dem +-Symbol die Liste bekannter Items und wählt dann die Schaltfläche Importieren aus.\n\n\n\n\n\n\n\n\n\n\n\n\nAktualisieren bereits importierter CBA ItemBuilder-Projektdateien: Wenn eine CBA ItemBuilder-Projektdatei bereits in der Liste der bekannten Items enthalten ist, können die Projektdateien aktualisiert werden. Sie werden dann nicht zusätzlich zur Liste der bekannten Items hinzugefügt, sondern die bereits vorhandene CBA ItemBuilder-Projektdatei wird in einer neueren Version hinterlegt. Um ein Item zu aktualisieren, muss es zunächst in der Liste der Items eines Erhebungsteils ausgewählt werden. Dadurch wird das Aktualisieren-Symbol aktiv. In dem sich dann öffnenden Dialog Item aktualisieren, kann über die Schaltfläche Importieren eine aktualisierte Version einer CBA ItemBuilder-Projektdatei hinzugefügt werden.\n\n\n\n\n\n\n\n\n\n\n\n\nVorschau von CBA ItemBuilder-Projektdateien: Die in einem Erhebungsteil hinzugefügten Items können direkt im IRTlib Editor in einer eingebauten Preview-Funktion angesehen werden. Um ein Item anzusehen, muss es zunächst in der Liste der Items eines Erhebungsteils ausgewählt werden. Danach kann die Vorschau über das Augen-Symbol aufgerufen werden:\n\n\n\n\n\n\n\nExportieren von CBA ItemBuilder-Projektdateien: CBA ItemBuilder-Projektdateien, die in den IRTlib Editor importiert wurden, können zur weiteren Bearbeitung mit dem CBA ItemBuilder exportiert werden. Um ein ausgewähltes Item aus der Liste der Items eines Erhebungsteils zu exportieren, kann das Download-Symbol aufgerufen werden:\n\n\n\n\n\n\n\nLöschen von CBA ItemBuilder-Projektdateien: Die in Erhebungsteilen eingefügten Items können aus einem Erhebungsteil wieder gelöscht werden. Durch das Löschen-Symbol wird das Item aus einem Erhebungsteil entfernt, es verbleibt aber in der Liste bekannter Items:\n\n\n\n\n\n\n\nHinweis: Es ist bisher nicht möglich, CBA ItemBuilder-Projektdateien aus der Liste bekannter Items wieder zu löschen. Diese Funktionalität ist nicht notwendig, da CBA ItemBuilder-Projektdateien vom IRTlib-Editor nur dann in die Konfiguration einer Studie übernommen werden, wenn Tasks aus einer CBA ItemBuilder-Projektdatei in einem Erhebungsteil verwendet werden.\n\n\n\n\n\nSortieren CBA ItemBuilder-Projektdateien: Wenn für einen Erhebungsteil die Option Routing aktivieren nicht ausgewählt ist, dann kann in der Liste der Items die Reihenfolge über die folgende Schaltfläche angepasst werden:\n\n\n\n\n\n\n\nDie Items dann exakt so administriert, wie sie für einen Erhebungsteil in dieser Liste aufgeführt sind.\n\nHinweis: Änderungen an der Sicht Items müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\n\n\n\nWenn die Administration einer linearen Folge von CBA ItemBuilder Tasks mit einer begrenzten Bearbeitungszeit administriert werden sollen, lässt sich dies durch Definieren einer maximalen Bearbeitungszeit (in Sekunden) umsetzen. Soll bspw. ein Testinhalt maximal 28 min. administriert werden, wird als Bearbeitungszeit eine Zeit von 1680 Sekunden definiert. Die Nachricht, welche beim Ablaufen der Bearbeitungszeit angezeigt werden soll, lässt sich als ein (oder mehrere) CBA ItemBuilder Tasks definieren.\nEine detaillierte Beschreibung findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nErhebungsteile ohne Routing können auf einfache Weise einen zeitbegrenzten Abschnitt enthalten. Dafür wird in der Sicht Bearbeitungszeit die Option Bearbeitungszeit begrenzen aktiviert und ein Zeitlimit in Sekunden (&gt;0) eingetragen.\nFür eine Zeitbegrenzung werden vier Gruppen von CBA ItemBuilder Tasks unterschieden, die an unterschiedlichen Stellen im IRTlib Editor definiert werden. In der Sicht Items (analog zu nicht zeitbegrenzten Erhebungsteilen) werden die Items, für welche die Zeitbegrenzug gelten soll, definiert:\n\nItems: Items die so lange angezeigt werden, bis das Zeitlimit erreicht wurde.\n\nIn der Ansicht Bearbeitungszeit kann zusätzlich definiert werden:\n\nTimeout-Items: Items die nur angezeigt werden, wenn die zeitbegrenzten Items nicht in der begrenzten Bearbeitungszeit abgeschlossen wurden.\n\nAls einzelne Sichten der Konfiguration von Erhebungsteile können schließlich folgende Tasks definiert werden:\n\nVorspann-Items: Items die vor dem zeitbegrenzten Abschnitt angezeigt werden.\nNachspann-Items: Items die nach dem zeitbegrenzten Abschnitt angezeigt werden.\n\nIn allen genannten Dialogen stehen die Symbole für folgende Operationen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Komplexere Designs mit ggf. mehreren Timern lassen sich mit dem IRTlib Editor umsetzen, wenn die Option Routing aktivieren in der Übersichtsansicht zu einem Erhebungsteil aktiviert ist.\nHinweis: Änderungen an der Sicht Bearbeitungszeit müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVorspann-/Nachspann-Items\n\n\n\nEin zentrales Konzept für die Umsetzung von Zeitbegrenzungen in der IRTlib Software ist die Trennung der zeitbegrenzten Items, und zusätzlicher Assessmentinhalte, die vor oder nach dem zeitbegrenzten Teil administriert werden.\n\n\n\nItems die nach einem potentiell zeitbegrenzten Abschnitt eines Erhebungsteils administriert werden, werden als Nachspann-Items bezeichnet.\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDer Erhebungsteile erlauben die Definition von Items in verschiedenen Abschnitten. Items in diesem Abschnitt Nachspann-Item(s) werden nach den Items angezeigt, welche im Abschnitt Items eines Erhebungsteils definiert sind. Die Trennung in Nachspann-Item(s) und Items ist besonders sinnvoll, wenn unter Bearbeitungszeit eine Zeitbegrenzung aktiviert ist.\nUm Items in dem Abschnitt Nachspann-Item(s) zu konfigurieren, stehen die folgenden Optionen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Änderungen an der Sicht Nachspann-Item(s) müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\nItems die vor einem potentiell zeitbegrenzten Abschnitt eines Erhebungsteils administriert werden, werden als Vorspann-Items bezeichnet.\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDer Erhebungsteile erlauben die Definition von Items in verschiedenen Abschnitten. Items in diesem Abschnitt Vorspann-Item(s) werden vor den Items angezeigt, welche im Abschnitt Items eines Erhebungsteils definiert sind. Die Trennung in Vorspann-Item(s) und Items ist besonders sinnvoll, wenn unter Bearbeitungszeit eine Zeitbegrenzung aktiviert ist.\nUm Items in dem Abschnitt Vorspann-Item(s) zu konfigurieren, stehen die folgenden Optionen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Änderungen an der Sicht Vorspann-Item(s) müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)\n\n\n\n\n\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)\n\n\n\n\n\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)\n\n\n\n\n\n\nWenn CBA ItemBuilder-Tasks nicht in einer linearen Abfolge administriert werden sollen, die im Vorhinein feststeht und für alle Testpersonen identisch ist, dann kann die Funktion Routing der IRTlib Software verwendet werden.\nEine detaillierte Beschreibung zum Routing innerhalb von Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n\nDie Reihenfolge von CBA ItemBuilder-Aufgaben kann hier mit Hilfe von Blockly (also einer Form des visuellen Programmierens) definiert werden. Blockly-basierte Ablaufsteuerung ist verfügbar, wenn bei einem Erhebungsteil die Option Routing aktivieren ausgewählt ist. Die Option ist im Abschnit Info eines Erhebungsteils zu finden. Ist sie aktiviert, enthält der Erhebungsteil den Eintrag Routing.\n\nÜbersicht:\n\nBeipsiele: lineare Ablauf, einfache Testhefte, Ablauf mit Zeitbegrenzung und Booklet-Designs\nKurzanleitung: Allgemeine Hinweis zum Blockly-Editor\nGrundlagen: Nutzung des Blockly-Editor\n\nAnzeigen von Items oder Itemlisten\nDefinition von Zeitbegrenzungen\nÄnderungen am Testleitermenü\n\nVertiefung: Fortgeschrittene Blockly-Verwendung\n\nAblaufsteuerung mit Bedingungen\nAblaufsteuerung mit Schleifen\nOperatoren für Zahlen, Text, Zeiten und Listen.\nVertiefung zu Blockly-Variablen und Blockly-Funktionen\nNutzung von Itemergebnissen in der Ablaufdefinition\nBlockly-Operatoren zum Kodieren fehlender Werte und zum Schreiben von Daten\n\nKommentieren von Blockly-Code\nAnpassung der Darstellung von Blockly-Code\n\n\n\n\nDie Grundidee zur Verwendung von Blockly für die Defnition von Abläufen in computerbasierten Assessments soll zunächst mit einigen Beispielen illsturiert werden.\n\n\nBeispiel für linearen Ablauf\n\n\nBasierend auf den einem Erhebungsteil hinzugefügten CBA ItemBuilder Tasks in der Ansicht Items entspricht eine lineare Folge der Tasks der folgenden Blockly-Definition:\n\n\n\n\n\nDem Blockly-Element Show Items wird eine Liste der CBA ItemBuilder Tasks übergeben, die mit dem Operator erzeuge Liste mit erstellt wird. Die Liste wird in der dargestellten Reihenfolge abgearbeitet, wobei jeder CBA ItemBuilder Tasks solange dargestellt wird, bis das NEXT_TASK- Command ausgeführt wird.\n\n\nEine äquivalente Formulierung einer linearen Sequenz kann auch mit mehreren Show Items-Blücken erfolgen, wenn keine Zurücknavigation notwendig ist:\n\n\n\n\n\nBeispiel für einfache Testhefte\n\n\nMit Hilfe einer Variable (hier: Booklet) und einer einfachen falls/mache-Bedingung lässt sich daraus nun ein Ablauf definieren, welcher je nach Wert der Variable unterschiedliche Items administriert:\n\n\n\n\n\nDie Items für Start und Ende werden immer administriert, die Tasks 1-3 nur, wenn die Variable Booklet der Wert 0 hat, die Tasks 4 und 5, wenn die Variable Booklet einen von 0 verschiedenen Wert hat.\n\n\nDer identische Ablauf lässt sich alternativ auch unter Verwendung des Blockly-Operators für das Anzeigen von Itemlisten erstellen:\n\n\n\n\n\nBeide Varianten sind bzgl. der Funktionalität völlig äquivalent, die zweite Vorgehensweise mit Listen erlaubt aber die Verwendung der Option Zurücknavigation innerhalb der booklet-spezifischen Tasks.\n\n\nBeispiel für Ablauf mit Zeitbegrenzung\n\n\nUm mit Hilfe der Blockly-Configuration Zeitbegrenzte Abschnitte innerhalb eines Erhebugnsteils umzusetzen, kann die folgende Blockly-Komponente verwendet werden:\n\n\n\n\n\nJeder Ablauf beginnt mit eine nicht zeitbgrenzten Start-Tasks und endet mit einem ebenfalls nicht zeitbegrenzten End-Tasks. Dazwischen läuft eine Zeitbegrenzung für einen Abschnitt mit der Bezeichnung MyFirstTimer, der eine Zeitbegrenzung für 60 Sekunden hat.\n\n\nDie Tasks 1, 2 und 3 werden in dem Abschnitt Runtime code mit einer Zeitbegrenzung angezeigt. Tritt ein Timeout auf, d.h. werden die drei Tasks nicht innerhalb der 60 Sekunden bearbeitet, wird (ebenfalls ohne Zeitbegrenzung) der Task 4 angezeigt.\n\n\nBeispiel für einfaches Booklet-Design mit Zeitbegrenzung\n\n\nBei vielen Items kann die Definition von Booklet Designs, d.h. Taskreihenfolgen mit balancierten Positionen, durch Funktionen bzw. Listen vereinfacht werden.\n\n\nWenn keine Zurücknavigation notwendig ist, können Funktionen für die Definition von Clustern verendet werden:\n\n\n\n\n\nMit Zurücknavigation können die Funktionen Listen von Tasks zurückgeben:\n\n\n\n\n\nWeitere Informationen siehe hier.\n\n\n\n(nach oben)\n\n\n\n\nDie Defintion von Abläufen erfolgt in dem visuellen Blockly-Editor. Die Ausführung beginnt mit dem Element, welches am weitesten oben ausgerichtet ist. Wenn nötig, kann der Arbeitsbereich mit der Funktion Aufräumen automatisch ausgerichtet werden. Zum Hinzufügen von Blockly-Operatoren können diese per Drag-and-Drop aus der Palette gezogen werden.\n\n\nLöschen: Zum Löschen von Operatoren können diese auf den Papierkorb gezogen werden. Ausgewählte Blockly-Elemente können auch über die Taste Entf(ernen) gelöscht werden. Alternativ können ausgewählte Blockly-Elemente auch über Kontextmenü gelöscht werden.\nRedo-/Undo: Innerhalb des Blockly-Editor können einzelne Aktionen rückgängig gemacht werden. Dafür kann die Tastenkombination Strg + Z verwendet werden. Mit Strg + Y wird eine Aktion wiederholt. Durch einen Klick in einen leeren Bereich des Blockly-Editors ist der Zugriff auf ein Kontextmenü möglich, welches ebenfalls die Optionen für Rückgängig und Wiederholen bereithält:\n\n\n\n\n\nSpeichern: Anpassungen im Blockly-Editor müssen gespeichert werden. Dafür steht unten rechts das Disketten-Symbol zur Verfügung:\n\n\n\n\n\nSollen die Änderung (insgesamt) verworfen werden, kann unten rechts die das Verwerfen-Symbol verwendet werden.\n\n\nZoom: Die Ansicht im Arbeitsbereich kann mit den Icons + vergrößert und mit - verkleinert werden.\n\n\n\nKontextmenü: Weitere Optionen sind über die rechte Maustaste (Kontextmenü) im Blocky-Editor verfügbar. Um diese Funktionen aufzurufen, muss auf ein Blockly-Element ein Sekundärklick (rechte Maustaste) durchgeführt werden:\n\nKopieren dupliziert das ausgewählte Blockly-Element, inklusive aller verbunder Elemente.\nKommentieren von Blöcken ist möglich.\nBlöcke können deaktiviert/aktiviert werden.\nManche Block-Typen erlauben die Darstellungsform extern/intern zu wechseln.\nBlöcke, welche weitere Blöcke enthalten, können zusammengefalten/entfaltet werden.\nDas Löschen von Blöcken ist auch über das Kontextemü möglich.\n\n\n\n\n\n\n\n\nEinige Blockly-Elemente stellen im Kontextmenü auch einen Eintrag Hilfe zur Vefügung, welcher auf die allgemein zugängliche Blockly-Dokumenten (https://github.com/google/blockly/wiki/) verweist.\n\n\n\n(nach oben)\n\n\n\n\n\n\nDie Grundfunktionen für die Nutzung der Blockly-Umgebung zur Steuerung von Assessments finden sich im Abschnitt Session.\n\n\n\nAuf CBA ItemBuilder-Tasks, die in der Ansicht Items für einen Erhebugnsteil importiert wurden, kann in der Ablaufsteuerung wie in den Beispielen obgen gezeigt mit Hilfe des folgende Blockly-Elements für Tasks zugegriffen werden:\n\nDas Element, welches im Abschnitt Session der Palette des Blockly-Editors zu finden ist, kann durch die Auswahlliste konfiguriert werden. Jedes Blockly-Elements für Tasks kann auf genau einen konkreten Task verweisen, d.h. in der Regel besteht eine Ablaufdefinition aus mehrerer solcher Elemente.\nBlockly-Elemente für Tasks können nicht direkt in den Ablauf eingefügt werden, sonder werden zusammen mit einem Show Item-Element verwendet:\n\nDas Beispiel für einfache Testhefte illustriert, dass Abläufe in der Blockly-Definition häufig durch eine Abfolge von mehreren Show Item-Operatoren definiert werden. Show Item-Operatoren können dabei in Bedingungen und Schleifen, sowohl innerhalb des Hauptablaufs als auch innerhalb von Funktionen eingefügt werden.\n\n\n\nMit Hilfe der Blocky-basierten Ablaufsteuerung ist es auch möglich, CBA ItemBuilder-Tasks mehrfach innerhalb eines Ablaufs zu administrieren:\n\nDabe wird beim erneuten Aufruf eines Items der Zustand aus dem letzten Besuch wiederhergestellt, d.h. die Bearbeitung wird fortgesetzt. Sollen Items mehrfach neu, d.h. unbearbeitet vorgelegt werden, kann das automatische wiederherstellen nicht gewünscht sein. Dafür kann optional die Checkbox für die Angabe eines Scopes (Geltungsbereich) aktiviert werden:\n\nWird nichts weiter angegeben, wird das Item im “Default”-Scope administriert. Alternativ kann ein Text definiert werde, wie in folgendem Beispiel zu sehen:\n\nBeim ersten Besuch wird der Task in dem Scope “Visit1” dargestellt. Danach folgt eine neue, unabhängige Darstellung des Tasks in einem anderen Scope (“Visit2”). Im dritten Aufruf wird der Task weder mit den Daten dargestellt, die beim ersten Besuch bereits gesammelt wurde (d.h. der Scope “Visit1” wird erneut verwendet).\n\n\n\n\nWie im Beispiel für linearen Ablauf zu sehen, können lineare Tests auch über Listen von Tasks dargestellt werden.\nListen können mit dem Blockly-Operator Show Items verwendet werden:\n \n\nZurücknavigation: Das Show Items-Element für Listen kann über die Eigenschaft Can navigate back konfiguriert werden. Ist diese Eigenschaft ausgewählt, dann können CBA ItemBuilder-Tasks mit dem Command BACK_TASK eine Navigation zum vorherigen CBA ItemBuilder Tasks anfordern.\nAbbrechen von Listen: Die Verwendung von Listen erlaubt auch das Abbrechen von Listen. Listen können über zwei Wege abgebrochen werden:\n\nDas Command CANCEL_TASK, welches innerhalb von CBA ItemBuilder Tasks verwendet werden kann, wird aufgerufen.\nIm Testleitermenü, welches für die Studie konfiguriert und ggf. über den Blockly-Operator Testleitermenü bearbeiten angepasst wurde, wird die Funktion Itemliste abbrechen aufgerufen.\n\n\n\nDie Adminsitration einer Itemliste wird dadurch abgebrochen, und die Abarbeitung des Blockly-Ablaufs nach dem Show Items-Block fortgesetzt.\n\n\n\n\n\nDie Operatoren Show Item (für einzelne Items) und Show Items (für Itemlisten) sind auch als Operatoren für Wertzuweisungen verfügbar:\n\nMit deren Hilfe lassen sich Ergebnisse der Itembearbeitung zu Variablen (String oder Array) zuweisen, und dann für die Ablaufsteuerng auswerten.\n\nEinzelner Task:\n\n\n\n\n\nListe von Tasks:\n\n\n\n\n\n\n\n\nWie im Beispiel Ablauf mit Zeitbegrenzung bereits illustriert, kann mit dem Blockly-Block Start time with name die Zeitbegrenzte Administration von Items umgesetzt werden.\nDas Blockly-Element Start timer with name erlaubt die Definition von Zeitbegrenzungen. Jede Zeitbegrenzung kann einen eigenen Namen haben. Zusätzlich muss die Zeit in Sekunden angegeben werden. Darüber kann definiert werden, welche Art von Zeit verwendet werden soll:\n\n\nRealtime:\nServertime:\nSessiontime:\nClienttime:\n\nSchließlich können zwei Stellen mit weiteren Blockly-Operatoren (wie bspw. ein oder mehrere Show Item-Blöcke zum Anzeigen einzelner Items oder ein oder mehrere Show Items-Blöcke zum Anzeigen von Listen) gefüllt werden:\n\nRuntime code: Diese Blöcke werden ausgefüllt, bis die definierte Zeit abgelaufen ist.\nElapsed code: Diese Blöcke werden nur ausgefüllt, wenn der Runtime code nicht innerhalb der Zeit beendet wurde.\n\n\n\n\n\nIn der Studiendefinition können Funktionen des Testleitermenüs für eine oder mehrere Rollen angelegt werden. Rollen stellen unterschiedliche Funktionen zusammen, die mit Hilfe des vom Testleiter einzugebenden Passworts unterschieden werden können.\nAnpassen von Standardfunktionen: Folgende Standardfunktionen können für eine Studie im Abschnitt Info / Testleitermenü definiert werden:\n\nNavigation: Aufgabe vor / Aufgabe zurück\nListen: Itemliste abbrechen\nBeenden: Erhebungsteil beenden und Session beenden\nLautstärkeregelung: Einstellen der Audiolautstärke während des Assessments\n\n\nWährend der Bearbeitung eines Erhebungsteils kann in der Ablaufsteuerung mit Hilfe des folgenden Blockly-Operators das Testleitermenü kontextspezifisch angepasst werden:\n\n\n\n\n\nDas Testleitermenüs kann für jede der Standardfunktionen (im Bereich Funktion) für eine Rolle (im Bereich Gruppe) sowohl die Beschriftung der Schaltfläche (im Bereich Label) geändert werden:\n\n\nHinzufügen: Funktion wird im Testleitermenü ergänzt\nEntfernen: Funktion wird aus dem Testleitermenü entfernt\nDeaktivieren: Funktion wird im Testleitermenü deaktiviert\nAktivieren: Funktion wird im Testleitermenü aktiviert\n\n\n\n\n\nDer Aufruf dieses Blockly-Operators im Testablauf definiert das Verhalten des Testleitermenüs im weiteren Testablauf. Im Unterschied zu Entfernen bleiben deaktivierte Funktionen im Testleitermenü sichtbar, können aber (bis sie wieder aktiviert werden) nich ausgeführt werden.\n\nVerwenden von Blockly-Funktionen im Testleitermenü: Der Blockly-Operator für das Bearbeiten des Testleitermenüs enthält im Abschnitt Funktion auch die Option zum Ausführen von Blockly-Code (ExecuteBockly):\n\n\n\n\nWenn als ExecuteBlockly ausgewählt ist, dann kann in dem Blockly-Element Testleitermenü bearbeiten eine innerhalb des Blockly-Editors definierte Funktionen ausgewählt werden. Die in dieser Funktion definierten Blockly-Operatoren werden dann ausgeführt, wenn ein Testleiter die entsprechende Schaltfläche zur Laufzeit im Testleitermenü auswählt.\n\n\n\n(nach oben)\n\n\n\n\n\n\n\n\n\nDer Abschnitt Logic enthält den Blockly-Operator falls/mache, welcher zur Umsetzung von Bedingungen im Ablauf verwendet werden kann. Bedingungen sind logische Ausdrücke, bspw. die Prüfung ob eine Preload-Variable einen bestimmten Wert hat:\n\nNur wenn die Bedingung (falls) erfüllt ist, werden die Blocky-Operatoren ausgeführt, welche innerhalb des Bedingungsblocks definiert sind (d.h. neben mache). In dem Beispiel wird geprüft, ob eine boolsche Variable den Wert wahr hat.\nDie Bedingung wird dabei als separater Block definiert, die mit dem Blockly-Operator falls/mache verbunden ist. Hier die beiden Komponenten separat:\n\nBedingung:\n\n\n\n\n\nLogischer Ausdruck:\n\n\n\n\n\n\n\n\nLogische Ausdtrücke in Bedingungen basieren entweder auf Wertevergleichen oder Rückgaben von Funktionen. Wertevergleiche können mit folgendem Blockly-Element realisiert werden:\n\nDie beiden Slots können mit Werten gefüllt werden. Für boolsche Werte (wahr/falsch) steht ein entsprechendes Blockly-Element im Abschnitt Logic bereit:\n\nBedingungen sind auch mit Variablen von anderem Datentyp möglich:\n\nFür numerische Werte gibt es ein entsprechendes Blockly-Element im Abschnitt Math, welcher Operatoren für Zahlen und einfache mathematische Operationen enthält:\n\nMit dessen Hilfe und einer numerischen Variable lässt sich folgende Bedingung formulieren:\nAus technischen Gründen kann es auch notwendig sein zu prüfen, ob eine Variable noch gar keinen Wert hat. Das kann durch Verwendung der Blockly-Komponente null umgesetzt werden:\n\nKombination von logischen Ausdrücken: Einzelne Bedingungen oder logische Ausdrücke können mit folgendem Blockly-Element aus dem Abschnitt Logik verbunden werden:\n\n\n\n\nDabei steht eine und sowie eine oder-Verknüpfung der Aussagen zur Auswahl. Die freien Eingänge\n\n\n\n\n\nMehrere logische Ausdrücke können in einander geschachtelt werden:\n\n\n\n\n\nHinweis: Für eine übersichtlichere Darstellung ist bei der äußeren und-Verknüpfung die externe Darstellung gewählt.\n\nMehrere Bedingungen (sonst falls / sonst): Durch Klick auf das kleine Zahnrad-Symbol eines Bedingungsblocks (falls/mache) kann dieser konfiguriert werden:\n\n\n\n\nDurch das Hinzufügen eines Abschnitts sonst falls können kann eine weitere Bedingung hinzugefügt werden. Die in einem sonst falls Abschnitt definierte Bedingung wird geprüft, wenn die vorherigen Bedingunge (falls) nicht erfüllt sind. Ist eine Bedingung erfüllt, werden die definierten Blockly-Operatoren ausgeführt.\n\n\nDurch das Hinzufügen eines Abschnitts sonst können Blöcke hinzugefügt werden, welche dann ausgeführt werden wenn keine der Bedingungen erfüllt ist.\n\nSpezialfall: prüfe-Operator für drei Bedingungen: Für drei Bedingungen stellt der Blockly-Editor eine speziellen Operator prüfe-falls wahr-falls falsch zur Verfügung:\n\n\n\n\nDer Operator kombiniert zwei logische Ausdrücke, z.B.:\n\n\n\n\n\nDas Konstrukt ist eine Kurzform für folgende Prüfung, wie sie in folgender Tabelle dargestellt ist:\n\n\n\n\nMyNumberVariable\nMyStringVariable\nMyBooleanVariable\nErgebnis\n\n\n\n\n\\(= 42\\)\n\\(=\\) Example\n(any)\ntrue\n\n\n\\(= 42\\)\n\\(\\neq\\) Example\n(any)\nfalse\n\n\n\\(\\neq 42\\)\n(any)\ntrue\ntrue\n\n\n\\(\\neq 42\\)\n(any)\nfalse\nfalse\n\n\n\n\nOhne den Operator für drei Bedingungen könnte die gleiche Prüfung mit folgender Kombination umgesetzt werden:\n\n\n\n\nNegation: Um einen logischen Ausdruck umzukehren (Negation) steht folgender Blockly-Operator zur Verfügung:\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDie mehrfache Ausführung von Blockly-Operatoren (und der damit darstellbaren Aktionen) ist mit Schleifen möglich. Der Abschnitt Loops der Palette enthält die dafür notwendigen Blockly-Elemente.\nWiederhole n-mal: Der folgende Blockly-Operator kann verwendet werden, um die Ausführung von Blöcke n-mal zu wiederholen:\n\n\n\nWiederhole solange: Schleifen können auch solange wiederholt werden bis eine Bedingung zutrifft (oder solange eine Bedingung zutrift):\n\n\n\n\nBeispiel:\n\n\n\n\nZähle von/bis: Schleife mit Hilfsvariablen:\n\n\n\n\nFür jeden Wert aus Liste: Schleife über alle Werte einer Liste:\n\n\n\nSchleifen vorzeitig abbrechen: Folgendes Blockly-Element kann genutzt werden, um eine Schleife (vorzeitig) abzubrechen oder um vorzeitig mit dem nächsten Schleifendurchlauf zu beginnen:\n\n\n\n\n\n\n\nDer Abschnitt Math der Palette enthält Blockly-Elemente zur Verwendung von Zahlen und einfachen mathematischen Funktionen.\nAusdrücke\n\nZahlen: Ganzzahlen / Dezimalzahlen\n\n\n\n\n\n\n\n\nSymbole: Spezielle Symbole oder Konstanten:\n\n\n\n\nBasale Funktionen\n\nAddition, Subtraktion, Multiplikation, Division und Potenzfunktion von zwei Argumenten:\n\n\n\n\n\nSchachtelung ist möglich, z.B.:\n\n\n\n\n\nDivision mit Rest:\n\n\n\n\n\nOb eien Zahl gerade ist, kann mit diesem Blockly-Element geprüft werden:\n\n\n\n\n\nMit dem folgenden Blockly-Element, kann eine Zahl auf einen Bereich begrenzt werden:\n\n\n\n\nEingebaute Funktionen\n\nTrigonometrische Funktionen:\n\n\n\n\n\nRunden von Werten:\n\n\n\n\n\nWeitere Funktionen:\n\n\n\n\nErzeugung von Zufallszahlen: Für die Erstellung von Zufallszahlen stehen zwei Blocky-Elemente zur Verfügung:\n\nGanzzahlen (in Wertebereich):\n\n\n\n\n\nZufallszahl zwischen \\(0\\) und \\(1\\):\n\n\n\n\nNumerische Funktionen für Listen: Vordefinierte Funktionen für Listen umfassen:\n\nHinweise:\n\nWeitere Funktionen lassen sich, wenn benötigt, mit Schleifen für Listen umsetzen.\nBei der Verwendung der Funktionen ist darauf zu achten, dass die ausgewählte Funktion für die Datentypen der List anwendbar ist.\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Text der Palette enthält Blockly-Elemente zur Verwendung Zeichenketten.\nAusdrücke: Zum erstellen von Text steht folgender Operator zur Verfügung:\n\nVerketten: Verschiedene Operatoren können verwendet werden, um Text zusammenzufügen und zu Variablen zuzuweisen:\n\nEinen Text an eine Variable anfügen:\n\n\n\n\n\nTexte (und Variablenwerte) verketten und an andere Blockly-Operatoren weitergeben:\n\n\n\n\n\nZusammengefügten Texte eine Variable zuweisen:\n\n\n\n\nTextlänge: Die Länge einer Zeichenkette kann mit folgendem Blockly-Operator ermittelt werden:\n\nPrüfung auf leeren String: Leere String-Variablen können daran erkannt werden, dass die Anzahl der Zeichen \\(0\\) ist.\n\nAlternativ kann dafür auch der folgende Blockly-Operator verwendet werden:\n\nPosition in String finden: Ein Operator, der im Text (der per Variable oder als Ausdruck übergeben wird) das erste oder letzte Auftreten eines Begriffs sucht, kann wie folgt verwendet werden:\n\nZurückgegben wird dabei die Position des Begriffs innerhalb der Zeichenkette (d.h. im Text).\nTeilzeichenketten bilden: Der folgende Operator nimmt aus der übergebenen Zeichenkette im Text die ersten Buchstaben. Die Anzahl der Buchstaben wird dabei ebenfalls übergeben.\n\nBeispiel (hier wird, wenn die Option nimm ersten ausgewählt ist der Variable MyStringVariable der Text ABC, d.h. die ersten drei Buchstaben der Zeichenkette ABCDEFG) zugewiesen:\n\n\n\n\nBuchstaben aus einer Zeichenkette kann man auch mit folgendem Operator entnehmen, und bspw. einer Variablen zuweisen:\n\nBeispiel (hier können bspw. die Zeichen 3 bis 5 aus einer Zeichenkette entnommen werden):\n\n\n\n\nTexte Verändern: Vorhandene Texte (entweder als Ausdrücke oder aus Variablen vom Datentyp String) können durch die Anwendung von Operatoren verändert werden.\n\nFolgender Operator kann verwendet werden, um Text in Grossbuchstaben oder in Kleinbuchstaben umzuwandeln:\n\n\n\n\n\nFührende, abschließende oder führende und abschließende Leerzeichen können durch folgenden Operator entfernt werden:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Date & Time der Palette enthält Blockly-Elemente zur Verwendung Zeiten innerhalb von Ablaufdefinitionen.\nFesthalten von Zeitpunkten: Variablen vom Datentyp DateTime können Zeitstempel zugewiesen werden.\nErmitteln von Zeitdifferenzen: Vollständiges Beispiel: Folgender Blockly-Code misst die Zeit für die Bearbeitung von Task 1 bis 4. Dafür wird zunächst der Startzeitpunkt fegesthalten, und nach der Bearbeitung der Aufgaben wird die Zeitdifferenz ermittelt und in Sekunden umgewandelt:\n\n\n\nUmrechen von Zeitmaßen\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Lists der Palette enthält Blockly-Elemente zur Erstellung und Verwendung von Listen.\nListe erstellen: Es stehen verschiedene Optionen zur Verügung, wie Listen erstellt werden können.\n\nListen können aus besehenden Elementen erstellt werden:\n\n\n\n\n\nDie Anzahl der Elemente des Operators erzeuge Liste mit kann per Drag-and-Drop konfiguriert werden, nachdem Zahnrad-Symbol angeklickt wurde:\n\n\n\n\n\nListe können durch Wiederholung eines Elements erstellt werden:\n\n\n\n\nVerbinden von Listen: Bestehende Listen können zusammengeführt werden mit folgenden Operator:\n\n\n\nTeillisten: Aus Listen kann mit folgendem Operator eine Teilliste ausgewählt werden:\n\n\n\n\nWeitere Optionen des Operators für bis: bis von hinten und bis letztes.\n\nEigenschaften von Listen: Folgende Operatoren stehen zur Verfügung um Eigenschaften einer Liste abzufragen:\n\nFolgender Operator gibt wahr zurück, wenn die verbundene Liste leer ist:\n\n\n\n\n\nFolgender Operator gibt die Länge der Liste zurück:\n\n\n\n\n\nFolgender Operator gibt die distinkte Elemente einer Liste zurück\n\n\n\n\nSuchen und Ersetzen: Folgende Operatoren stehen zum Suchen und Ersetzen von Elementen in Listen zur Verfügung:\n\nFolgender Operator findent Elemente in Listen:\n\n\n\n\n\nFolgender Operator gibt / entfernt oder ersetzt in einer Liste und gibt das ELement zurück:\n\n\n\n\n\nWeitere Optionen des Operators für das: von hinten das / Erste / Letzte und Zufällig.\n\n\nFolgender Operator ersetzt under fügt in einer Liste ein:\n\n\n\n\n\nWeitere Optionen des Operators für das: von hinten das / Erste / Letzte und Zufällig.\n\nUmwandlung von Listen und Text: Liste und Text können über Trennzeichen umgewandelt werden.\n\nFolgender Operator erstellt einen Text aus einer Liste oder eine Liste aus einem Text:\n\n\n\n\nListen Sortieren: Elemente in Listen können auch sortiert werden.\n\nFolgender Operator gibt die distinkte Elemente einer Liste zurück:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Variables der Palette enthält Blockly-Elemente zur Erstellung und Verwendung von Variablen.\nVariable Erstellen: Um eine Blockly-Variable zu erstellen enthält die Palette die Typisierte Variable Erstellen:\n\n\n\n\nBlockly-Variablen haben immer einen Variablennamen und Datentyp:\n\n\n\n\n\nEinfache Datentypen und Wertzuweisungen: Folgende basale Datentypen werden unterstützt:\n\nBoolean: Logische Wahrheitswerte und Logische Ausdrücke (wahr oder falsch)\n\n\n\n\n\nNumber: Datentyp für Zahlenwerte (mit und ohne Dezimalstelle)\n\n\n\n\n\nString: Textwerte bzw. Zeichenketten\n\n\n\n\n\nFür Zeiten werden folgende Datentypen bereitgestellt:\n\n\nDateTime: Datum und Uhrzeit\n\n\n\n\n\nTimeSpan: Zeitspanne\n\n\n\n\nDatentypen für mehrere Werte: Neben den basalen Datentypen werden auch Datentypen für mehrere Werte unterstützt:\n\nArray: Datentyp für Listen\n\n\n\n\n\nDictionary: (Dokumentation fehlt)\nKeyTypedValuePairs: (Dokumentation fehlt)\n\nVariablenwerte Verwenden: Für die Verwendung von Variablenwerten, können Blockly-Elemente mit Eingängen folgende Komponente aufnehmen:\n\n\n\n\nWelche Variable verwendet wird, kann dabei ausgewählt werden. Für defnierte Variablen findet sich dafür jeweils auch ein Blockly-Element im Abschnitt Variables der Palette:\n\n\n\n\n\nIn der Palette findet sich auch ein Blockly-Element vom Typ setze … auf. In diesem kann ebenfalls ausgewählt werden, den Wert welcher Variable es setzt:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Functions der Palette enthält Blockly-Elemente zur Verwendung von Funktionen innerhalb von Ablaufdefinitionen. Funktionen kombinieren Blocky-Code, so dass dieser nur einmal definiert aber mehrfach verwendet werden kann.\nDefinieren von Funktionen: Es können zwei verschiede Formen von Funktionen definiert werden.\n\nFunktionen ohne Rückgabewert:\n\n\n\n\n\nFunktionen ohne Rückgabewert können, damit sie augerufen werden, im Ablauf einfach mit vorherigen und nachfolgenden Blockly-Elementen verbunden werden (d.h. sie haben eine Verbindung nach oben und unten):\n\n\n\n\n\nFunktionen mit Rückgabewert:\n\n\n\n\n\nFunktionen mit Rückgabewert können in einem Zuweisungs-Block aufgerufen werden (d.h. sie haben eine Verbindung nach links):\n\n\n\n\nZu welchem Typ eine Zuweisung sinnvoll ist, hängt von dem Typ des Rückgabewerts ab.\nDefinieren von Rückgabewerten von Funktionen: Funktionen werden durch speziellen Blockly-Elemente definiert, die an einer beliebigen Stelle im Code-Editor eingefügt werden können.\n\nRückgabewerte können für Funktionen mit Rückgabewert definiert werden. Der Rückgabewert kann direkt an die Funktionsdefinition neben gib zurück angefügt werden:\n\n\n\n\nErgänzend stehen die folgenden zwei Blockly-Elemente zur Verfügung, die nur innerhalb einer Funktiondefintion (mit Rückgabewert) verwendet werden können:\n\nDer Operator gib zurück erlaubt die Rückgabe eines Wertes. Danach können innerhalb der Funktion keine weiteren Blockly-Element in den Ablauf platziert werden (d.h. der gib zurück-Operator hat keine Verbindung nach unten):\n\n\n\n\n\nDer Operator falls gib zurück Operator gibt eine Wert nur dann zurück, wenn eine Bedingungen erfüllt ist. Ist die Bedingung erfüllt, endet die Abarbeitung des Ablaufs in der Funktion, ist die Bedingung nicht erfüllt, wird die Bearbeitung fortgesetzt (d.h. der falls gib zurück-Operator hat eine Verbindung nach unten):\n\n\n\n\n\nDer falls gib zurück Operator ist also identisch mit folgender Kombination von Operatoren:\n\n\n\n\n\nBeide Operatoren (falls gibt zurück und gib zurück) können nicht außerhalb von Funktionen verwendet werden:\n\n\n\n\n\nDie beide Operatoren (falls gibt zurück und gib zurück) können innerhalb von Funktionen ohne Rückgabewert verwendet werden, um die Abarbeitung von Funktionen zu beenden (aber nicht zum Rückgeben von Werten):\n\n\n\n\nBeispiel:\n\nDie folgende Funktion gibt den Wert der Variablen MyStringVariable (Any value 1) in 50% der Fälle zurück (d.h. wenn eine erste gezogene Zufallsvariable größer \\(0.5\\) ist). In den anderen 50% der Fälle, wird eine weitere Zufallsvariable gezogen, und wenn diese größer \\(0.5\\) ist, dann wird der Text Any value 2 zurückgegeben. Ist auch dies nicht der Fall, dann wird der Text Default zurückgebeben:\n\n\n\n\nRückgabewerte sind typisiert. Die Ablaufsteuerung unterstützt auch Funktionen, die …\n\n… einzelne Tasks zurückgeben:\n\n\n\n\n\n… Listen von Tasks zurückgeben:\n\n\n\n\nDefinieren von Aufrufparametern von Funktionen: Funktionen können auch Parameter verwenden, die beim Aufruf der Funktion zu übergeben sind (Aufrufparametern). Die Defintion von Aufrufparametern ist nach einem Klick auf das kleine Zahnrad-Symbol eines Funktions-Blocks möglich:\n\nPassend zur Definition der Parameter, erfolgt dann der Aufruf der Funktion durch Übergabe:\n\nDefinition eines Parameters\n\n\n\n\n\nAufruf der Funktion mit Angabe von Wert:\n\n\n\n\nBeispiel:\n\nDas folgende Beispiel zeigt eine Funktion mit zwei Parameter, deren Verwendung innerhalb der Funktion am Beispiel von Bedingungen und den Aufruf der Funktion mit festen Werten:\n\n\n\n\n\nAlternativ kann die Funktion natürlich auch mit Variablen aufgerufen werden:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\n(Dokumentation)\n\n\n(nach oben)\n\n\n\n\n\n(Dokumentation folgt)\n\n\n(nach oben)\n\n\n\n\n\n(Dokumentation folgt)\nLog-Daten: Folgender Operator kann genutzt werden, um Informationen direkt in die Log-Daten zu speichern:\n\nErgebnis-Daten: (Dokumentation folgt)\nMonitoring-Daten: (Dokumentation folgt)\n\n\n(nach oben)\n\n\n\n\n\n\nDer IRTLib Editor unterstützt zwei verschiedene Optionen zur Kommentierung von Blockly-Code.\n\n\nKommentare, die im Ablauf dauerhaft sichtbar sein sollen, können über die Plaette im Abschnitt Development hinzugefügt werden:\n\nDiese Kommentare können wie Blocky-Operatoren verschoben werden und zeigen einzeiligen Kommentartext.\n\n\n\n\nFür ausführlichere Kommentare kann über das Kontextmenü jeder Block mit einem Kommentar hinzugefügt (und wenn vorhanden gelöscht) werden:\n\nDiese Kommentare können mehrere Zeilen umfassen und werden dargestellt, wenn auf das kleine ?-icon eines Blocks geklickt wurde.\n\n\n\n(nach oben)\n\n\n\n\n\n\n\n\n\nGroße und komplexe Abläufe können im Blockly-Editor unter Umständen unübersichtlich werden. Um für eine Betrachtung nicht benötigte Blockly-Elemente auszublenden, ohne die Funktion des Ablaufdefinition zu veränern, können Blöcke zusammengefaltet werden:\nDas wird in folgendem Beispiel illustriert:\n\nEntfaltete (d.h. vollständige) Darstellung des markierten Blocks:\n\n\n\n\n\nOption zum zusammenfalten des Blocks im Kontextmenü:\n\n\n\n\n\nZusammengefaltete Darstellung des Blocks innerhalb der Ablaufdefinition:\n\n\n\n\n\nOption zum entfalten des Blocks im Kontextmenü:\n\n\n\n\nDas zusammenfalten / entfalten von Blockly-Elementen ändert nichts an der Funktion einer Ablaufdefinition und dient nur der übersichtlicheren Anordnung von komplexen Ablaufdefinitionen.\n\n\n\n\nDer Blockly-Editer bietet die Option, Blockly-Element statt sie zu Löschen nur zu deaktivieren. Deaktivierte Blockly-Elemente bleiben in der Ablaufdefinition enthalten, werden aber nicht ausgeführt.\nIn folgendem Beispiel ist der Block zum Anzeigen des Tasks 3 deaktiviert, d.h. es werden nur Task 1, 2 und 4 angezeigt:\n\nAktivieren bzw. Deaktivieren von Blockly-Elementen erfolgt über das Kontextmenü:\n\n\nInternal / External: Einige Blockly-Elemente mit Eingängen (d.h. Stellen, an denen man weitere Blöcke verbinde kann) erlauben zwischen zwei Darstellungsformen zu wechseln.\n\nInternal: Die Eingänge sind innerhalb der Blöcke angeordnet.\n\n\n\n\n\nExnternal: Die Eingänge sind an der Seite der Blöcke angeordnet.\n\n\n\n\n\nBeide Darstellungsformen sind bzgl. der Funktionalität äquivalent.\n\n\nAufräumen: Im Kontextmenü des Blockly-Editors, welches durch Klick in einen leeren Bereich geöffnet werden kann, ist die Funktion Bausteine aufräumen enthalten:\n\nDurch Aufruf von Bausteine aufäumen werden alle Blockly-Elemente im Blockly-Editor vertikal untereinander ausgerichtet.\n\n\n(nach oben)\n\n\n\n\n\n\n\n\n\nWenn mehrere Erhebungsteile für eine Studie definiert sind, kann die Abfolge von Erhebungsteilen definiert werden, in welcher Befragte oder Testpersonen die Inhalte der Erhebungsteile präsentiert bekommen.\nNeben einfachen linearen Abläufen können Abläufe von mehreren Erhebungsteilen auch mit einem Blockly-basierten Routing konfiguriert werden.\nEine detaillierte Beschreibung zum Routing zwischen Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDie Reihenfolge von Erhebungsteilen kann mit Hilfe von Blockly definiert werden (analog zur Definition der Reihenfolge von Items innerhalb von Erhebungsteilen). Diese Option ist verfügbar, wenn in der Grundkonfiguration zu einer Studie (in der Ansicht Übersicht) die Option Routing für Erhebungsteile aktivieren gewählt ist.\nFür die allgemeinen Grundlagen zur Verwendung von Blockly im IRTlib Editor siehe die Hilfe zum Routing innerhalb von Erhebungsteilen.\nFunktionen die nur im Routing zwischen Erhebungsteilen zur Verfügung stehen sind:\n\nErhebungsteil Anzeigen\n\n\n\n\n\nDieser Blockly-Operator ersetzt das Show Item innerhalb von Erhebungsteilen.\n\n\nErfolgreiches Login\n\n\n\n\n\nDieser Blockly-Operator hat den Wert wahr, wenn vor der Anzahl der maximalen Versuche (hier: unendlich, d.h. unbegrenzt hoft) gültige Login-Informationen angegeben wurden.\n\nHinweis: Änderungen an der Sicht Routing zwischen Erhebungsteilen müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  },
  {
    "objectID": "preparation-parts.html#erhebungsteilverwaltung",
    "href": "preparation-parts.html#erhebungsteilverwaltung",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Nach dem Erstellen einer Studie erfolgt in der Ansicht Erhebungsteile als nächster Schritt zur Vorbereitung einer Testauslieferung das Hinzufügen eines neuen Erhebungsteils:\n\nDie erstellten Erhebungsteile erscheinen als Karten in der Ansicht Erhebungsteile. Wenn Studien aus mehreren Erhebungsteilen bestehen, kann für lineare Abläufe die Reihenfolge der Erhebungsteile in der Ansicht Erhebungsteile / Übersicht angepasst werden. Sollen Erhebungsteile in Abhängigkeit von Variablen, z.B. übergebene Preload-Variablen oder andere Blockly-Variablen gesteuert werden, kann alternativ ein Routing zwischen Erhebungsteilen konfiguriert werden.\nEine detaillierte Anleitung zur Erstellung von Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nMit dem IRTLib Editor werden Konfigurationen für Studien erstellt, welche dann in einem IRTLib Player zur Durchführung computerbasierter Assessments verwendet werden können. Studien bestehen aus einem oder mehreren Erhebungsteilen.\n\n\nNachdem eine Studie angelegt ist, kann nun über Plus-Icon unten rechts ein Erhebungsteil hinzugefügt werden:\n\n\n\n\n\nDanach geben Sie bitte in dem Dialog Neuen Erhebungsteil erstellen eine Bezeichnung und optional eine Beschreibung ein.\nAchten Sie darauf, dass für die Bezeichnung wieder nur Buchstaben (Groß- und Kleinschreibung), Ziffer und ein _ erlaubt sind.\nKlicken Sie anschließend auf Speichern.\n\n\n\n\n\nBei Bedarf können Sie über das folgende Icon einem Erhebungsteil auch ein Bild zuordnen. Dieses Bild wird im IRTLib Editor für diesen Erhebungsteil verwendet:\n\n\n\n\n\n\n\n\nErstellten Erhebungsteile werden in der Erhebungsteilübersicht als Kacheln angezeigt:\n\n\n\n\n\n\nUm nun mit der Konfiguration eines Erhebungsteils fortzufahren, klicken Sie auf das kleine Bearbeiten-Icon:\n\n\n\n\n\n\n\nErhebungsteil Löschen: Mit dem Papierkorb-Icon können Sie Erhebungsteile auch wieder löschen. Das Löschen von Erhebungsteilen kann nicht rückgängig gemacht werden:\n\n\n\n\n\n\n\n\n\nWenn in der Konfiguration einer Studie in der Ansicht Info (Abschnitt Übersicht) die Option Routing für Erhebungsteile aktivieren nicht ausgewählt ist, dann werden Erhebungsteile in der Reihenfolge administriert, in welcher sie in der Erhebungsteilverwaltung angezeigt werden.\n\nErhebungsteile Verschieben: Um per drag-and-drop die Reihenfolge von Erhebungsteilen zu verändern, muss zunächst über folgendes Toggle-Icon der Modus Reihenfolge Ändern aktiviert werden:\n\n\n\n\n\n\n\nDanach können die Kacheln in die gewünschte Reihenfolge gebracht werden. Der Modus Reihenfolge Ändern wird beendet, wenn das Disketten-Symbol angeklickt oder die Änderungen verworfen werden:\n\n\n\n\n\n\n\n\n\n\nDie Reihenfolge von Erhebungsteilen kann in der Ansicht Erhebungsteile verändert werden:\n\nVor dem Hinzufügen bzw. Auswählen von CBA ItemBuilder Projekten, wie im Abschnitt Assessmentinhalte (Items) beschrieben, können in der Ansicht Info ausgewählte Einstellungen konfiguriert werden.\nEine detaillierte Beschreibung findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n\n\nBezeichnung: Die interne Bezeichnung des Erhebungsteils, welche im IRTlib Editor zur Bearbeitung und zur Definition des Ablaufs angezeigt wird. Bezeichnungen dürfen keine Sonderzeichen, Leerzeichen und Umlaute enthalten und nicht mit einer Ziffer beginnen.\nBeschreibung: Optionale, zusätzliche Beschreibung eines Erhebungsteils.\n\n\n\n\n\nRouting aktivieren: Die konfigurierten Assessmentinhalte im Abschnitt Items können als lineare Sequenz, d.h. in der konfigurierten Reihenfolge administriert werden. Soll eine davon abweichende Reihenfolge verwendet werden, kann hier die Option Routing aktivieren gewählt werden. Die Reihenfolge kann dann im Abschnitt Routing als visuelles Programm spezifiziert werden.\n\n\n\n\n\nSnapshot verwenden: Damit CBA ItemBuilder Tasks mehrfach besucht werden können, wird deren Inhalt beim Verlassen des Items in sogenannten Snapshots gespeichert. Snapshots können auch dazu verwendet werden, um die Inhalte eines CBA ItemBuilder Tasks zu einem späteren Zeitpunkt erneut darzustellen. Diese Option sollte nur dann deaktiviert werden, wenn es einen gewichtigen Grund gibt und die Konsequenzen (d.h. die dann nicht gespeicherten Snapshot-Daten) sorgfältig bedacht wurden.\n\n\n\n\n\nDas Hinzufügen und Verwalten von CBA ItemBuilder Projekte innerhalb des IRTlib-Editors erfolgt im Abschnitt Items.\n\n\n\n\n\n\nHinweis zur Zeitbegrenzung\n\n\n\n\n\nFür die Administration von zeitbegrenzten Erhebungsteilen kann unter Bearbeitungszeit ein Zeitlimit definiert werden. Wenn die Option Bearbeitungszeit begrenzen aktiviert ist, können ein oder mehere Tasks definiert werden, welche bei einem Timeout angezeigt werden. Außerdem können im Abschnitt Vorspann-Items(s) und Nachspann-Item(s) Inhalte definiert werden, welche vor bzw. nach dem zeitbegrenzten Teil administriert werden."
  },
  {
    "objectID": "preparation-parts.html#assessmentinhalte-items-einfügen",
    "href": "preparation-parts.html#assessmentinhalte-items-einfügen",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Die Inhalte, welche in einem Erhebungsteil vom Typ CBA ItemBuilder verwendet werden sollen, werden über den IRTlib Editor in die Konfiguration übernommen, d.h. die mit dem IRTlib Editor erstellte Konfiguration enthält auch die CBA ItemBuilder Project Files. Für das Hinzufügen oder Aktualisierung von CBA ItemBuilder Projekten steht die Ansicht Items zur Verfügung.\nEine detaillierte Beschreibung findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n\n\nImportieren von CBA ItemBuilder-Projektdateien: Der IRTlib Editor pflegt eine Liste bekannter Items, zu denen CBA ItemBuilder-Projektdateien die noch nicht bekannt sind hinzugefügt werden können. Um eine Projektdatei hinzuzufügen, öffnet man zunächst mit dem +-Symbol die Liste bekannter Items und wählt dann die Schaltfläche Importieren aus.\n\n\n\n\n\n\n\n\n\n\n\n\nAktualisieren bereits importierter CBA ItemBuilder-Projektdateien: Wenn eine CBA ItemBuilder-Projektdatei bereits in der Liste der bekannten Items enthalten ist, können die Projektdateien aktualisiert werden. Sie werden dann nicht zusätzlich zur Liste der bekannten Items hinzugefügt, sondern die bereits vorhandene CBA ItemBuilder-Projektdatei wird in einer neueren Version hinterlegt. Um ein Item zu aktualisieren, muss es zunächst in der Liste der Items eines Erhebungsteils ausgewählt werden. Dadurch wird das Aktualisieren-Symbol aktiv. In dem sich dann öffnenden Dialog Item aktualisieren, kann über die Schaltfläche Importieren eine aktualisierte Version einer CBA ItemBuilder-Projektdatei hinzugefügt werden.\n\n\n\n\n\n\n\n\n\n\n\n\nVorschau von CBA ItemBuilder-Projektdateien: Die in einem Erhebungsteil hinzugefügten Items können direkt im IRTlib Editor in einer eingebauten Preview-Funktion angesehen werden. Um ein Item anzusehen, muss es zunächst in der Liste der Items eines Erhebungsteils ausgewählt werden. Danach kann die Vorschau über das Augen-Symbol aufgerufen werden:\n\n\n\n\n\n\n\nExportieren von CBA ItemBuilder-Projektdateien: CBA ItemBuilder-Projektdateien, die in den IRTlib Editor importiert wurden, können zur weiteren Bearbeitung mit dem CBA ItemBuilder exportiert werden. Um ein ausgewähltes Item aus der Liste der Items eines Erhebungsteils zu exportieren, kann das Download-Symbol aufgerufen werden:\n\n\n\n\n\n\n\nLöschen von CBA ItemBuilder-Projektdateien: Die in Erhebungsteilen eingefügten Items können aus einem Erhebungsteil wieder gelöscht werden. Durch das Löschen-Symbol wird das Item aus einem Erhebungsteil entfernt, es verbleibt aber in der Liste bekannter Items:\n\n\n\n\n\n\n\nHinweis: Es ist bisher nicht möglich, CBA ItemBuilder-Projektdateien aus der Liste bekannter Items wieder zu löschen. Diese Funktionalität ist nicht notwendig, da CBA ItemBuilder-Projektdateien vom IRTlib-Editor nur dann in die Konfiguration einer Studie übernommen werden, wenn Tasks aus einer CBA ItemBuilder-Projektdatei in einem Erhebungsteil verwendet werden.\n\n\n\n\n\nSortieren CBA ItemBuilder-Projektdateien: Wenn für einen Erhebungsteil die Option Routing aktivieren nicht ausgewählt ist, dann kann in der Liste der Items die Reihenfolge über die folgende Schaltfläche angepasst werden:\n\n\n\n\n\n\n\nDie Items dann exakt so administriert, wie sie für einen Erhebungsteil in dieser Liste aufgeführt sind.\n\nHinweis: Änderungen an der Sicht Items müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  },
  {
    "objectID": "preparation-parts.html#bearbeitungszeit",
    "href": "preparation-parts.html#bearbeitungszeit",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Wenn die Administration einer linearen Folge von CBA ItemBuilder Tasks mit einer begrenzten Bearbeitungszeit administriert werden sollen, lässt sich dies durch Definieren einer maximalen Bearbeitungszeit (in Sekunden) umsetzen. Soll bspw. ein Testinhalt maximal 28 min. administriert werden, wird als Bearbeitungszeit eine Zeit von 1680 Sekunden definiert. Die Nachricht, welche beim Ablaufen der Bearbeitungszeit angezeigt werden soll, lässt sich als ein (oder mehrere) CBA ItemBuilder Tasks definieren.\nEine detaillierte Beschreibung findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nErhebungsteile ohne Routing können auf einfache Weise einen zeitbegrenzten Abschnitt enthalten. Dafür wird in der Sicht Bearbeitungszeit die Option Bearbeitungszeit begrenzen aktiviert und ein Zeitlimit in Sekunden (&gt;0) eingetragen.\nFür eine Zeitbegrenzung werden vier Gruppen von CBA ItemBuilder Tasks unterschieden, die an unterschiedlichen Stellen im IRTlib Editor definiert werden. In der Sicht Items (analog zu nicht zeitbegrenzten Erhebungsteilen) werden die Items, für welche die Zeitbegrenzug gelten soll, definiert:\n\nItems: Items die so lange angezeigt werden, bis das Zeitlimit erreicht wurde.\n\nIn der Ansicht Bearbeitungszeit kann zusätzlich definiert werden:\n\nTimeout-Items: Items die nur angezeigt werden, wenn die zeitbegrenzten Items nicht in der begrenzten Bearbeitungszeit abgeschlossen wurden.\n\nAls einzelne Sichten der Konfiguration von Erhebungsteile können schließlich folgende Tasks definiert werden:\n\nVorspann-Items: Items die vor dem zeitbegrenzten Abschnitt angezeigt werden.\nNachspann-Items: Items die nach dem zeitbegrenzten Abschnitt angezeigt werden.\n\nIn allen genannten Dialogen stehen die Symbole für folgende Operationen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Komplexere Designs mit ggf. mehreren Timern lassen sich mit dem IRTlib Editor umsetzen, wenn die Option Routing aktivieren in der Übersichtsansicht zu einem Erhebungsteil aktiviert ist.\nHinweis: Änderungen an der Sicht Bearbeitungszeit müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVorspann-/Nachspann-Items\n\n\n\nEin zentrales Konzept für die Umsetzung von Zeitbegrenzungen in der IRTlib Software ist die Trennung der zeitbegrenzten Items, und zusätzlicher Assessmentinhalte, die vor oder nach dem zeitbegrenzten Teil administriert werden.\n\n\n\nItems die nach einem potentiell zeitbegrenzten Abschnitt eines Erhebungsteils administriert werden, werden als Nachspann-Items bezeichnet.\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDer Erhebungsteile erlauben die Definition von Items in verschiedenen Abschnitten. Items in diesem Abschnitt Nachspann-Item(s) werden nach den Items angezeigt, welche im Abschnitt Items eines Erhebungsteils definiert sind. Die Trennung in Nachspann-Item(s) und Items ist besonders sinnvoll, wenn unter Bearbeitungszeit eine Zeitbegrenzung aktiviert ist.\nUm Items in dem Abschnitt Nachspann-Item(s) zu konfigurieren, stehen die folgenden Optionen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Änderungen an der Sicht Nachspann-Item(s) müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\nItems die vor einem potentiell zeitbegrenzten Abschnitt eines Erhebungsteils administriert werden, werden als Vorspann-Items bezeichnet.\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDer Erhebungsteile erlauben die Definition von Items in verschiedenen Abschnitten. Items in diesem Abschnitt Vorspann-Item(s) werden vor den Items angezeigt, welche im Abschnitt Items eines Erhebungsteils definiert sind. Die Trennung in Vorspann-Item(s) und Items ist besonders sinnvoll, wenn unter Bearbeitungszeit eine Zeitbegrenzung aktiviert ist.\nUm Items in dem Abschnitt Vorspann-Item(s) zu konfigurieren, stehen die folgenden Optionen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Änderungen an der Sicht Vorspann-Item(s) müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  },
  {
    "objectID": "preparation-parts.html#variablen",
    "href": "preparation-parts.html#variablen",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Under Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)"
  },
  {
    "objectID": "preparation-parts.html#codebook",
    "href": "preparation-parts.html#codebook",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Under Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)"
  },
  {
    "objectID": "preparation-parts.html#itempool",
    "href": "preparation-parts.html#itempool",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Under Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)"
  },
  {
    "objectID": "preparation-parts.html#routing-innerhalb-von-erhebungsteilen-1",
    "href": "preparation-parts.html#routing-innerhalb-von-erhebungsteilen-1",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Wenn CBA ItemBuilder-Tasks nicht in einer linearen Abfolge administriert werden sollen, die im Vorhinein feststeht und für alle Testpersonen identisch ist, dann kann die Funktion Routing der IRTlib Software verwendet werden.\nEine detaillierte Beschreibung zum Routing innerhalb von Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n\nDie Reihenfolge von CBA ItemBuilder-Aufgaben kann hier mit Hilfe von Blockly (also einer Form des visuellen Programmierens) definiert werden. Blockly-basierte Ablaufsteuerung ist verfügbar, wenn bei einem Erhebungsteil die Option Routing aktivieren ausgewählt ist. Die Option ist im Abschnit Info eines Erhebungsteils zu finden. Ist sie aktiviert, enthält der Erhebungsteil den Eintrag Routing.\n\nÜbersicht:\n\nBeipsiele: lineare Ablauf, einfache Testhefte, Ablauf mit Zeitbegrenzung und Booklet-Designs\nKurzanleitung: Allgemeine Hinweis zum Blockly-Editor\nGrundlagen: Nutzung des Blockly-Editor\n\nAnzeigen von Items oder Itemlisten\nDefinition von Zeitbegrenzungen\nÄnderungen am Testleitermenü\n\nVertiefung: Fortgeschrittene Blockly-Verwendung\n\nAblaufsteuerung mit Bedingungen\nAblaufsteuerung mit Schleifen\nOperatoren für Zahlen, Text, Zeiten und Listen.\nVertiefung zu Blockly-Variablen und Blockly-Funktionen\nNutzung von Itemergebnissen in der Ablaufdefinition\nBlockly-Operatoren zum Kodieren fehlender Werte und zum Schreiben von Daten\n\nKommentieren von Blockly-Code\nAnpassung der Darstellung von Blockly-Code\n\n\n\n\nDie Grundidee zur Verwendung von Blockly für die Defnition von Abläufen in computerbasierten Assessments soll zunächst mit einigen Beispielen illsturiert werden.\n\n\nBeispiel für linearen Ablauf\n\n\nBasierend auf den einem Erhebungsteil hinzugefügten CBA ItemBuilder Tasks in der Ansicht Items entspricht eine lineare Folge der Tasks der folgenden Blockly-Definition:\n\n\n\n\n\nDem Blockly-Element Show Items wird eine Liste der CBA ItemBuilder Tasks übergeben, die mit dem Operator erzeuge Liste mit erstellt wird. Die Liste wird in der dargestellten Reihenfolge abgearbeitet, wobei jeder CBA ItemBuilder Tasks solange dargestellt wird, bis das NEXT_TASK- Command ausgeführt wird.\n\n\nEine äquivalente Formulierung einer linearen Sequenz kann auch mit mehreren Show Items-Blücken erfolgen, wenn keine Zurücknavigation notwendig ist:\n\n\n\n\n\nBeispiel für einfache Testhefte\n\n\nMit Hilfe einer Variable (hier: Booklet) und einer einfachen falls/mache-Bedingung lässt sich daraus nun ein Ablauf definieren, welcher je nach Wert der Variable unterschiedliche Items administriert:\n\n\n\n\n\nDie Items für Start und Ende werden immer administriert, die Tasks 1-3 nur, wenn die Variable Booklet der Wert 0 hat, die Tasks 4 und 5, wenn die Variable Booklet einen von 0 verschiedenen Wert hat.\n\n\nDer identische Ablauf lässt sich alternativ auch unter Verwendung des Blockly-Operators für das Anzeigen von Itemlisten erstellen:\n\n\n\n\n\nBeide Varianten sind bzgl. der Funktionalität völlig äquivalent, die zweite Vorgehensweise mit Listen erlaubt aber die Verwendung der Option Zurücknavigation innerhalb der booklet-spezifischen Tasks.\n\n\nBeispiel für Ablauf mit Zeitbegrenzung\n\n\nUm mit Hilfe der Blockly-Configuration Zeitbegrenzte Abschnitte innerhalb eines Erhebugnsteils umzusetzen, kann die folgende Blockly-Komponente verwendet werden:\n\n\n\n\n\nJeder Ablauf beginnt mit eine nicht zeitbgrenzten Start-Tasks und endet mit einem ebenfalls nicht zeitbegrenzten End-Tasks. Dazwischen läuft eine Zeitbegrenzung für einen Abschnitt mit der Bezeichnung MyFirstTimer, der eine Zeitbegrenzung für 60 Sekunden hat.\n\n\nDie Tasks 1, 2 und 3 werden in dem Abschnitt Runtime code mit einer Zeitbegrenzung angezeigt. Tritt ein Timeout auf, d.h. werden die drei Tasks nicht innerhalb der 60 Sekunden bearbeitet, wird (ebenfalls ohne Zeitbegrenzung) der Task 4 angezeigt.\n\n\nBeispiel für einfaches Booklet-Design mit Zeitbegrenzung\n\n\nBei vielen Items kann die Definition von Booklet Designs, d.h. Taskreihenfolgen mit balancierten Positionen, durch Funktionen bzw. Listen vereinfacht werden.\n\n\nWenn keine Zurücknavigation notwendig ist, können Funktionen für die Definition von Clustern verendet werden:\n\n\n\n\n\nMit Zurücknavigation können die Funktionen Listen von Tasks zurückgeben:\n\n\n\n\n\nWeitere Informationen siehe hier.\n\n\n\n(nach oben)\n\n\n\n\nDie Defintion von Abläufen erfolgt in dem visuellen Blockly-Editor. Die Ausführung beginnt mit dem Element, welches am weitesten oben ausgerichtet ist. Wenn nötig, kann der Arbeitsbereich mit der Funktion Aufräumen automatisch ausgerichtet werden. Zum Hinzufügen von Blockly-Operatoren können diese per Drag-and-Drop aus der Palette gezogen werden.\n\n\nLöschen: Zum Löschen von Operatoren können diese auf den Papierkorb gezogen werden. Ausgewählte Blockly-Elemente können auch über die Taste Entf(ernen) gelöscht werden. Alternativ können ausgewählte Blockly-Elemente auch über Kontextmenü gelöscht werden.\nRedo-/Undo: Innerhalb des Blockly-Editor können einzelne Aktionen rückgängig gemacht werden. Dafür kann die Tastenkombination Strg + Z verwendet werden. Mit Strg + Y wird eine Aktion wiederholt. Durch einen Klick in einen leeren Bereich des Blockly-Editors ist der Zugriff auf ein Kontextmenü möglich, welches ebenfalls die Optionen für Rückgängig und Wiederholen bereithält:\n\n\n\n\n\nSpeichern: Anpassungen im Blockly-Editor müssen gespeichert werden. Dafür steht unten rechts das Disketten-Symbol zur Verfügung:\n\n\n\n\n\nSollen die Änderung (insgesamt) verworfen werden, kann unten rechts die das Verwerfen-Symbol verwendet werden.\n\n\nZoom: Die Ansicht im Arbeitsbereich kann mit den Icons + vergrößert und mit - verkleinert werden.\n\n\n\nKontextmenü: Weitere Optionen sind über die rechte Maustaste (Kontextmenü) im Blocky-Editor verfügbar. Um diese Funktionen aufzurufen, muss auf ein Blockly-Element ein Sekundärklick (rechte Maustaste) durchgeführt werden:\n\nKopieren dupliziert das ausgewählte Blockly-Element, inklusive aller verbunder Elemente.\nKommentieren von Blöcken ist möglich.\nBlöcke können deaktiviert/aktiviert werden.\nManche Block-Typen erlauben die Darstellungsform extern/intern zu wechseln.\nBlöcke, welche weitere Blöcke enthalten, können zusammengefalten/entfaltet werden.\nDas Löschen von Blöcken ist auch über das Kontextemü möglich.\n\n\n\n\n\n\n\n\nEinige Blockly-Elemente stellen im Kontextmenü auch einen Eintrag Hilfe zur Vefügung, welcher auf die allgemein zugängliche Blockly-Dokumenten (https://github.com/google/blockly/wiki/) verweist.\n\n\n\n(nach oben)\n\n\n\n\n\n\nDie Grundfunktionen für die Nutzung der Blockly-Umgebung zur Steuerung von Assessments finden sich im Abschnitt Session.\n\n\n\nAuf CBA ItemBuilder-Tasks, die in der Ansicht Items für einen Erhebugnsteil importiert wurden, kann in der Ablaufsteuerung wie in den Beispielen obgen gezeigt mit Hilfe des folgende Blockly-Elements für Tasks zugegriffen werden:\n\nDas Element, welches im Abschnitt Session der Palette des Blockly-Editors zu finden ist, kann durch die Auswahlliste konfiguriert werden. Jedes Blockly-Elements für Tasks kann auf genau einen konkreten Task verweisen, d.h. in der Regel besteht eine Ablaufdefinition aus mehrerer solcher Elemente.\nBlockly-Elemente für Tasks können nicht direkt in den Ablauf eingefügt werden, sonder werden zusammen mit einem Show Item-Element verwendet:\n\nDas Beispiel für einfache Testhefte illustriert, dass Abläufe in der Blockly-Definition häufig durch eine Abfolge von mehreren Show Item-Operatoren definiert werden. Show Item-Operatoren können dabei in Bedingungen und Schleifen, sowohl innerhalb des Hauptablaufs als auch innerhalb von Funktionen eingefügt werden.\n\n\n\nMit Hilfe der Blocky-basierten Ablaufsteuerung ist es auch möglich, CBA ItemBuilder-Tasks mehrfach innerhalb eines Ablaufs zu administrieren:\n\nDabe wird beim erneuten Aufruf eines Items der Zustand aus dem letzten Besuch wiederhergestellt, d.h. die Bearbeitung wird fortgesetzt. Sollen Items mehrfach neu, d.h. unbearbeitet vorgelegt werden, kann das automatische wiederherstellen nicht gewünscht sein. Dafür kann optional die Checkbox für die Angabe eines Scopes (Geltungsbereich) aktiviert werden:\n\nWird nichts weiter angegeben, wird das Item im “Default”-Scope administriert. Alternativ kann ein Text definiert werde, wie in folgendem Beispiel zu sehen:\n\nBeim ersten Besuch wird der Task in dem Scope “Visit1” dargestellt. Danach folgt eine neue, unabhängige Darstellung des Tasks in einem anderen Scope (“Visit2”). Im dritten Aufruf wird der Task weder mit den Daten dargestellt, die beim ersten Besuch bereits gesammelt wurde (d.h. der Scope “Visit1” wird erneut verwendet).\n\n\n\n\nWie im Beispiel für linearen Ablauf zu sehen, können lineare Tests auch über Listen von Tasks dargestellt werden.\nListen können mit dem Blockly-Operator Show Items verwendet werden:\n \n\nZurücknavigation: Das Show Items-Element für Listen kann über die Eigenschaft Can navigate back konfiguriert werden. Ist diese Eigenschaft ausgewählt, dann können CBA ItemBuilder-Tasks mit dem Command BACK_TASK eine Navigation zum vorherigen CBA ItemBuilder Tasks anfordern.\nAbbrechen von Listen: Die Verwendung von Listen erlaubt auch das Abbrechen von Listen. Listen können über zwei Wege abgebrochen werden:\n\nDas Command CANCEL_TASK, welches innerhalb von CBA ItemBuilder Tasks verwendet werden kann, wird aufgerufen.\nIm Testleitermenü, welches für die Studie konfiguriert und ggf. über den Blockly-Operator Testleitermenü bearbeiten angepasst wurde, wird die Funktion Itemliste abbrechen aufgerufen.\n\n\n\nDie Adminsitration einer Itemliste wird dadurch abgebrochen, und die Abarbeitung des Blockly-Ablaufs nach dem Show Items-Block fortgesetzt.\n\n\n\n\n\nDie Operatoren Show Item (für einzelne Items) und Show Items (für Itemlisten) sind auch als Operatoren für Wertzuweisungen verfügbar:\n\nMit deren Hilfe lassen sich Ergebnisse der Itembearbeitung zu Variablen (String oder Array) zuweisen, und dann für die Ablaufsteuerng auswerten.\n\nEinzelner Task:\n\n\n\n\n\nListe von Tasks:\n\n\n\n\n\n\n\n\nWie im Beispiel Ablauf mit Zeitbegrenzung bereits illustriert, kann mit dem Blockly-Block Start time with name die Zeitbegrenzte Administration von Items umgesetzt werden.\nDas Blockly-Element Start timer with name erlaubt die Definition von Zeitbegrenzungen. Jede Zeitbegrenzung kann einen eigenen Namen haben. Zusätzlich muss die Zeit in Sekunden angegeben werden. Darüber kann definiert werden, welche Art von Zeit verwendet werden soll:\n\n\nRealtime:\nServertime:\nSessiontime:\nClienttime:\n\nSchließlich können zwei Stellen mit weiteren Blockly-Operatoren (wie bspw. ein oder mehrere Show Item-Blöcke zum Anzeigen einzelner Items oder ein oder mehrere Show Items-Blöcke zum Anzeigen von Listen) gefüllt werden:\n\nRuntime code: Diese Blöcke werden ausgefüllt, bis die definierte Zeit abgelaufen ist.\nElapsed code: Diese Blöcke werden nur ausgefüllt, wenn der Runtime code nicht innerhalb der Zeit beendet wurde.\n\n\n\n\n\nIn der Studiendefinition können Funktionen des Testleitermenüs für eine oder mehrere Rollen angelegt werden. Rollen stellen unterschiedliche Funktionen zusammen, die mit Hilfe des vom Testleiter einzugebenden Passworts unterschieden werden können.\nAnpassen von Standardfunktionen: Folgende Standardfunktionen können für eine Studie im Abschnitt Info / Testleitermenü definiert werden:\n\nNavigation: Aufgabe vor / Aufgabe zurück\nListen: Itemliste abbrechen\nBeenden: Erhebungsteil beenden und Session beenden\nLautstärkeregelung: Einstellen der Audiolautstärke während des Assessments\n\n\nWährend der Bearbeitung eines Erhebungsteils kann in der Ablaufsteuerung mit Hilfe des folgenden Blockly-Operators das Testleitermenü kontextspezifisch angepasst werden:\n\n\n\n\n\nDas Testleitermenüs kann für jede der Standardfunktionen (im Bereich Funktion) für eine Rolle (im Bereich Gruppe) sowohl die Beschriftung der Schaltfläche (im Bereich Label) geändert werden:\n\n\nHinzufügen: Funktion wird im Testleitermenü ergänzt\nEntfernen: Funktion wird aus dem Testleitermenü entfernt\nDeaktivieren: Funktion wird im Testleitermenü deaktiviert\nAktivieren: Funktion wird im Testleitermenü aktiviert\n\n\n\n\n\nDer Aufruf dieses Blockly-Operators im Testablauf definiert das Verhalten des Testleitermenüs im weiteren Testablauf. Im Unterschied zu Entfernen bleiben deaktivierte Funktionen im Testleitermenü sichtbar, können aber (bis sie wieder aktiviert werden) nich ausgeführt werden.\n\nVerwenden von Blockly-Funktionen im Testleitermenü: Der Blockly-Operator für das Bearbeiten des Testleitermenüs enthält im Abschnitt Funktion auch die Option zum Ausführen von Blockly-Code (ExecuteBockly):\n\n\n\n\nWenn als ExecuteBlockly ausgewählt ist, dann kann in dem Blockly-Element Testleitermenü bearbeiten eine innerhalb des Blockly-Editors definierte Funktionen ausgewählt werden. Die in dieser Funktion definierten Blockly-Operatoren werden dann ausgeführt, wenn ein Testleiter die entsprechende Schaltfläche zur Laufzeit im Testleitermenü auswählt.\n\n\n\n(nach oben)\n\n\n\n\n\n\n\n\n\nDer Abschnitt Logic enthält den Blockly-Operator falls/mache, welcher zur Umsetzung von Bedingungen im Ablauf verwendet werden kann. Bedingungen sind logische Ausdrücke, bspw. die Prüfung ob eine Preload-Variable einen bestimmten Wert hat:\n\nNur wenn die Bedingung (falls) erfüllt ist, werden die Blocky-Operatoren ausgeführt, welche innerhalb des Bedingungsblocks definiert sind (d.h. neben mache). In dem Beispiel wird geprüft, ob eine boolsche Variable den Wert wahr hat.\nDie Bedingung wird dabei als separater Block definiert, die mit dem Blockly-Operator falls/mache verbunden ist. Hier die beiden Komponenten separat:\n\nBedingung:\n\n\n\n\n\nLogischer Ausdruck:\n\n\n\n\n\n\n\n\nLogische Ausdtrücke in Bedingungen basieren entweder auf Wertevergleichen oder Rückgaben von Funktionen. Wertevergleiche können mit folgendem Blockly-Element realisiert werden:\n\nDie beiden Slots können mit Werten gefüllt werden. Für boolsche Werte (wahr/falsch) steht ein entsprechendes Blockly-Element im Abschnitt Logic bereit:\n\nBedingungen sind auch mit Variablen von anderem Datentyp möglich:\n\nFür numerische Werte gibt es ein entsprechendes Blockly-Element im Abschnitt Math, welcher Operatoren für Zahlen und einfache mathematische Operationen enthält:\n\nMit dessen Hilfe und einer numerischen Variable lässt sich folgende Bedingung formulieren:\nAus technischen Gründen kann es auch notwendig sein zu prüfen, ob eine Variable noch gar keinen Wert hat. Das kann durch Verwendung der Blockly-Komponente null umgesetzt werden:\n\nKombination von logischen Ausdrücken: Einzelne Bedingungen oder logische Ausdrücke können mit folgendem Blockly-Element aus dem Abschnitt Logik verbunden werden:\n\n\n\n\nDabei steht eine und sowie eine oder-Verknüpfung der Aussagen zur Auswahl. Die freien Eingänge\n\n\n\n\n\nMehrere logische Ausdrücke können in einander geschachtelt werden:\n\n\n\n\n\nHinweis: Für eine übersichtlichere Darstellung ist bei der äußeren und-Verknüpfung die externe Darstellung gewählt.\n\nMehrere Bedingungen (sonst falls / sonst): Durch Klick auf das kleine Zahnrad-Symbol eines Bedingungsblocks (falls/mache) kann dieser konfiguriert werden:\n\n\n\n\nDurch das Hinzufügen eines Abschnitts sonst falls können kann eine weitere Bedingung hinzugefügt werden. Die in einem sonst falls Abschnitt definierte Bedingung wird geprüft, wenn die vorherigen Bedingunge (falls) nicht erfüllt sind. Ist eine Bedingung erfüllt, werden die definierten Blockly-Operatoren ausgeführt.\n\n\nDurch das Hinzufügen eines Abschnitts sonst können Blöcke hinzugefügt werden, welche dann ausgeführt werden wenn keine der Bedingungen erfüllt ist.\n\nSpezialfall: prüfe-Operator für drei Bedingungen: Für drei Bedingungen stellt der Blockly-Editor eine speziellen Operator prüfe-falls wahr-falls falsch zur Verfügung:\n\n\n\n\nDer Operator kombiniert zwei logische Ausdrücke, z.B.:\n\n\n\n\n\nDas Konstrukt ist eine Kurzform für folgende Prüfung, wie sie in folgender Tabelle dargestellt ist:\n\n\n\n\nMyNumberVariable\nMyStringVariable\nMyBooleanVariable\nErgebnis\n\n\n\n\n\\(= 42\\)\n\\(=\\) Example\n(any)\ntrue\n\n\n\\(= 42\\)\n\\(\\neq\\) Example\n(any)\nfalse\n\n\n\\(\\neq 42\\)\n(any)\ntrue\ntrue\n\n\n\\(\\neq 42\\)\n(any)\nfalse\nfalse\n\n\n\n\nOhne den Operator für drei Bedingungen könnte die gleiche Prüfung mit folgender Kombination umgesetzt werden:\n\n\n\n\nNegation: Um einen logischen Ausdruck umzukehren (Negation) steht folgender Blockly-Operator zur Verfügung:\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDie mehrfache Ausführung von Blockly-Operatoren (und der damit darstellbaren Aktionen) ist mit Schleifen möglich. Der Abschnitt Loops der Palette enthält die dafür notwendigen Blockly-Elemente.\nWiederhole n-mal: Der folgende Blockly-Operator kann verwendet werden, um die Ausführung von Blöcke n-mal zu wiederholen:\n\n\n\nWiederhole solange: Schleifen können auch solange wiederholt werden bis eine Bedingung zutrifft (oder solange eine Bedingung zutrift):\n\n\n\n\nBeispiel:\n\n\n\n\nZähle von/bis: Schleife mit Hilfsvariablen:\n\n\n\n\nFür jeden Wert aus Liste: Schleife über alle Werte einer Liste:\n\n\n\nSchleifen vorzeitig abbrechen: Folgendes Blockly-Element kann genutzt werden, um eine Schleife (vorzeitig) abzubrechen oder um vorzeitig mit dem nächsten Schleifendurchlauf zu beginnen:\n\n\n\n\n\n\n\nDer Abschnitt Math der Palette enthält Blockly-Elemente zur Verwendung von Zahlen und einfachen mathematischen Funktionen.\nAusdrücke\n\nZahlen: Ganzzahlen / Dezimalzahlen\n\n\n\n\n\n\n\n\nSymbole: Spezielle Symbole oder Konstanten:\n\n\n\n\nBasale Funktionen\n\nAddition, Subtraktion, Multiplikation, Division und Potenzfunktion von zwei Argumenten:\n\n\n\n\n\nSchachtelung ist möglich, z.B.:\n\n\n\n\n\nDivision mit Rest:\n\n\n\n\n\nOb eien Zahl gerade ist, kann mit diesem Blockly-Element geprüft werden:\n\n\n\n\n\nMit dem folgenden Blockly-Element, kann eine Zahl auf einen Bereich begrenzt werden:\n\n\n\n\nEingebaute Funktionen\n\nTrigonometrische Funktionen:\n\n\n\n\n\nRunden von Werten:\n\n\n\n\n\nWeitere Funktionen:\n\n\n\n\nErzeugung von Zufallszahlen: Für die Erstellung von Zufallszahlen stehen zwei Blocky-Elemente zur Verfügung:\n\nGanzzahlen (in Wertebereich):\n\n\n\n\n\nZufallszahl zwischen \\(0\\) und \\(1\\):\n\n\n\n\nNumerische Funktionen für Listen: Vordefinierte Funktionen für Listen umfassen:\n\nHinweise:\n\nWeitere Funktionen lassen sich, wenn benötigt, mit Schleifen für Listen umsetzen.\nBei der Verwendung der Funktionen ist darauf zu achten, dass die ausgewählte Funktion für die Datentypen der List anwendbar ist.\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Text der Palette enthält Blockly-Elemente zur Verwendung Zeichenketten.\nAusdrücke: Zum erstellen von Text steht folgender Operator zur Verfügung:\n\nVerketten: Verschiedene Operatoren können verwendet werden, um Text zusammenzufügen und zu Variablen zuzuweisen:\n\nEinen Text an eine Variable anfügen:\n\n\n\n\n\nTexte (und Variablenwerte) verketten und an andere Blockly-Operatoren weitergeben:\n\n\n\n\n\nZusammengefügten Texte eine Variable zuweisen:\n\n\n\n\nTextlänge: Die Länge einer Zeichenkette kann mit folgendem Blockly-Operator ermittelt werden:\n\nPrüfung auf leeren String: Leere String-Variablen können daran erkannt werden, dass die Anzahl der Zeichen \\(0\\) ist.\n\nAlternativ kann dafür auch der folgende Blockly-Operator verwendet werden:\n\nPosition in String finden: Ein Operator, der im Text (der per Variable oder als Ausdruck übergeben wird) das erste oder letzte Auftreten eines Begriffs sucht, kann wie folgt verwendet werden:\n\nZurückgegben wird dabei die Position des Begriffs innerhalb der Zeichenkette (d.h. im Text).\nTeilzeichenketten bilden: Der folgende Operator nimmt aus der übergebenen Zeichenkette im Text die ersten Buchstaben. Die Anzahl der Buchstaben wird dabei ebenfalls übergeben.\n\nBeispiel (hier wird, wenn die Option nimm ersten ausgewählt ist der Variable MyStringVariable der Text ABC, d.h. die ersten drei Buchstaben der Zeichenkette ABCDEFG) zugewiesen:\n\n\n\n\nBuchstaben aus einer Zeichenkette kann man auch mit folgendem Operator entnehmen, und bspw. einer Variablen zuweisen:\n\nBeispiel (hier können bspw. die Zeichen 3 bis 5 aus einer Zeichenkette entnommen werden):\n\n\n\n\nTexte Verändern: Vorhandene Texte (entweder als Ausdrücke oder aus Variablen vom Datentyp String) können durch die Anwendung von Operatoren verändert werden.\n\nFolgender Operator kann verwendet werden, um Text in Grossbuchstaben oder in Kleinbuchstaben umzuwandeln:\n\n\n\n\n\nFührende, abschließende oder führende und abschließende Leerzeichen können durch folgenden Operator entfernt werden:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Date & Time der Palette enthält Blockly-Elemente zur Verwendung Zeiten innerhalb von Ablaufdefinitionen.\nFesthalten von Zeitpunkten: Variablen vom Datentyp DateTime können Zeitstempel zugewiesen werden.\nErmitteln von Zeitdifferenzen: Vollständiges Beispiel: Folgender Blockly-Code misst die Zeit für die Bearbeitung von Task 1 bis 4. Dafür wird zunächst der Startzeitpunkt fegesthalten, und nach der Bearbeitung der Aufgaben wird die Zeitdifferenz ermittelt und in Sekunden umgewandelt:\n\n\n\nUmrechen von Zeitmaßen\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Lists der Palette enthält Blockly-Elemente zur Erstellung und Verwendung von Listen.\nListe erstellen: Es stehen verschiedene Optionen zur Verügung, wie Listen erstellt werden können.\n\nListen können aus besehenden Elementen erstellt werden:\n\n\n\n\n\nDie Anzahl der Elemente des Operators erzeuge Liste mit kann per Drag-and-Drop konfiguriert werden, nachdem Zahnrad-Symbol angeklickt wurde:\n\n\n\n\n\nListe können durch Wiederholung eines Elements erstellt werden:\n\n\n\n\nVerbinden von Listen: Bestehende Listen können zusammengeführt werden mit folgenden Operator:\n\n\n\nTeillisten: Aus Listen kann mit folgendem Operator eine Teilliste ausgewählt werden:\n\n\n\n\nWeitere Optionen des Operators für bis: bis von hinten und bis letztes.\n\nEigenschaften von Listen: Folgende Operatoren stehen zur Verfügung um Eigenschaften einer Liste abzufragen:\n\nFolgender Operator gibt wahr zurück, wenn die verbundene Liste leer ist:\n\n\n\n\n\nFolgender Operator gibt die Länge der Liste zurück:\n\n\n\n\n\nFolgender Operator gibt die distinkte Elemente einer Liste zurück\n\n\n\n\nSuchen und Ersetzen: Folgende Operatoren stehen zum Suchen und Ersetzen von Elementen in Listen zur Verfügung:\n\nFolgender Operator findent Elemente in Listen:\n\n\n\n\n\nFolgender Operator gibt / entfernt oder ersetzt in einer Liste und gibt das ELement zurück:\n\n\n\n\n\nWeitere Optionen des Operators für das: von hinten das / Erste / Letzte und Zufällig.\n\n\nFolgender Operator ersetzt under fügt in einer Liste ein:\n\n\n\n\n\nWeitere Optionen des Operators für das: von hinten das / Erste / Letzte und Zufällig.\n\nUmwandlung von Listen und Text: Liste und Text können über Trennzeichen umgewandelt werden.\n\nFolgender Operator erstellt einen Text aus einer Liste oder eine Liste aus einem Text:\n\n\n\n\nListen Sortieren: Elemente in Listen können auch sortiert werden.\n\nFolgender Operator gibt die distinkte Elemente einer Liste zurück:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Variables der Palette enthält Blockly-Elemente zur Erstellung und Verwendung von Variablen.\nVariable Erstellen: Um eine Blockly-Variable zu erstellen enthält die Palette die Typisierte Variable Erstellen:\n\n\n\n\nBlockly-Variablen haben immer einen Variablennamen und Datentyp:\n\n\n\n\n\nEinfache Datentypen und Wertzuweisungen: Folgende basale Datentypen werden unterstützt:\n\nBoolean: Logische Wahrheitswerte und Logische Ausdrücke (wahr oder falsch)\n\n\n\n\n\nNumber: Datentyp für Zahlenwerte (mit und ohne Dezimalstelle)\n\n\n\n\n\nString: Textwerte bzw. Zeichenketten\n\n\n\n\n\nFür Zeiten werden folgende Datentypen bereitgestellt:\n\n\nDateTime: Datum und Uhrzeit\n\n\n\n\n\nTimeSpan: Zeitspanne\n\n\n\n\nDatentypen für mehrere Werte: Neben den basalen Datentypen werden auch Datentypen für mehrere Werte unterstützt:\n\nArray: Datentyp für Listen\n\n\n\n\n\nDictionary: (Dokumentation fehlt)\nKeyTypedValuePairs: (Dokumentation fehlt)\n\nVariablenwerte Verwenden: Für die Verwendung von Variablenwerten, können Blockly-Elemente mit Eingängen folgende Komponente aufnehmen:\n\n\n\n\nWelche Variable verwendet wird, kann dabei ausgewählt werden. Für defnierte Variablen findet sich dafür jeweils auch ein Blockly-Element im Abschnitt Variables der Palette:\n\n\n\n\n\nIn der Palette findet sich auch ein Blockly-Element vom Typ setze … auf. In diesem kann ebenfalls ausgewählt werden, den Wert welcher Variable es setzt:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\nDer Abschnitt Functions der Palette enthält Blockly-Elemente zur Verwendung von Funktionen innerhalb von Ablaufdefinitionen. Funktionen kombinieren Blocky-Code, so dass dieser nur einmal definiert aber mehrfach verwendet werden kann.\nDefinieren von Funktionen: Es können zwei verschiede Formen von Funktionen definiert werden.\n\nFunktionen ohne Rückgabewert:\n\n\n\n\n\nFunktionen ohne Rückgabewert können, damit sie augerufen werden, im Ablauf einfach mit vorherigen und nachfolgenden Blockly-Elementen verbunden werden (d.h. sie haben eine Verbindung nach oben und unten):\n\n\n\n\n\nFunktionen mit Rückgabewert:\n\n\n\n\n\nFunktionen mit Rückgabewert können in einem Zuweisungs-Block aufgerufen werden (d.h. sie haben eine Verbindung nach links):\n\n\n\n\nZu welchem Typ eine Zuweisung sinnvoll ist, hängt von dem Typ des Rückgabewerts ab.\nDefinieren von Rückgabewerten von Funktionen: Funktionen werden durch speziellen Blockly-Elemente definiert, die an einer beliebigen Stelle im Code-Editor eingefügt werden können.\n\nRückgabewerte können für Funktionen mit Rückgabewert definiert werden. Der Rückgabewert kann direkt an die Funktionsdefinition neben gib zurück angefügt werden:\n\n\n\n\nErgänzend stehen die folgenden zwei Blockly-Elemente zur Verfügung, die nur innerhalb einer Funktiondefintion (mit Rückgabewert) verwendet werden können:\n\nDer Operator gib zurück erlaubt die Rückgabe eines Wertes. Danach können innerhalb der Funktion keine weiteren Blockly-Element in den Ablauf platziert werden (d.h. der gib zurück-Operator hat keine Verbindung nach unten):\n\n\n\n\n\nDer Operator falls gib zurück Operator gibt eine Wert nur dann zurück, wenn eine Bedingungen erfüllt ist. Ist die Bedingung erfüllt, endet die Abarbeitung des Ablaufs in der Funktion, ist die Bedingung nicht erfüllt, wird die Bearbeitung fortgesetzt (d.h. der falls gib zurück-Operator hat eine Verbindung nach unten):\n\n\n\n\n\nDer falls gib zurück Operator ist also identisch mit folgender Kombination von Operatoren:\n\n\n\n\n\nBeide Operatoren (falls gibt zurück und gib zurück) können nicht außerhalb von Funktionen verwendet werden:\n\n\n\n\n\nDie beide Operatoren (falls gibt zurück und gib zurück) können innerhalb von Funktionen ohne Rückgabewert verwendet werden, um die Abarbeitung von Funktionen zu beenden (aber nicht zum Rückgeben von Werten):\n\n\n\n\nBeispiel:\n\nDie folgende Funktion gibt den Wert der Variablen MyStringVariable (Any value 1) in 50% der Fälle zurück (d.h. wenn eine erste gezogene Zufallsvariable größer \\(0.5\\) ist). In den anderen 50% der Fälle, wird eine weitere Zufallsvariable gezogen, und wenn diese größer \\(0.5\\) ist, dann wird der Text Any value 2 zurückgegeben. Ist auch dies nicht der Fall, dann wird der Text Default zurückgebeben:\n\n\n\n\nRückgabewerte sind typisiert. Die Ablaufsteuerung unterstützt auch Funktionen, die …\n\n… einzelne Tasks zurückgeben:\n\n\n\n\n\n… Listen von Tasks zurückgeben:\n\n\n\n\nDefinieren von Aufrufparametern von Funktionen: Funktionen können auch Parameter verwenden, die beim Aufruf der Funktion zu übergeben sind (Aufrufparametern). Die Defintion von Aufrufparametern ist nach einem Klick auf das kleine Zahnrad-Symbol eines Funktions-Blocks möglich:\n\nPassend zur Definition der Parameter, erfolgt dann der Aufruf der Funktion durch Übergabe:\n\nDefinition eines Parameters\n\n\n\n\n\nAufruf der Funktion mit Angabe von Wert:\n\n\n\n\nBeispiel:\n\nDas folgende Beispiel zeigt eine Funktion mit zwei Parameter, deren Verwendung innerhalb der Funktion am Beispiel von Bedingungen und den Aufruf der Funktion mit festen Werten:\n\n\n\n\n\nAlternativ kann die Funktion natürlich auch mit Variablen aufgerufen werden:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n\n(Dokumentation)\n\n\n(nach oben)\n\n\n\n\n\n(Dokumentation folgt)\n\n\n(nach oben)\n\n\n\n\n\n(Dokumentation folgt)\nLog-Daten: Folgender Operator kann genutzt werden, um Informationen direkt in die Log-Daten zu speichern:\n\nErgebnis-Daten: (Dokumentation folgt)\nMonitoring-Daten: (Dokumentation folgt)\n\n\n(nach oben)\n\n\n\n\n\n\nDer IRTLib Editor unterstützt zwei verschiedene Optionen zur Kommentierung von Blockly-Code.\n\n\nKommentare, die im Ablauf dauerhaft sichtbar sein sollen, können über die Plaette im Abschnitt Development hinzugefügt werden:\n\nDiese Kommentare können wie Blocky-Operatoren verschoben werden und zeigen einzeiligen Kommentartext.\n\n\n\n\nFür ausführlichere Kommentare kann über das Kontextmenü jeder Block mit einem Kommentar hinzugefügt (und wenn vorhanden gelöscht) werden:\n\nDiese Kommentare können mehrere Zeilen umfassen und werden dargestellt, wenn auf das kleine ?-icon eines Blocks geklickt wurde.\n\n\n\n(nach oben)\n\n\n\n\n\n\n\n\n\nGroße und komplexe Abläufe können im Blockly-Editor unter Umständen unübersichtlich werden. Um für eine Betrachtung nicht benötigte Blockly-Elemente auszublenden, ohne die Funktion des Ablaufdefinition zu veränern, können Blöcke zusammengefaltet werden:\nDas wird in folgendem Beispiel illustriert:\n\nEntfaltete (d.h. vollständige) Darstellung des markierten Blocks:\n\n\n\n\n\nOption zum zusammenfalten des Blocks im Kontextmenü:\n\n\n\n\n\nZusammengefaltete Darstellung des Blocks innerhalb der Ablaufdefinition:\n\n\n\n\n\nOption zum entfalten des Blocks im Kontextmenü:\n\n\n\n\nDas zusammenfalten / entfalten von Blockly-Elementen ändert nichts an der Funktion einer Ablaufdefinition und dient nur der übersichtlicheren Anordnung von komplexen Ablaufdefinitionen.\n\n\n\n\nDer Blockly-Editer bietet die Option, Blockly-Element statt sie zu Löschen nur zu deaktivieren. Deaktivierte Blockly-Elemente bleiben in der Ablaufdefinition enthalten, werden aber nicht ausgeführt.\nIn folgendem Beispiel ist der Block zum Anzeigen des Tasks 3 deaktiviert, d.h. es werden nur Task 1, 2 und 4 angezeigt:\n\nAktivieren bzw. Deaktivieren von Blockly-Elementen erfolgt über das Kontextmenü:\n\n\nInternal / External: Einige Blockly-Elemente mit Eingängen (d.h. Stellen, an denen man weitere Blöcke verbinde kann) erlauben zwischen zwei Darstellungsformen zu wechseln.\n\nInternal: Die Eingänge sind innerhalb der Blöcke angeordnet.\n\n\n\n\n\nExnternal: Die Eingänge sind an der Seite der Blöcke angeordnet.\n\n\n\n\n\nBeide Darstellungsformen sind bzgl. der Funktionalität äquivalent.\n\n\nAufräumen: Im Kontextmenü des Blockly-Editors, welches durch Klick in einen leeren Bereich geöffnet werden kann, ist die Funktion Bausteine aufräumen enthalten:\n\nDurch Aufruf von Bausteine aufäumen werden alle Blockly-Elemente im Blockly-Editor vertikal untereinander ausgerichtet.\n\n\n(nach oben)"
  },
  {
    "objectID": "preparation-parts.html#routing-zwischen-erhebungsteilen",
    "href": "preparation-parts.html#routing-zwischen-erhebungsteilen",
    "title": "Vorbereitung: Erhebungsteile / Preparation: Study Parts",
    "section": "",
    "text": "Wenn mehrere Erhebungsteile für eine Studie definiert sind, kann die Abfolge von Erhebungsteilen definiert werden, in welcher Befragte oder Testpersonen die Inhalte der Erhebungsteile präsentiert bekommen.\nNeben einfachen linearen Abläufen können Abläufe von mehreren Erhebungsteilen auch mit einem Blockly-basierten Routing konfiguriert werden.\nEine detaillierte Beschreibung zum Routing zwischen Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nDie Reihenfolge von Erhebungsteilen kann mit Hilfe von Blockly definiert werden (analog zur Definition der Reihenfolge von Items innerhalb von Erhebungsteilen). Diese Option ist verfügbar, wenn in der Grundkonfiguration zu einer Studie (in der Ansicht Übersicht) die Option Routing für Erhebungsteile aktivieren gewählt ist.\nFür die allgemeinen Grundlagen zur Verwendung von Blockly im IRTlib Editor siehe die Hilfe zum Routing innerhalb von Erhebungsteilen.\nFunktionen die nur im Routing zwischen Erhebungsteilen zur Verfügung stehen sind:\n\nErhebungsteil Anzeigen\n\n\n\n\n\nDieser Blockly-Operator ersetzt das Show Item innerhalb von Erhebungsteilen.\n\n\nErfolgreiches Login\n\n\n\n\n\nDieser Blockly-Operator hat den Wert wahr, wenn vor der Anzahl der maximalen Versuche (hier: unendlich, d.h. unbegrenzt hoft) gültige Login-Informationen angegeben wurden.\n\nHinweis: Änderungen an der Sicht Routing zwischen Erhebungsteilen müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  },
  {
    "objectID": "data-collection-player-integration.html",
    "href": "data-collection-player-integration.html",
    "title": "Datenerhebung: In IRTlib Player Importieren / Data Collection: Import into IRTlib Player",
    "section": "",
    "text": "Im folgenden ist beschrieben, wie eine mit einem IRTlib Editor erstellte Studienkonfiguration, die als ZIP-Archiv vorliegt, verwendet werden kann.\n\n\n\n\n\n\nVeröffentlichte Version erforderlich\n\n\n\nFür die Datenerhebung mit einem IRTlib Player ist eine veröffentlichte Version einer Studie notwendig.\n\n\nWenn eine versiegelte Studienkonfiguration aus dem IRTlib Editor exportiert wurde, kann diese in einen IRTlib Player integriert werden.\nZur Zeit werden zwei Optionen unterstützt:\n\nAutomatischer Import aus ZIP-Archiv\nManueller Import aus ZIP-Archiv\n\nDer Automatische Import ist nur für die erste Studie in einem IRTlib Player möglich. Sollen mehrere Studien in einem IRTlib Player parallel verwendet werden, muss ein Manueller Import durchgeführt werden.\n\n\nFür einen automatischen Import einer als ZIP-Archiv vorliegenden Studie in einem Offline IRTlib Player, kann der Player zunächst über die ausführbare Datei TestApp.Player.Desktop.exe gestartet werden.\nWurde dieser IRTlib Player noch nicht mit einer Studie konfiguriert (d.h. wurde der Player bspw. wie unter Download beschrieben direkt von dem Github-Repositoy heruntergeladen), dann erscheint folgender Dialog:\n\nDurch Klicken der Schaltfläche Studie Bereitstellen kann das ZIP-Archiv direkt geöffnet werden. Es wird dann automatisch in den IRTlib Player eingefügt und kann über die im Abschnitt Login der Studie konfigurierte Weise verwendet werden.\n\n\n\nWenn kein automatischer Import möglich oder gewollt ist, kann der Inhalt des ZIP-Archivs einer Studie auch manuell in das dafür vorgesehene Verzeichnis des IRTlib Players integriert werden.\nJede ZIP-Archiv mit einer Studienkonfiguration welches aus dem IRTlib Editor exportiert wurde, enthält drei Verzeichnisse. Die ZIP-Archive lassen {StudyName.zip} sich z.B. mit dem Windows Explorer öffnen:\n\nUm die Studie in eien IRTlib Player zu intgerieren, kann der Inhalt dieser drei Verzeichnisse nun z.B. in das Programmverzeichnis eines Offline IRTlib Players integriert werden.\n\n\n\n\n\n\n\nSchritt\nBeschreibung\n\n\n\n\n1.\nPlayer (TestApp.Player.zip) entpacken. Das kann bspw. über den Windows Explorer erfolgen:\n\n\n\n\n\n\n2.\nIn das entpackte Verzeichnis navigieren:\n\n\n\n\n\n\n3.\nErstellen Sie einen neuen Ordner Content innerhalb des Player-Ordners (d.h. TestApp.Player/Content/). Wenn bereits eine Studie konfiguriert ist, dann existiert der Ordner Content bereits.\n\n\n\n\n\n\n4.\nKopieren Sie die drei Ordner ItemPool, Runtime und Studies aus der heruntergeladenen Studie {StudyName.zip} in den Content-Ordner des Players.\n\n\n\n\n\n\n5.\nStarten der Datei TestApp.Player.Desktop.exe\n\n\n6.\nWenn nötig akzeptieren Sie die folgende Warnung:\n\n\n\n\n\n\n\nAnalog zu dem hier beschriebenen Vorgehen erfolgt auch der Import von Studien in einen Online IRTlib Player. Hierfür ist für die Vorbereitung Zugriff auf das im docker-compse.yml-File definierte Volume /app/Content notwendig.\n\n\n\n\nDie mit einem IRTlib Editor erstellten Studienkonfigurationen sind mit unterschiedlichen Varianten des IRTlib Players verwendbar.\nIm Moment werden drei Varianten bereitgestellt:\n\nDesktop-Version (Windows)\nLokale Server-Version (Windows)\nOnline Version (Docker)\n\n\n\nBasale Konfigurationen des IRTlib Player (Darstellung in einem Festermodus vs. Vollbildmodus) sind Teil der Studienkonfiguration. Nur Studien mit gleichen Einstellungen bzgl. der Darstellung können in einem Offline IRTlib Player gleichzeitig verwendet werden. Mehrere Kopien eines Offline IRTlib Players auf einem Computer sind möglich.\nUm den (Offline) IRTlib Player auf einem Computer zu starten, muss die Ausführbare Datei TestApp.Player.Desktop.exe gestartet werden.\nDatenspeicherung: Die während einer Datenerhebung mit dem Offline IRTlib Player erhobenen Daten werden in einem Verzeichnis lokal gespeichert. Das Verzeichnis und der Dateiname für die Rohdatenspeicherung ist in der Studie konfiguriert und kann mit Hilfe von Startup-Parametern angepasst werden. Als Dateiname der Rohdatenarchive wird der Benutzername bzw. die erstellte UUID verwendet. Sollte in einem (Offline) IRTlib Player der Benutzername mehrfach verwendet werden, d.h. wenn beim Beenden des IRTlib Players bereits ein Rohdatenarchiv mit diesem Dateinamen existiert, wird dieses nicht überschrieben sondern es wird ein Suffix angehängt (z.B. PersonIdentifier_1.zip).\nStartup-Parameter: Für die Integration des Offline IRTlib Players in programmierte Abläufe sind möglich. Anmeldedaten (Benutzername, Benutzername + Passwort, Token), die in einer Studie konfiguriert sind können als so-genannte Startup-Parameter übergeben werden. Diese Parameter werden dann an den Aufruf von TestApp.Player.Desktop.exe angehängt.\nBeispiel:\n\nTestApp.Player.Desktop.exe /RawDataFolder=\"..\\\\myDataFolder\"\n\nGültige Startup-Parameter sind:\n\n/AutoLoginCreateWithTest=\"{StudienName}\": Fordert die Administration der Studie mit der Bezeichnung {StudienName} an.\n/AutoLoginUserName=\"{PersonIdentifier}\": Übergibt die Anmeldeinformation {PersonIdentifier} als Benutzername\n/MyBlocklyVariable=\"123\": Übergibt den Wert 123 für die Blockly-Variable MyBlocklyVariable\n/MonitoringFile=\"..\\\\last-run.json\": Pfad und Dateiname der so-genannten Monitoring-Datei.\n/RawDataFolder=\"..\\\\myDataFolder\": Pfad zu dem Verzeichnis, in welchem die Rohdatenarchive gespeichert werden.\n\nMehrere Startup-Parameter nacheinander sind möglich (getrennt durch Leerzeichen).\nPrüfung von Voraussetzungen: Der IRTlib Player sollte auf Windows-Computer (aktuelle unterstützt ab Windows 10) ohne weitere Installation oder Laufzeitvoraussetzungen ausgeführt werden können. Spezielle Konfigurationen, Virenscanner usw. können die Ausführung aber unterbinden. Ein Tool zum Prüfen von Voraussetzungen kann bspw. aufbauend auf diesem Beisipiel (IRTlibReadiness) erstellt werden.\n\n\n\n\n\n\nWichtiger Hinweis\n\n\n\nDie bereitgestellte Windows-Version des IRTlib Player ermöglicht einen einfachen Kiosk-Modus, der nur für Computer mit nur einem Bildschirm (z.B. Notebooks) vorgesehen ist. Für eine Prüfungssichere Kiosk-Lösung kann die Offline-Version des IRTlib Players als lokaler Server mit weiterer Software (wie bspw. dem Safe Exam Browser) kombiniert werden.\n\n\n\n\n\nDie über das Github-Repositoy im Abschnitt Releases verfügbaren ZIP-Archive des Offline IRTlib Players enthalten paralle zu der Anwendung mit integriertem Browser (TestApp.Player.Desktop.exe) auch eine lokale Server-Version, welche über die ausführbare Datei TestApp.Player.Server.exe gestartet werden kann.\n(TODO: Zugriff über Routen beschreiben)\n\n\n\n\n\n\nWichtiger Hinweis\n\n\n\nDie Version TestApp.Player.Server.exe ist gedacht für einen Offline-Betrieb in Bring-in Netzwerken, z.B. wenn WLAN-Router und Server-Notebook in Schulen gebracht werden. Diese Version ist nicht für Online-Ehrebungen gedacht (wofür die Docker-Version bereitgestellt wird).\n\n\n\n\n\n\n\n\n\n\n\nWichtiger Hinweis\n\n\n\n\n\nDie bereitgestellten Docker-Container für IRTlib Player und IRTlib Editor müssen von einem Administrator in eine sichere Umgebung integriert werden, bevor sie für Datenerhebungen verwendet werden können.\nDas folgende Beispiel dient nur der Illustration. Docker und Git müssen für dieses Beispiel installiert sein.\n\n\n\nSchritt\nBeschreibung\n\n\n\n\n1\nKonsole starten:\n\n\n\n* Windows:\n\n\n\n* Mac:\n\n\n2\nPrüfen, ob Docker installiert ist und läuft:\n\n\n\ndocker info\n\n\n3\nPrüfen, ob Git installiert ist:\n\n\n\ngit version\n\n\n4\nKonfiguration von Github beziehen:\n\n\n\n* Download (wenn kein Git installiert ist):\n\n\n\n* Git:\n\n\n\ngit clone --branch develop https://github.com/DIPFtba/IRTlibDeploymentSoftware.git\n\n\n5\nDatei appsettings.json im Verzeichnis IRTlibDeploymentSoftware/ docker/ TestApp.Player/ bearbeiten und ExternalExportKey eintragen:\n\n\n\n\"ExternalExportKey\": \"mykey123\",\n\n\n6\nDatei docker-compose.yml im Verzeichnis IRTlibDeploymentSoftware/ docker/ bearbeiten und Ports eintragen:\n\n\n\n\n\n\n7\nIm Verzeichnis IRTlibDeploymentSoftware/ docker/ das Skript start.sh ausführen:\n\n\n\n./start.sh\n\n\n\n\n\n\nIntegration: Für die Durchführung einer Datenerhebung sollte das Docker-Image des IRTlib Players nur über https-gesicherte Verbindungen erreichbar sein. Das kann bspw. mit Hilfe eines als Reverse Proxy konfiugrierten zusätzlichen nginx realisiert werden.\nZugriff auf Editor: Für unbefugte Personen, die nicht mit der Studienvorbereitung betraut sind, darf kein Zugriff auf den IRTlib Editor möglich sein. Über das Github-Repository werden IRTlib Editor und IRTlib Player bereitgestellt. Für eine operative Datenerhebung ist es nicht notwendig, den IRTlib Editor online zu betreiben, da die Studienvorbereitung auch mit der Offline-Version des IRTlib Editors erstellt werden kann. Wird der IRTlib Editor online gehostet muss er vor dem Zugriff unbefugter geschützt werden.\nZugriff auf Verzeichnisse: In den im docker-compse.yml-File definierten Volumes /app/Content (IRTlib Player) und /app/data (IRTlib Editor) sind die Iteminhalte hinterlegt, die für ein Assessment konfiguriert werden. Um den Schutz von Instrumenten sicherzustellen, darf kein Zugriff für Unbefugte auf diese Volumes möglich sein.\nDatenspeicherung: Die während einer Datenerhebung mit dem Online IRTlib Player erhobenen Daten werden in dem Volume app/result gespeichert. Sie können von dort als Verzeichnisse (ein Verzeichnis je Session) oder als Rohdatenarchive über eine API abgerufen werden (wenn ein API-key definiert ist).\n\n\n\n\n\n\nHinweis\n\n\n\nBei Verwendung der Docker-Container können Assessmentinhalte und Daten online zugreifbar sein. Assessmentinhalte sind nur über den in der Studienkonfiguration definierten Loginmodus geschützt. Personendaten und Assessmentinhalte könne zusätzlich zugreifbar sein, wenn ein API-key definiert ist.\n\n\nKonfiguration des Players: Zentral für die technische Konfiguration des Players ist die Datei appsettings.json, welche im Verzeichnis TestApp.Player enthalten ist. In dieser Datei können drei verschiedene API-Keys (also Zugriffsschlüssel) hinterlegt werden, in dem sie in folgender JSON-Struktur hinterlegt werden, bevor der Docker-Container gestartet wird:\n\"API\": {\n   \"ExternalExportKey\": \"\",\n   \"DevelopmentKey\": \"\",\n   \"LoginManagementKeys\": []\n }\nDie API-Keys haben die folgenden Funktionen:\n\nExternalExportKey: Über diesen Schlüssel erhält man Zugang zu den mit dem IRTlib Player erhobenen Daten. Der Zugriff auf die Daten kann bspw. über das R-Paket LogFSM erfolgen, wie im Abschnitt Datenabruf beschrieben.\n\n\n\n\n\n\n\nRouten zum Direkten Zugriff\n\n\n\n\n\nDie Liste der bearbeiteten Session, d.h. die Session-Identifier lassen sich mit einem API-Key für ExternalExportKey über folgenden Aufruf als JSON abrufen:\nhttps://{U}/{S}/api/session/?apiKey={K}\n\n{U} ist die URL des IRTlib Players\n{S} ist der Bezeichner der Studie\n{K} ist die ExternalExportKey wie in der appsettings.json definiert\n\nMit einer bekanntem Session-Identifier lassen sich dann die Rohdaten über folgende Abruf mit einem API-Key für ExternalExportKey beziehen:\nhttps://{U}/{S}/api/session/{ID}/result?apiKey={K}\n\n{ID} ist der Session-Identifier (z.B. der Benutzername, je nach Konfiguration des Logins)\n\n\n\n\n\nDevelopmentKey: Dieser API-Key ist für das Anpassen von Studienkonfigurationen in einem laufenden Player vorgesehen.\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\nLoginManagementKeys: Diese Liste von API-Keys ist für das Anpassen Zugangsdaten (Accounts) in einem laufenden Player vorgesehen.\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\nMonitoring: (Eine Methode zur Überwachung von Docker-Containern ist in Entwicklung).\n\n\n\n\nMit der Integration einer Studienkonfiguration in einen IRTlib Player ist die Vorbereitung noch nicht abgeschlossen. Bevor eine Datenerhebung mit der IRTlib Software begonnen werden kann, sollten folgende Tests durchlaufen werden:\n(Tests innerhalb der CBA ItemBuilder-Preview): Bevor die Konfiguration einer Studie und eines Erhebungsteils mit CBA ItemBuilder-Tasks erfolgt, sollte diese im Hinblick auf Darstellung, Funktionalität und Scoring bereits in der Preview des CBA ItemBuilder getestet sein.\nFunktionale Tests: Insbesondere wenn CBA ItemBuilder-Tasks mit der Auslieferungsplattform interagieren (wie bspw. Login-Items), sollten funktionale Tests (d.h. Tests von konkreten Funktionen) in der Auslieferungssoftware erfolgen. Das betrifft auch die Navigation zwischen Items und natürlich die in der Auslieferungsumgebung konfigurierte Ablaufsteuerung.\nCross-Browser-Testung: Werden Studien nicht mit dem Offline IRTlib Player durchgeführt (welcher seinen eigenen Browser mitbringt) und insbesondere wenn über sogenannte ExternalPageFrames (d.h. iframes) neu oder spezifisch programmierte JavaScript/HTML5-Inhalte innerhalb der CBA ItemBuilder-Tasks* verwendet werde, sollte eine Testung in verschiedenen Browsern erfolgen.\nPerformanz-Tests: Wenn große Mediendateien (Videos, Audiodateien) in den CBA ItemBuilder-Tasks enthalten sind kann es ratsam sein, die Durchführbarkeit des Assessments auch unter ungünstigen Netzwerkbedingungen (z.B. geringe Bandbreite, lange Latenzen, Verbindungsabbrüche usw.) zu testen.\nLast-Tests: Wenn sehr viele Testteilnehmer parallel (online) getestet werden sollen kann es ratsam sein, das Lastverhalten der Auslieferung (und bspw. die für den Docker-Container verfügbaren Ressourcen) vorab abzsutimmen.\nDatenablageprüfung: In jedem Fall sollte die Passung der Scoring-Definition innerhalb der CBA ItemBuilder-Tasks und der Konfiguration im IRTlib Editor geprüft und eine Datenablageprüfung gemacht werden. Damit ist gemeint, dass vor Erhebungsstart synthetische Klickmuster (also Antworten) eingegeben und mit den im Datensatz gespeicherten Antworten verglichen werden. Um bei der späteren Überprüfung Eingabefehler gut erkennen zu können hat es sich bewährt, für die Datenablageprüfung Bildschirmvideos paralle laufzuzeichen.\nSmoke-Test: Die abschließende Form des Testens ist ein Durchlaufetest in dem fertig konfigurierten Setting aus Studie in einem IRTlib Player. Die Erhebung sollte richtig dargestellt werden und ein lesbare Rohdatenarchiv sollte entstehen.\n\n\n\n\n\n\n\n\nHinweis\n\n\n\nDie Bereitstellung der freien Forschungssofware IRTlib Editor und IRTlib Player erfolgt ohne Gewähr und es kann keine Haftung für fehlende Daten, Datenverlust oder kompromitierte Daten usw. übernommen werden.\n\n\nAllgemeingültige Empfehlungen zu (unbedingt) notwendigen Tests sind schwer zu formulieren, die folgende Tabelle ist deshalb als unverbindliche Empfehlung zu verstehen, welche im konkrete Fall abzuwägen ist.\n\n\n\n\n\n\n\n\nTest\nEmpfehlung\nBedingung\n\n\n\n\nCBA ItemBuilder-Preview\nImmer\n(Fehler in Darstellung, Verhalten und Scoring, die sich breits bei der Itemerstellung finden lassen, sollte vor der Erstellung einer Studienkonfiguration systematisch getestet und ausgeschlossen werden.)\n\n\nFunktionale Tests\nBei Bedarf\nNur wenn IRTlib Player und CBA ItemBuilder-Tasks interagieren müssen und bezogen auf im IRTlib Editor definierte Funktionalität (z.B. antwortabhängige Verzweigungen).\n\n\nCross-Browser-Testung\nBei Bedarf\nNur wenn IRTlib Player online verwendet wird und die Browser nicht den Browsern entsprechen, welche bereits für die CBA ItemBuilder-Preview verwendet wurden.\n\n\nPerformanz-Tests\nBei Bedarf\nWenn große Multimedia-Teien enthalten sind oder wenn mit schlecheter Netzwerkverbindung zu rechnen ist.\n\n\nLast-Tests\nBei Bedarf\nNur wenn Online IRTlib Player mit vielen parallelen Tests administriert werden soll.\n\n\nDatenablageprüfung\nImmer\nPrüfung aller Daten (inkl. Log-Daten, wenn diese für die Auswertung benötigt werden).\n\n\nSmoke-Test\nImmer\nSmoke-Testung bei jeder Version, vor allem um versehentliche Konfigurationsfehler in letzter Minute auszuschließen.\n\n\n\n\n\n\nIst die Studie in einem IRTlib Player konfiguriert und getestet kann die Datenerhebung erfolgen. Je länger die Feldzeit ist, desto wichtiger sind regelmäßige Backups der erhobenen Daten bzw. ein regelmäßiger Abzug der gesammelten Rohdatenarchive von der Erhebungshardware."
  },
  {
    "objectID": "data-collection-player-integration.html#konfiguration-importieren",
    "href": "data-collection-player-integration.html#konfiguration-importieren",
    "title": "Datenerhebung: In IRTlib Player Importieren / Data Collection: Import into IRTlib Player",
    "section": "",
    "text": "Im folgenden ist beschrieben, wie eine mit einem IRTlib Editor erstellte Studienkonfiguration, die als ZIP-Archiv vorliegt, verwendet werden kann.\n\n\n\n\n\n\nVeröffentlichte Version erforderlich\n\n\n\nFür die Datenerhebung mit einem IRTlib Player ist eine veröffentlichte Version einer Studie notwendig.\n\n\nWenn eine versiegelte Studienkonfiguration aus dem IRTlib Editor exportiert wurde, kann diese in einen IRTlib Player integriert werden.\nZur Zeit werden zwei Optionen unterstützt:\n\nAutomatischer Import aus ZIP-Archiv\nManueller Import aus ZIP-Archiv\n\nDer Automatische Import ist nur für die erste Studie in einem IRTlib Player möglich. Sollen mehrere Studien in einem IRTlib Player parallel verwendet werden, muss ein Manueller Import durchgeführt werden.\n\n\nFür einen automatischen Import einer als ZIP-Archiv vorliegenden Studie in einem Offline IRTlib Player, kann der Player zunächst über die ausführbare Datei TestApp.Player.Desktop.exe gestartet werden.\nWurde dieser IRTlib Player noch nicht mit einer Studie konfiguriert (d.h. wurde der Player bspw. wie unter Download beschrieben direkt von dem Github-Repositoy heruntergeladen), dann erscheint folgender Dialog:\n\nDurch Klicken der Schaltfläche Studie Bereitstellen kann das ZIP-Archiv direkt geöffnet werden. Es wird dann automatisch in den IRTlib Player eingefügt und kann über die im Abschnitt Login der Studie konfigurierte Weise verwendet werden.\n\n\n\nWenn kein automatischer Import möglich oder gewollt ist, kann der Inhalt des ZIP-Archivs einer Studie auch manuell in das dafür vorgesehene Verzeichnis des IRTlib Players integriert werden.\nJede ZIP-Archiv mit einer Studienkonfiguration welches aus dem IRTlib Editor exportiert wurde, enthält drei Verzeichnisse. Die ZIP-Archive lassen {StudyName.zip} sich z.B. mit dem Windows Explorer öffnen:\n\nUm die Studie in eien IRTlib Player zu intgerieren, kann der Inhalt dieser drei Verzeichnisse nun z.B. in das Programmverzeichnis eines Offline IRTlib Players integriert werden.\n\n\n\n\n\n\n\nSchritt\nBeschreibung\n\n\n\n\n1.\nPlayer (TestApp.Player.zip) entpacken. Das kann bspw. über den Windows Explorer erfolgen:\n\n\n\n\n\n\n2.\nIn das entpackte Verzeichnis navigieren:\n\n\n\n\n\n\n3.\nErstellen Sie einen neuen Ordner Content innerhalb des Player-Ordners (d.h. TestApp.Player/Content/). Wenn bereits eine Studie konfiguriert ist, dann existiert der Ordner Content bereits.\n\n\n\n\n\n\n4.\nKopieren Sie die drei Ordner ItemPool, Runtime und Studies aus der heruntergeladenen Studie {StudyName.zip} in den Content-Ordner des Players.\n\n\n\n\n\n\n5.\nStarten der Datei TestApp.Player.Desktop.exe\n\n\n6.\nWenn nötig akzeptieren Sie die folgende Warnung:\n\n\n\n\n\n\n\nAnalog zu dem hier beschriebenen Vorgehen erfolgt auch der Import von Studien in einen Online IRTlib Player. Hierfür ist für die Vorbereitung Zugriff auf das im docker-compse.yml-File definierte Volume /app/Content notwendig."
  },
  {
    "objectID": "data-collection-player-integration.html#auslieferungen-konfigurieren",
    "href": "data-collection-player-integration.html#auslieferungen-konfigurieren",
    "title": "Datenerhebung: In IRTlib Player Importieren / Data Collection: Import into IRTlib Player",
    "section": "",
    "text": "Die mit einem IRTlib Editor erstellten Studienkonfigurationen sind mit unterschiedlichen Varianten des IRTlib Players verwendbar.\nIm Moment werden drei Varianten bereitgestellt:\n\nDesktop-Version (Windows)\nLokale Server-Version (Windows)\nOnline Version (Docker)\n\n\n\nBasale Konfigurationen des IRTlib Player (Darstellung in einem Festermodus vs. Vollbildmodus) sind Teil der Studienkonfiguration. Nur Studien mit gleichen Einstellungen bzgl. der Darstellung können in einem Offline IRTlib Player gleichzeitig verwendet werden. Mehrere Kopien eines Offline IRTlib Players auf einem Computer sind möglich.\nUm den (Offline) IRTlib Player auf einem Computer zu starten, muss die Ausführbare Datei TestApp.Player.Desktop.exe gestartet werden.\nDatenspeicherung: Die während einer Datenerhebung mit dem Offline IRTlib Player erhobenen Daten werden in einem Verzeichnis lokal gespeichert. Das Verzeichnis und der Dateiname für die Rohdatenspeicherung ist in der Studie konfiguriert und kann mit Hilfe von Startup-Parametern angepasst werden. Als Dateiname der Rohdatenarchive wird der Benutzername bzw. die erstellte UUID verwendet. Sollte in einem (Offline) IRTlib Player der Benutzername mehrfach verwendet werden, d.h. wenn beim Beenden des IRTlib Players bereits ein Rohdatenarchiv mit diesem Dateinamen existiert, wird dieses nicht überschrieben sondern es wird ein Suffix angehängt (z.B. PersonIdentifier_1.zip).\nStartup-Parameter: Für die Integration des Offline IRTlib Players in programmierte Abläufe sind möglich. Anmeldedaten (Benutzername, Benutzername + Passwort, Token), die in einer Studie konfiguriert sind können als so-genannte Startup-Parameter übergeben werden. Diese Parameter werden dann an den Aufruf von TestApp.Player.Desktop.exe angehängt.\nBeispiel:\n\nTestApp.Player.Desktop.exe /RawDataFolder=\"..\\\\myDataFolder\"\n\nGültige Startup-Parameter sind:\n\n/AutoLoginCreateWithTest=\"{StudienName}\": Fordert die Administration der Studie mit der Bezeichnung {StudienName} an.\n/AutoLoginUserName=\"{PersonIdentifier}\": Übergibt die Anmeldeinformation {PersonIdentifier} als Benutzername\n/MyBlocklyVariable=\"123\": Übergibt den Wert 123 für die Blockly-Variable MyBlocklyVariable\n/MonitoringFile=\"..\\\\last-run.json\": Pfad und Dateiname der so-genannten Monitoring-Datei.\n/RawDataFolder=\"..\\\\myDataFolder\": Pfad zu dem Verzeichnis, in welchem die Rohdatenarchive gespeichert werden.\n\nMehrere Startup-Parameter nacheinander sind möglich (getrennt durch Leerzeichen).\nPrüfung von Voraussetzungen: Der IRTlib Player sollte auf Windows-Computer (aktuelle unterstützt ab Windows 10) ohne weitere Installation oder Laufzeitvoraussetzungen ausgeführt werden können. Spezielle Konfigurationen, Virenscanner usw. können die Ausführung aber unterbinden. Ein Tool zum Prüfen von Voraussetzungen kann bspw. aufbauend auf diesem Beisipiel (IRTlibReadiness) erstellt werden.\n\n\n\n\n\n\nWichtiger Hinweis\n\n\n\nDie bereitgestellte Windows-Version des IRTlib Player ermöglicht einen einfachen Kiosk-Modus, der nur für Computer mit nur einem Bildschirm (z.B. Notebooks) vorgesehen ist. Für eine Prüfungssichere Kiosk-Lösung kann die Offline-Version des IRTlib Players als lokaler Server mit weiterer Software (wie bspw. dem Safe Exam Browser) kombiniert werden.\n\n\n\n\n\nDie über das Github-Repositoy im Abschnitt Releases verfügbaren ZIP-Archive des Offline IRTlib Players enthalten paralle zu der Anwendung mit integriertem Browser (TestApp.Player.Desktop.exe) auch eine lokale Server-Version, welche über die ausführbare Datei TestApp.Player.Server.exe gestartet werden kann.\n(TODO: Zugriff über Routen beschreiben)\n\n\n\n\n\n\nWichtiger Hinweis\n\n\n\nDie Version TestApp.Player.Server.exe ist gedacht für einen Offline-Betrieb in Bring-in Netzwerken, z.B. wenn WLAN-Router und Server-Notebook in Schulen gebracht werden. Diese Version ist nicht für Online-Ehrebungen gedacht (wofür die Docker-Version bereitgestellt wird).\n\n\n\n\n\n\n\n\n\n\n\nWichtiger Hinweis\n\n\n\n\n\nDie bereitgestellten Docker-Container für IRTlib Player und IRTlib Editor müssen von einem Administrator in eine sichere Umgebung integriert werden, bevor sie für Datenerhebungen verwendet werden können.\nDas folgende Beispiel dient nur der Illustration. Docker und Git müssen für dieses Beispiel installiert sein.\n\n\n\nSchritt\nBeschreibung\n\n\n\n\n1\nKonsole starten:\n\n\n\n* Windows:\n\n\n\n* Mac:\n\n\n2\nPrüfen, ob Docker installiert ist und läuft:\n\n\n\ndocker info\n\n\n3\nPrüfen, ob Git installiert ist:\n\n\n\ngit version\n\n\n4\nKonfiguration von Github beziehen:\n\n\n\n* Download (wenn kein Git installiert ist):\n\n\n\n* Git:\n\n\n\ngit clone --branch develop https://github.com/DIPFtba/IRTlibDeploymentSoftware.git\n\n\n5\nDatei appsettings.json im Verzeichnis IRTlibDeploymentSoftware/ docker/ TestApp.Player/ bearbeiten und ExternalExportKey eintragen:\n\n\n\n\"ExternalExportKey\": \"mykey123\",\n\n\n6\nDatei docker-compose.yml im Verzeichnis IRTlibDeploymentSoftware/ docker/ bearbeiten und Ports eintragen:\n\n\n\n\n\n\n7\nIm Verzeichnis IRTlibDeploymentSoftware/ docker/ das Skript start.sh ausführen:\n\n\n\n./start.sh\n\n\n\n\n\n\nIntegration: Für die Durchführung einer Datenerhebung sollte das Docker-Image des IRTlib Players nur über https-gesicherte Verbindungen erreichbar sein. Das kann bspw. mit Hilfe eines als Reverse Proxy konfiugrierten zusätzlichen nginx realisiert werden.\nZugriff auf Editor: Für unbefugte Personen, die nicht mit der Studienvorbereitung betraut sind, darf kein Zugriff auf den IRTlib Editor möglich sein. Über das Github-Repository werden IRTlib Editor und IRTlib Player bereitgestellt. Für eine operative Datenerhebung ist es nicht notwendig, den IRTlib Editor online zu betreiben, da die Studienvorbereitung auch mit der Offline-Version des IRTlib Editors erstellt werden kann. Wird der IRTlib Editor online gehostet muss er vor dem Zugriff unbefugter geschützt werden.\nZugriff auf Verzeichnisse: In den im docker-compse.yml-File definierten Volumes /app/Content (IRTlib Player) und /app/data (IRTlib Editor) sind die Iteminhalte hinterlegt, die für ein Assessment konfiguriert werden. Um den Schutz von Instrumenten sicherzustellen, darf kein Zugriff für Unbefugte auf diese Volumes möglich sein.\nDatenspeicherung: Die während einer Datenerhebung mit dem Online IRTlib Player erhobenen Daten werden in dem Volume app/result gespeichert. Sie können von dort als Verzeichnisse (ein Verzeichnis je Session) oder als Rohdatenarchive über eine API abgerufen werden (wenn ein API-key definiert ist).\n\n\n\n\n\n\nHinweis\n\n\n\nBei Verwendung der Docker-Container können Assessmentinhalte und Daten online zugreifbar sein. Assessmentinhalte sind nur über den in der Studienkonfiguration definierten Loginmodus geschützt. Personendaten und Assessmentinhalte könne zusätzlich zugreifbar sein, wenn ein API-key definiert ist.\n\n\nKonfiguration des Players: Zentral für die technische Konfiguration des Players ist die Datei appsettings.json, welche im Verzeichnis TestApp.Player enthalten ist. In dieser Datei können drei verschiedene API-Keys (also Zugriffsschlüssel) hinterlegt werden, in dem sie in folgender JSON-Struktur hinterlegt werden, bevor der Docker-Container gestartet wird:\n\"API\": {\n   \"ExternalExportKey\": \"\",\n   \"DevelopmentKey\": \"\",\n   \"LoginManagementKeys\": []\n }\nDie API-Keys haben die folgenden Funktionen:\n\nExternalExportKey: Über diesen Schlüssel erhält man Zugang zu den mit dem IRTlib Player erhobenen Daten. Der Zugriff auf die Daten kann bspw. über das R-Paket LogFSM erfolgen, wie im Abschnitt Datenabruf beschrieben.\n\n\n\n\n\n\n\nRouten zum Direkten Zugriff\n\n\n\n\n\nDie Liste der bearbeiteten Session, d.h. die Session-Identifier lassen sich mit einem API-Key für ExternalExportKey über folgenden Aufruf als JSON abrufen:\nhttps://{U}/{S}/api/session/?apiKey={K}\n\n{U} ist die URL des IRTlib Players\n{S} ist der Bezeichner der Studie\n{K} ist die ExternalExportKey wie in der appsettings.json definiert\n\nMit einer bekanntem Session-Identifier lassen sich dann die Rohdaten über folgende Abruf mit einem API-Key für ExternalExportKey beziehen:\nhttps://{U}/{S}/api/session/{ID}/result?apiKey={K}\n\n{ID} ist der Session-Identifier (z.B. der Benutzername, je nach Konfiguration des Logins)\n\n\n\n\n\nDevelopmentKey: Dieser API-Key ist für das Anpassen von Studienkonfigurationen in einem laufenden Player vorgesehen.\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\nLoginManagementKeys: Diese Liste von API-Keys ist für das Anpassen Zugangsdaten (Accounts) in einem laufenden Player vorgesehen.\n\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\nMonitoring: (Eine Methode zur Überwachung von Docker-Containern ist in Entwicklung)."
  },
  {
    "objectID": "data-collection-player-integration.html#auslieferungen-testen-und-freigeben",
    "href": "data-collection-player-integration.html#auslieferungen-testen-und-freigeben",
    "title": "Datenerhebung: In IRTlib Player Importieren / Data Collection: Import into IRTlib Player",
    "section": "",
    "text": "Mit der Integration einer Studienkonfiguration in einen IRTlib Player ist die Vorbereitung noch nicht abgeschlossen. Bevor eine Datenerhebung mit der IRTlib Software begonnen werden kann, sollten folgende Tests durchlaufen werden:\n(Tests innerhalb der CBA ItemBuilder-Preview): Bevor die Konfiguration einer Studie und eines Erhebungsteils mit CBA ItemBuilder-Tasks erfolgt, sollte diese im Hinblick auf Darstellung, Funktionalität und Scoring bereits in der Preview des CBA ItemBuilder getestet sein.\nFunktionale Tests: Insbesondere wenn CBA ItemBuilder-Tasks mit der Auslieferungsplattform interagieren (wie bspw. Login-Items), sollten funktionale Tests (d.h. Tests von konkreten Funktionen) in der Auslieferungssoftware erfolgen. Das betrifft auch die Navigation zwischen Items und natürlich die in der Auslieferungsumgebung konfigurierte Ablaufsteuerung.\nCross-Browser-Testung: Werden Studien nicht mit dem Offline IRTlib Player durchgeführt (welcher seinen eigenen Browser mitbringt) und insbesondere wenn über sogenannte ExternalPageFrames (d.h. iframes) neu oder spezifisch programmierte JavaScript/HTML5-Inhalte innerhalb der CBA ItemBuilder-Tasks* verwendet werde, sollte eine Testung in verschiedenen Browsern erfolgen.\nPerformanz-Tests: Wenn große Mediendateien (Videos, Audiodateien) in den CBA ItemBuilder-Tasks enthalten sind kann es ratsam sein, die Durchführbarkeit des Assessments auch unter ungünstigen Netzwerkbedingungen (z.B. geringe Bandbreite, lange Latenzen, Verbindungsabbrüche usw.) zu testen.\nLast-Tests: Wenn sehr viele Testteilnehmer parallel (online) getestet werden sollen kann es ratsam sein, das Lastverhalten der Auslieferung (und bspw. die für den Docker-Container verfügbaren Ressourcen) vorab abzsutimmen.\nDatenablageprüfung: In jedem Fall sollte die Passung der Scoring-Definition innerhalb der CBA ItemBuilder-Tasks und der Konfiguration im IRTlib Editor geprüft und eine Datenablageprüfung gemacht werden. Damit ist gemeint, dass vor Erhebungsstart synthetische Klickmuster (also Antworten) eingegeben und mit den im Datensatz gespeicherten Antworten verglichen werden. Um bei der späteren Überprüfung Eingabefehler gut erkennen zu können hat es sich bewährt, für die Datenablageprüfung Bildschirmvideos paralle laufzuzeichen.\nSmoke-Test: Die abschließende Form des Testens ist ein Durchlaufetest in dem fertig konfigurierten Setting aus Studie in einem IRTlib Player. Die Erhebung sollte richtig dargestellt werden und ein lesbare Rohdatenarchiv sollte entstehen.\n\n\n\n\n\n\n\n\nHinweis\n\n\n\nDie Bereitstellung der freien Forschungssofware IRTlib Editor und IRTlib Player erfolgt ohne Gewähr und es kann keine Haftung für fehlende Daten, Datenverlust oder kompromitierte Daten usw. übernommen werden.\n\n\nAllgemeingültige Empfehlungen zu (unbedingt) notwendigen Tests sind schwer zu formulieren, die folgende Tabelle ist deshalb als unverbindliche Empfehlung zu verstehen, welche im konkrete Fall abzuwägen ist.\n\n\n\n\n\n\n\n\nTest\nEmpfehlung\nBedingung\n\n\n\n\nCBA ItemBuilder-Preview\nImmer\n(Fehler in Darstellung, Verhalten und Scoring, die sich breits bei der Itemerstellung finden lassen, sollte vor der Erstellung einer Studienkonfiguration systematisch getestet und ausgeschlossen werden.)\n\n\nFunktionale Tests\nBei Bedarf\nNur wenn IRTlib Player und CBA ItemBuilder-Tasks interagieren müssen und bezogen auf im IRTlib Editor definierte Funktionalität (z.B. antwortabhängige Verzweigungen).\n\n\nCross-Browser-Testung\nBei Bedarf\nNur wenn IRTlib Player online verwendet wird und die Browser nicht den Browsern entsprechen, welche bereits für die CBA ItemBuilder-Preview verwendet wurden.\n\n\nPerformanz-Tests\nBei Bedarf\nWenn große Multimedia-Teien enthalten sind oder wenn mit schlecheter Netzwerkverbindung zu rechnen ist.\n\n\nLast-Tests\nBei Bedarf\nNur wenn Online IRTlib Player mit vielen parallelen Tests administriert werden soll.\n\n\nDatenablageprüfung\nImmer\nPrüfung aller Daten (inkl. Log-Daten, wenn diese für die Auswertung benötigt werden).\n\n\nSmoke-Test\nImmer\nSmoke-Testung bei jeder Version, vor allem um versehentliche Konfigurationsfehler in letzter Minute auszuschließen.\n\n\n\n\n\n\nIst die Studie in einem IRTlib Player konfiguriert und getestet kann die Datenerhebung erfolgen. Je länger die Feldzeit ist, desto wichtiger sind regelmäßige Backups der erhobenen Daten bzw. ein regelmäßiger Abzug der gesammelten Rohdatenarchive von der Erhebungshardware."
  },
  {
    "objectID": "translation.html",
    "href": "translation.html",
    "title": "Translation",
    "section": "",
    "text": "Hinweis\n\n\n\nThe software has been designed so that it can also be translated into other languages. If you would like to support us in this, please contact us.\n\n\n\n\n\n\nThis editor can be used to created localized resx-files for the application: ResXResourceManager\n\nThe source file can be found here: (TODO)\n\nHelp (included in the application) is generated using quarto useing all markdown files starting with InlineHelp_* in this folder.\n\nHelp.de-DE.resx\nHelp.en-US.resx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMarkdown (DEU)\nen-US\nde-DEU\n…\n\n\n\n\n*IRTlib Player*\nIRTlib Player\nIRTlib Player\n\n\n\n*IRTlib Editor*\nIRTlib Editor\nIRTlib Editor\n\n\n\n*IRTlib Software*\nIRTlib Software\nIRTlib Software\n\n\n\nOffline-*IRTlib Player*\nOffline-IRTlib Player\nOffline-IRTlib Player\n\n\n\nOnline-*IRTlib Player*\nOnline-IRTlib Player\nOnline-IRTlib Player\n\n\n\n*Studie*\nStudy\nStudie\n\n\n\n*Erhebungsteil*\nStudy Part \nErhebungsteil\n\n\n\n*Einstellungen*\nSettings\nEinstellungen\n\n\n\n*Testleitermenü*\nSession Menu\nTestleitermenü\n\n\n\n*Bearbeitungszeit*\nCompletion time\nBearbeitungszeit\n\n\n\n*Bearbeitungszeit begrenzen*\nRestrict time allowed\nBearbeitungszeit begrenzen\n\n\n\n*Studienversion*\nStudy version\nStudienversion\n\n\n\n*Revision*\nRevision\nRevision\n\n\n\n*Vorspann-Item(s)*\nProlog Item(s)\nVorspann-Item(s)\n\n\n\n*Nachspann-Items(s)*\nEpilog Item(s)\nNachspann-Items(s)\n\n\n\n*Testleiter*\nTest Administrator\nTestleiter\n\n\n\n*CBA ItemBuilder*-Items\nCBA ItemBuilder-Items\nCBA ItemBuilder-Items\n\n\n\n*Docker*-Container\nDocker-Container\nDocker-Container"
  },
  {
    "objectID": "translation.html#help-requested",
    "href": "translation.html#help-requested",
    "title": "Translation",
    "section": "",
    "text": "Hinweis\n\n\n\nThe software has been designed so that it can also be translated into other languages. If you would like to support us in this, please contact us."
  },
  {
    "objectID": "translation.html#current-translations",
    "href": "translation.html#current-translations",
    "title": "Translation",
    "section": "",
    "text": "This editor can be used to created localized resx-files for the application: ResXResourceManager\n\nThe source file can be found here: (TODO)\n\nHelp (included in the application) is generated using quarto useing all markdown files starting with InlineHelp_* in this folder.\n\nHelp.de-DE.resx\nHelp.en-US.resx"
  },
  {
    "objectID": "translation.html#terminology-and-standardizing-the-notation",
    "href": "translation.html#terminology-and-standardizing-the-notation",
    "title": "Translation",
    "section": "",
    "text": "Markdown (DEU)\nen-US\nde-DEU\n…\n\n\n\n\n*IRTlib Player*\nIRTlib Player\nIRTlib Player\n\n\n\n*IRTlib Editor*\nIRTlib Editor\nIRTlib Editor\n\n\n\n*IRTlib Software*\nIRTlib Software\nIRTlib Software\n\n\n\nOffline-*IRTlib Player*\nOffline-IRTlib Player\nOffline-IRTlib Player\n\n\n\nOnline-*IRTlib Player*\nOnline-IRTlib Player\nOnline-IRTlib Player\n\n\n\n*Studie*\nStudy\nStudie\n\n\n\n*Erhebungsteil*\nStudy Part \nErhebungsteil\n\n\n\n*Einstellungen*\nSettings\nEinstellungen\n\n\n\n*Testleitermenü*\nSession Menu\nTestleitermenü\n\n\n\n*Bearbeitungszeit*\nCompletion time\nBearbeitungszeit\n\n\n\n*Bearbeitungszeit begrenzen*\nRestrict time allowed\nBearbeitungszeit begrenzen\n\n\n\n*Studienversion*\nStudy version\nStudienversion\n\n\n\n*Revision*\nRevision\nRevision\n\n\n\n*Vorspann-Item(s)*\nProlog Item(s)\nVorspann-Item(s)\n\n\n\n*Nachspann-Items(s)*\nEpilog Item(s)\nNachspann-Items(s)\n\n\n\n*Testleiter*\nTest Administrator\nTestleiter\n\n\n\n*CBA ItemBuilder*-Items\nCBA ItemBuilder-Items\nCBA ItemBuilder-Items\n\n\n\n*Docker*-Container\nDocker-Container\nDocker-Container"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Über / About",
    "section": "",
    "text": "An diesem Manual mitgeholfen haben:\n\n\n\n\n\n\nIn Entwicklung\n\n\n\n\nÜberarbeitung, sprachliche Korrektur und Übersetzung der Anleitung sind gerade in Arbeit…\n\n\n\n\n\n\nDie Entwicklung der IRTlib Software erfolgt bei Software-Driven."
  },
  {
    "objectID": "about.html#danksagung",
    "href": "about.html#danksagung",
    "title": "Über / About",
    "section": "",
    "text": "An diesem Manual mitgeholfen haben:\n\n\n\n\n\n\nIn Entwicklung\n\n\n\n\nÜberarbeitung, sprachliche Korrektur und Übersetzung der Anleitung sind gerade in Arbeit…"
  },
  {
    "objectID": "about.html#entwicklung",
    "href": "about.html#entwicklung",
    "title": "Über / About",
    "section": "",
    "text": "Die Entwicklung der IRTlib Software erfolgt bei Software-Driven."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home | IRTlib",
    "section": "",
    "text": "IRTlib ist eine Software zur Auslieferung computerbasierter Tests. Die Software besteht aus zwei Komponenten:\n\nIRTLib Editor: Eine Software für Test-Autoren, welche verwendet wird um Studien zu konfigurieren.\nIRTlib Player: Eine Software zur Datenerhebung, mit welcher Zielpersonen Aufgaben bearbeiten, die in Form einer Studie konfiguriert sind.\n\nHinweise zur Installation und Einrichtung beider Programme zur ersten Verwendung finden sich unter Download & Installation.\n\n\n\nVor der Verwendung der IRTlib Software zur Konfiguration und Erstellung von Auslieferungen, müssen mit dem CBA ItemBuilder die Assessmentinhalte (Aufgaben, Instruktionen, Zwischenbildschirme usw.) in Form von einzelnen Tasks erstellt werden.\n\nDer CBA ItemBuilder kann hier heruntergeladen werden: www.itembuilder.de/software\nEine interaktive Dokumentation des CBA ItemBuilder ist hier zugänglich: cba.itembuilder.de\n\n\n\n\n\n\nCBA ItemBuilder Dokumentation (PDF)\n\n\n\n\n\n\n\nFür die Verwendung der IRTlib Software ist eine kontext-sensitive Programmhilfe direkt in die Anwendung hinterlegt. Die Dokumentation mit der eingebetteten Hilfe ist auf dieser Seite online verfügbar und steht auch als PDF zur Verfügung.\n\n\n\n\n\nIRTlib Software Dokumentation (PDF)\n\n\n\n\n\nDie Entwicklung vom CBA ItemBuilder und der IRTlib Software wird vom Zentrum für technologiebasiertes Assessment (TBA) am DIPF | Leibniz-Institut für Bildungsforschung und Bildungsinformation koordiniert."
  },
  {
    "objectID": "development.html",
    "href": "development.html",
    "title": "Development",
    "section": "",
    "text": "Editor for defining Codebooks\nEditor for managing IRT Parameters for ItemPools\nIRT-Integration in Blockly for MST/CAT/MCAT/…\nWebservice Integration required for NLP/Scoring/AI"
  },
  {
    "objectID": "development.html#missing-features-in-version-1.1",
    "href": "development.html#missing-features-in-version-1.1",
    "title": "Development",
    "section": "",
    "text": "Editor for defining Codebooks\nEditor for managing IRT Parameters for ItemPools\nIRT-Integration in Blockly for MST/CAT/MCAT/…\nWebservice Integration required for NLP/Scoring/AI"
  },
  {
    "objectID": "data-collection-post-processing.html",
    "href": "data-collection-post-processing.html",
    "title": "Datenerhebung: Datenaufbereitung / Data Collection: Data Post-Processing",
    "section": "",
    "text": "Daten werden vom IRTlib Player in Rohdatenarchiven pro Session (d.h. pro Testdurchführung mit einer Studie) gespeichert. Die Rohdatenarchive sind ZIP-Archive, deren Dateinamen dem Benutzernamen oder dem Universally Unique Identifier (UUID) entsprechen. Abweichungen von diesem Schema sind möglich, wenn zum Zeitpunkt der Speicherung bereits ein Rohdatenarchiv mit diesem Dateinamen vorhanden war. In diesem Fall werden die Daten vim IRTlib Player nicht überschrieben, sondern es wird ein Suffix _1, _2, … angehängt, bis der Dateiname verwendbar ist.\n\nOffline IRTlib Player: Wenn nicht anders konfiguriert werden die Ergebnisdaten im Verzeichnis Temp/{Studien-Name}/Results gespeichert. Die Rohdatenarchive werden erstellt, wenn eine Session beendet, d.h. die letzte definierte CBA ItemBuilder-Task mit NEXT_TASK verlassen wird. Erst wenn die Rohdatenarchive erstellt wurden, ist ein Fortsetzen der angefangenen Session, wie es beispielsweise bei einem Computerabsturz notwendig sein kann, nicht mehr möglich.\n\n\nAnalog verhält es sich auch, wenn die Offline-Version des IRTlib Player als lokaler Server eingesetzt wird. Die Rohdatenarchive werden nach der Testbearbeitung im Verzeichnis Temp/{Studien-Name}/Results gespeichert.\n\n\nDie Sammlung von Daten aus den Offline IRTlib Playern entspricht dem Einsammeln der Rohdatenarchive, die auf den verschiedenen Geräten erhoben werden.\n\n\n\n\n\n\n\nHinweis\n\n\n\nDa die Offline IRTlib Player untereinander nicht in Verbindung stehen, können - je nach Loginmodus - identische Anmeldedaten in verschiedenen IRTlib Playern parallel erstellt werden. Nach einer Datenerhebung müssen die Rohdatenarchive deshalb mit Sorgfalt zusammengefügt und ggf. durch Unterordner getrennt werden.\n\n\n\nOnline IRTlib Player: Der Online-Player sammelt die Daten, wenn nicht anders konfiguriert, in dem Volume welches für die Ergebnisdaten konfiguriert ist (vgl. /app/results in docker-compse.yml-File). Jede Session wird dort in einem separaten Unterverzeichnis gespeichert und kann, von Administratoren die Zugriff auf das Volume haben (!), heruntergeladen werden.\n\nWenn ein API-key für den Datenzugriff definiert ist, kann der Download der Ergebnisdaten auch über das R-Paket LogFSM erfolgen.\n\n\nDazu kann mit folgendem Aufruf zunächst (einmalig) das R-Paket installiert werden:\n\nsource(\"http://logfsm.com/latest\")\n\nDanach ist der Download der Rohdatenarchive mit folgendem R-Skript möglich:\n\n\nlibrary(LogFSM)\n\nif (!dir.exists(paste0(getwd(),\"/in/\")))\n  dir.create(paste0(getwd(),\"/in/\"))\n\nif (!dir.exists(paste0(getwd(),\"/out/\")))\n  dir.create(paste0(getwd(),\"/out/\"))\n\nSECRET_KEY &lt;- \"(your secret key)\"\nAPI_URL &lt;- \"(your API-URL)\"\n\nLogFSM::TransformToUniversalLogFormat(inputfolders = paste0(getwd(),\"/in/\"),\n                              inputformat = \"irtlibv01a\", \n                              zcsvoutput  = paste0(getwd(),\"/out/data_csv.zip\"),  \n                              stataoutput = paste0(getwd(),\"/out/data_dta.zip\"),\n                              spssoutput =  paste0(getwd(),\"/out/data_sav.zip\"),\n                              key = SECRET_KEY,\n                              web = API_URL, \n                              outputtimestampformatstring=\"dd.MM.yyyy HH:mm:ss.fff\")\n\nresults &lt;- read.csv(unz(paste0(getwd(),\"/out/data_csv.zip\"), \"Results.csv\"),\n                    sep=\";\", encoding = \"UTF-8\")\n\nDatenabruf und Konvertierung der Daten mit LogFSM\n\nMit dem Aufruf der Funktion TransformToUniversalLogFormat aus dem Paket LogFSM werden die Daten heruntergeladen und in das spezifzierte Verzeichnis infolders aggelegt, wenn ein API-Key (key) und eine API-Url (web) übergeben werden.\n\n\n\n\n\n\nHinweis zur SECRET_KEY und API_URL\n\n\n\n\n\nDer Wert für SECRET_KEY mus dem Eintrag entsprechen, der bei der Konfiguration des Docker-Images in der appsettings.json als ExternalExportKey definiert wurde, siehe Abschnitt Online-Version (Docker).\nDer Wert für die API_URL bildet sich nach folgendem Schema: https://{U}/{S}/api/session/\n\n{U} ist die URL des IRTlib Players\n{S} ist der Bezeichner der Studie\n\n\n\n\nDie Funktion TransformToUniversalLogFormat aus dem Paket LogFSM (oder analog das im folgenden beschriebene Kommandozeilenwerkzeug) können auch verwendet werden, um bereits lokal vorhandene Rohdatenarchive auszulesen.\n\n\n\nDie für den Datenabruf und die Datenkonvertierung über LogFSM verwendete Anwendung TransformToUniversalLogFormat ist als Konsolen-Anwendung aus dem Releases-Abschnitt von https://github.com/kroehne/LogFSM/ verfügbar.\nDarüber lassen sich Datenabruf und Datenumwandlung auch ohne R ausführen.\n\nWindows:\nLinux:\nMac:\n\n\n\n\n\n\n\nIn Entwicklung\n\n\n\nEine zertifizierte Version von TransformToUniversalLogFormat für Apple ist im Moment in Entwicklung.\n\n\n\n\n\nWenn die Daten über LogFSM von einem Online IRTlib Player abgerufen oder Offline eingesammelt wurden, liegen sie am Ende in einem Verzeichnis vor. Je Session (d.h. je Person oder Person x Zeitpunkt) als Rohdaten-Archiv.\nDie Funktion TransformToUniversalLogFormat in LogFSM oder über die Kommando-Zeile kann auch verwendet werden, um die Rohdatenarchive aus einem Verzeichnis auszulesen und die Ergebnisdaten zu Extrahieren:\n\n\nlibrary(LogFSM)\n\nif (!dir.exists(paste0(getwd(),\"/out/\")))\n  dir.create(paste0(getwd(),\"/out/\"))\n\nLogFSM::TransformToUniversalLogFormat(inputfolders = paste0(getwd(),\"/in/\"),\n                              inputformat = \"irtlibv01a\", \n                              zcsvoutput  = paste0(getwd(),\"/out/data_csv.zip\"),  \n                              stataoutput = paste0(getwd(),\"/out/data_dta.zip\"),\n                              spssoutput =  paste0(getwd(),\"/out/data_sav.zip\"),\n                              outputtimestampformatstring=\"dd.MM.yyyy HH:mm:ss.fff\")\n\nresults &lt;- read.csv(unz(paste0(getwd(),\"/out/data_csv.zip\"), \"Results.csv\"),\n                    sep=\";\", encoding = \"UTF-8\")\n\n\n\n\n\nDie Konvertierung der Daten mit TransformToUniversalLogFormat in LogFSM oder über die Kommando-Zeile wandelt die erhobenen Log-Daten, welche von den CBA ItemBuilder-Tasks bereitgestellt werden, in folgende Formate um:\n\nFlat and Sparse Log-Data Table: Eine große Tabelle (als CSV, Stata, SPSS) mit einer Zeile je Event. Da die event-spezifische Attribute (d.h. die unterschiedlichen zusätzlichen Informationen die von einem Event vorhanden sind) sich auf viele Spalten verteilen, die aber jeweils nur je Event-Typ gefüllt sind, ist diese Tabelle zwar flach, aber ggf. auch sehr löchrig.\nUniversal Log-Format: Alternativ enthalten die von LogFSM bzw. dem Komandozeilen-Werkzeug TransformToUniversalLogFormat erstellten ZIP-Archive auch einzelne Datensatz-Tabellen je Evenet-Typ. Die event-spezifischen Attribute in diesen Tabellen sind weniger löchrig (d.h. sie enthalten nur fehlende Werte für optionale Attribute) und können zu einer Flat and Sparse Log-Data Table kombiniert werden, wenn erforderlich.\nXES (eXtensible Event Stream): Die Log-Daten können auch in dem standardisierten XML-Format (https://xes-standard.org/) umgewandelt werden.\n\n\n\n\n\n\n\nHinweis zu Zeitstempeln\n\n\n\nDie mit der IRTlib Software erhobenen Zeitstempel sind im UTC-Format (Coordinated Universal Time).\n\n\n\n\n\nDie Rohdatenarchive enthalten folgende Dateien:\n\nTrace.json: Log-Daten (Traces) wie von der CBA ItemBuilder-Runtime geliefert, zusammen mit dem Kontext aus dem IRTlib Player.\n\n\nDie Datei enthält folgende Struktur, mit Komma getrennt. Die Datei ist kein gültiges JSON, bis nicht das letzte Komma entfernt und ein [ vor und ein ] nach dem inhalt eingefügt wird.\n\n\nDer Eintrag Trace enthält die Log-Daten (Traces) in Päkchen (wie von der CBA ItemBuilder-Runtime geliefert) quotiert (d.h. \" wird als \\u0022 dargestellt). Die TraceId ist ein Zähler, welcher die Übermittelten Päkchen durchzählt. Timestamp ist der Zeitstempel der Übermittlung. SessionId der Benutzername oder die UUID (PersonIdentifier). Der Context gibt über Name des CBA ItemBuilder-Projekts, Task und Scope eine Referenz zum Assessmentinhalt (Element). Unter Assemblies sind die Informationen zum verwendeten IRTlib Player gespeichert und StudyRevision verweist auf die Revision einer (veröffentlichten) Studie.\n\n{\n    \"Trace\": \"(TRACE-JSON)\",\n    \"TraceId\": 1,\n    \"Timestamp\": \"2023-12-04T20:53:06.297Z\",\n    \"SessionId\": \"(SESSION-ID OR USERNAME)\",\n    \"Context\": {\n        \"Item\": \"(PROJECT NAME)\",\n        \"Task\": \"(TASK NAME)\",\n        \"Scope\": \"(SCOPE)\",\n        \"Preview\": \"\"\n    },\n    \"Assemblies\": [\n        {\n            \"Name\": \"TestApp.Player.Desktop\",\n            \"Version\": \"(APPLICATION VERSION)\",\n            \"GitHash\": \"(APPLICATION BUILD HASH)\"\n        }\n    ],\n    \"StudyRevision\": \"(STUDY REVISION)\"\n},\n\nSnapshot.json: Snapshot-Daten wie von der CBA ItemBuilder-Runtime geliefert, zusammen mit dem Kontext aus dem IRTlib Player.\n\n\nDie Datei enthält folgende Struktur, mit Komma getrennt. Die Datei ist kein gültiges JSON, bis nicht das letzte Komma entfernt und ein [ vor und ein ] nach dem inhalt eingefügt wird.\n\n\nDer Eintrag Snapshot enthält die Snapshot-Informationen (wie von der CBA ItemBuilder-Runtime geliefert) quotiert (d.h. \" wird als \\u0022 dargestellt). Der ContextFlag gibt an, wie der CBA ItemBuilder-Task verlassen wurde (NextTask, PreviousTask oder Cancel). Der ContextScope ist (TODO). Timestamp ist der Zeitstempel der Übermittlung. SessionId der Benutzername oder die UUID (PersonIdentifier). Der Context gibt über Name des CBA ItemBuilder-Projekts, Task und Scope eine Referenz zum Assessmentinhalt (Element). Unter Assemblies sind die Informationen zum verwendeten IRTlib Player gespeichert und StudyRevision verweist auf die Revision einer (veröffentlichten) Studie.\n\n(TODO: Warum ist Assemblies und StudyRevision null?)\n{\n    \"Snapshot\": \"(SNAPSHOT-JSON)\",\n    \"ContextFlag\": \"NextTask\",\n    \"ContextScope\": 0,\n    \"Timestamp\": \"2023-12-04T20:53:06.497Z\",\n    \"SessionId\": \"(SESSION-ID OR USERNAME)\",\n    \"Context\": {\n        \"Item\": \"(PROJECT NAME)\",\n        \"Task\": \"(TASK NAME)\",\n        \"Scope\": \"(SCOPE)\",\n        \"Preview\": \"\"\n    },\n    \"Assemblies\": null,\n    \"StudyRevision\": null\n},\n\nItemScore.json: Scoring-Information (wie von CBA ItemBuilder-Runtime geliefert).\n\n\nDie Datei enthält folgende Struktur, mit Komma getrennt. Die Datei ist kein gültiges JSON, bis nicht das letzte Komma entfernt und ein [ vor und ein ] nach dem inhalt eingefügt wird.\n\n\nDer Eintrag ItemScore enthält den ItemScore (wie von der CBA ItemBuilder-Runtime geliefert) quotiert (d.h. \" wird als \\u0022 dargestellt).Der ContextFlag gibt an, wie der CBA ItemBuilder-Task verlassen wurde (NextTask, PreviousTask oder Cancel). Der ContextScope ist (TODO). Timestamp ist der Zeitstempel der Übermittlung. SessionId der Benutzername oder die UUID (PersonIdentifier). Der Context gibt über Name des CBA ItemBuilder-Projekts, Task und Scope eine Referenz zum Assessmentinhalt (Element). Unter Assemblies sind die Informationen zum verwendeten IRTlib Player gespeichert und StudyRevision verweist auf die Revision einer (veröffentlichten) Studie.\n\n{\n    \"ItemScore\": \"(SCORING-JSON)\",\n    \"ContextFlag\": \"NextTask\",\n    \"ContextScope\": 0,\n    \"Timestamp\": \"2023-12-04T20:53:06.474Z\",\n    \"SessionId\": \"(SESSION-ID OR USERNAME)\",\n    \"Context\": {\n        \"Item\": \"(PROJECT NAME)\",\n        \"Task\": \"(TASK NAME)\",\n        \"Scope\": \"(SCOPE)\",\n        \"Preview\": \"\"\n     },\n    \"Assemblies\": [\n        {\n            \"Name\": \"TestApp.Player.Desktop\",\n            \"Version\": \"(APPLICATION VERSION)\",\n            \"GitHash\": \"(APPLICATION BUILD HASH)\"\n        }\n    ],\n    \"StudyRevision\": \"(STUDY REVISION)\"\n},\n\nSession.json: Die Datei enthält Daten des IRTlib Players welche die Auführung der Session beschreiben.\nLog.json: Log-Events der IRTlib Player (enthält u.A. Log-Informationen zur Verarbeitung des Blockly-Routings).\nbrowser.log: Ausgabe der Konsole, die während der Bearbeitung der Aufgaben im Browser gesammelt wurden (unstruktruierter Text, für Entwickler).\nserver.log: Log-Ausgaben des Servers des IRTlib Players (unstruktruierter Text, für Entwickler)\nKeyboard.json: Tastatureingaben und Zeitstempel.\nMonitoring.json: Kopie der Monitoring-Datei, welche erstellt wurde.\n\n(TODO: Wie lässt sich Mouse-Tracking aktivieren?)"
  },
  {
    "objectID": "data-collection-post-processing.html#datenaufbereitung",
    "href": "data-collection-post-processing.html#datenaufbereitung",
    "title": "Datenerhebung: Datenaufbereitung / Data Collection: Data Post-Processing",
    "section": "",
    "text": "Daten werden vom IRTlib Player in Rohdatenarchiven pro Session (d.h. pro Testdurchführung mit einer Studie) gespeichert. Die Rohdatenarchive sind ZIP-Archive, deren Dateinamen dem Benutzernamen oder dem Universally Unique Identifier (UUID) entsprechen. Abweichungen von diesem Schema sind möglich, wenn zum Zeitpunkt der Speicherung bereits ein Rohdatenarchiv mit diesem Dateinamen vorhanden war. In diesem Fall werden die Daten vim IRTlib Player nicht überschrieben, sondern es wird ein Suffix _1, _2, … angehängt, bis der Dateiname verwendbar ist.\n\nOffline IRTlib Player: Wenn nicht anders konfiguriert werden die Ergebnisdaten im Verzeichnis Temp/{Studien-Name}/Results gespeichert. Die Rohdatenarchive werden erstellt, wenn eine Session beendet, d.h. die letzte definierte CBA ItemBuilder-Task mit NEXT_TASK verlassen wird. Erst wenn die Rohdatenarchive erstellt wurden, ist ein Fortsetzen der angefangenen Session, wie es beispielsweise bei einem Computerabsturz notwendig sein kann, nicht mehr möglich.\n\n\nAnalog verhält es sich auch, wenn die Offline-Version des IRTlib Player als lokaler Server eingesetzt wird. Die Rohdatenarchive werden nach der Testbearbeitung im Verzeichnis Temp/{Studien-Name}/Results gespeichert.\n\n\nDie Sammlung von Daten aus den Offline IRTlib Playern entspricht dem Einsammeln der Rohdatenarchive, die auf den verschiedenen Geräten erhoben werden.\n\n\n\n\n\n\n\nHinweis\n\n\n\nDa die Offline IRTlib Player untereinander nicht in Verbindung stehen, können - je nach Loginmodus - identische Anmeldedaten in verschiedenen IRTlib Playern parallel erstellt werden. Nach einer Datenerhebung müssen die Rohdatenarchive deshalb mit Sorgfalt zusammengefügt und ggf. durch Unterordner getrennt werden.\n\n\n\nOnline IRTlib Player: Der Online-Player sammelt die Daten, wenn nicht anders konfiguriert, in dem Volume welches für die Ergebnisdaten konfiguriert ist (vgl. /app/results in docker-compse.yml-File). Jede Session wird dort in einem separaten Unterverzeichnis gespeichert und kann, von Administratoren die Zugriff auf das Volume haben (!), heruntergeladen werden.\n\nWenn ein API-key für den Datenzugriff definiert ist, kann der Download der Ergebnisdaten auch über das R-Paket LogFSM erfolgen.\n\n\nDazu kann mit folgendem Aufruf zunächst (einmalig) das R-Paket installiert werden:\n\nsource(\"http://logfsm.com/latest\")\n\nDanach ist der Download der Rohdatenarchive mit folgendem R-Skript möglich:\n\n\nlibrary(LogFSM)\n\nif (!dir.exists(paste0(getwd(),\"/in/\")))\n  dir.create(paste0(getwd(),\"/in/\"))\n\nif (!dir.exists(paste0(getwd(),\"/out/\")))\n  dir.create(paste0(getwd(),\"/out/\"))\n\nSECRET_KEY &lt;- \"(your secret key)\"\nAPI_URL &lt;- \"(your API-URL)\"\n\nLogFSM::TransformToUniversalLogFormat(inputfolders = paste0(getwd(),\"/in/\"),\n                              inputformat = \"irtlibv01a\", \n                              zcsvoutput  = paste0(getwd(),\"/out/data_csv.zip\"),  \n                              stataoutput = paste0(getwd(),\"/out/data_dta.zip\"),\n                              spssoutput =  paste0(getwd(),\"/out/data_sav.zip\"),\n                              key = SECRET_KEY,\n                              web = API_URL, \n                              outputtimestampformatstring=\"dd.MM.yyyy HH:mm:ss.fff\")\n\nresults &lt;- read.csv(unz(paste0(getwd(),\"/out/data_csv.zip\"), \"Results.csv\"),\n                    sep=\";\", encoding = \"UTF-8\")\n\nDatenabruf und Konvertierung der Daten mit LogFSM\n\nMit dem Aufruf der Funktion TransformToUniversalLogFormat aus dem Paket LogFSM werden die Daten heruntergeladen und in das spezifzierte Verzeichnis infolders aggelegt, wenn ein API-Key (key) und eine API-Url (web) übergeben werden.\n\n\n\n\n\n\nHinweis zur SECRET_KEY und API_URL\n\n\n\n\n\nDer Wert für SECRET_KEY mus dem Eintrag entsprechen, der bei der Konfiguration des Docker-Images in der appsettings.json als ExternalExportKey definiert wurde, siehe Abschnitt Online-Version (Docker).\nDer Wert für die API_URL bildet sich nach folgendem Schema: https://{U}/{S}/api/session/\n\n{U} ist die URL des IRTlib Players\n{S} ist der Bezeichner der Studie\n\n\n\n\nDie Funktion TransformToUniversalLogFormat aus dem Paket LogFSM (oder analog das im folgenden beschriebene Kommandozeilenwerkzeug) können auch verwendet werden, um bereits lokal vorhandene Rohdatenarchive auszulesen.\n\n\n\nDie für den Datenabruf und die Datenkonvertierung über LogFSM verwendete Anwendung TransformToUniversalLogFormat ist als Konsolen-Anwendung aus dem Releases-Abschnitt von https://github.com/kroehne/LogFSM/ verfügbar.\nDarüber lassen sich Datenabruf und Datenumwandlung auch ohne R ausführen.\n\nWindows:\nLinux:\nMac:\n\n\n\n\n\n\n\nIn Entwicklung\n\n\n\nEine zertifizierte Version von TransformToUniversalLogFormat für Apple ist im Moment in Entwicklung.\n\n\n\n\n\nWenn die Daten über LogFSM von einem Online IRTlib Player abgerufen oder Offline eingesammelt wurden, liegen sie am Ende in einem Verzeichnis vor. Je Session (d.h. je Person oder Person x Zeitpunkt) als Rohdaten-Archiv.\nDie Funktion TransformToUniversalLogFormat in LogFSM oder über die Kommando-Zeile kann auch verwendet werden, um die Rohdatenarchive aus einem Verzeichnis auszulesen und die Ergebnisdaten zu Extrahieren:\n\n\nlibrary(LogFSM)\n\nif (!dir.exists(paste0(getwd(),\"/out/\")))\n  dir.create(paste0(getwd(),\"/out/\"))\n\nLogFSM::TransformToUniversalLogFormat(inputfolders = paste0(getwd(),\"/in/\"),\n                              inputformat = \"irtlibv01a\", \n                              zcsvoutput  = paste0(getwd(),\"/out/data_csv.zip\"),  \n                              stataoutput = paste0(getwd(),\"/out/data_dta.zip\"),\n                              spssoutput =  paste0(getwd(),\"/out/data_sav.zip\"),\n                              outputtimestampformatstring=\"dd.MM.yyyy HH:mm:ss.fff\")\n\nresults &lt;- read.csv(unz(paste0(getwd(),\"/out/data_csv.zip\"), \"Results.csv\"),\n                    sep=\";\", encoding = \"UTF-8\")\n\n\n\n\n\nDie Konvertierung der Daten mit TransformToUniversalLogFormat in LogFSM oder über die Kommando-Zeile wandelt die erhobenen Log-Daten, welche von den CBA ItemBuilder-Tasks bereitgestellt werden, in folgende Formate um:\n\nFlat and Sparse Log-Data Table: Eine große Tabelle (als CSV, Stata, SPSS) mit einer Zeile je Event. Da die event-spezifische Attribute (d.h. die unterschiedlichen zusätzlichen Informationen die von einem Event vorhanden sind) sich auf viele Spalten verteilen, die aber jeweils nur je Event-Typ gefüllt sind, ist diese Tabelle zwar flach, aber ggf. auch sehr löchrig.\nUniversal Log-Format: Alternativ enthalten die von LogFSM bzw. dem Komandozeilen-Werkzeug TransformToUniversalLogFormat erstellten ZIP-Archive auch einzelne Datensatz-Tabellen je Evenet-Typ. Die event-spezifischen Attribute in diesen Tabellen sind weniger löchrig (d.h. sie enthalten nur fehlende Werte für optionale Attribute) und können zu einer Flat and Sparse Log-Data Table kombiniert werden, wenn erforderlich.\nXES (eXtensible Event Stream): Die Log-Daten können auch in dem standardisierten XML-Format (https://xes-standard.org/) umgewandelt werden.\n\n\n\n\n\n\n\nHinweis zu Zeitstempeln\n\n\n\nDie mit der IRTlib Software erhobenen Zeitstempel sind im UTC-Format (Coordinated Universal Time).\n\n\n\n\n\nDie Rohdatenarchive enthalten folgende Dateien:\n\nTrace.json: Log-Daten (Traces) wie von der CBA ItemBuilder-Runtime geliefert, zusammen mit dem Kontext aus dem IRTlib Player.\n\n\nDie Datei enthält folgende Struktur, mit Komma getrennt. Die Datei ist kein gültiges JSON, bis nicht das letzte Komma entfernt und ein [ vor und ein ] nach dem inhalt eingefügt wird.\n\n\nDer Eintrag Trace enthält die Log-Daten (Traces) in Päkchen (wie von der CBA ItemBuilder-Runtime geliefert) quotiert (d.h. \" wird als \\u0022 dargestellt). Die TraceId ist ein Zähler, welcher die Übermittelten Päkchen durchzählt. Timestamp ist der Zeitstempel der Übermittlung. SessionId der Benutzername oder die UUID (PersonIdentifier). Der Context gibt über Name des CBA ItemBuilder-Projekts, Task und Scope eine Referenz zum Assessmentinhalt (Element). Unter Assemblies sind die Informationen zum verwendeten IRTlib Player gespeichert und StudyRevision verweist auf die Revision einer (veröffentlichten) Studie.\n\n{\n    \"Trace\": \"(TRACE-JSON)\",\n    \"TraceId\": 1,\n    \"Timestamp\": \"2023-12-04T20:53:06.297Z\",\n    \"SessionId\": \"(SESSION-ID OR USERNAME)\",\n    \"Context\": {\n        \"Item\": \"(PROJECT NAME)\",\n        \"Task\": \"(TASK NAME)\",\n        \"Scope\": \"(SCOPE)\",\n        \"Preview\": \"\"\n    },\n    \"Assemblies\": [\n        {\n            \"Name\": \"TestApp.Player.Desktop\",\n            \"Version\": \"(APPLICATION VERSION)\",\n            \"GitHash\": \"(APPLICATION BUILD HASH)\"\n        }\n    ],\n    \"StudyRevision\": \"(STUDY REVISION)\"\n},\n\nSnapshot.json: Snapshot-Daten wie von der CBA ItemBuilder-Runtime geliefert, zusammen mit dem Kontext aus dem IRTlib Player.\n\n\nDie Datei enthält folgende Struktur, mit Komma getrennt. Die Datei ist kein gültiges JSON, bis nicht das letzte Komma entfernt und ein [ vor und ein ] nach dem inhalt eingefügt wird.\n\n\nDer Eintrag Snapshot enthält die Snapshot-Informationen (wie von der CBA ItemBuilder-Runtime geliefert) quotiert (d.h. \" wird als \\u0022 dargestellt). Der ContextFlag gibt an, wie der CBA ItemBuilder-Task verlassen wurde (NextTask, PreviousTask oder Cancel). Der ContextScope ist (TODO). Timestamp ist der Zeitstempel der Übermittlung. SessionId der Benutzername oder die UUID (PersonIdentifier). Der Context gibt über Name des CBA ItemBuilder-Projekts, Task und Scope eine Referenz zum Assessmentinhalt (Element). Unter Assemblies sind die Informationen zum verwendeten IRTlib Player gespeichert und StudyRevision verweist auf die Revision einer (veröffentlichten) Studie.\n\n(TODO: Warum ist Assemblies und StudyRevision null?)\n{\n    \"Snapshot\": \"(SNAPSHOT-JSON)\",\n    \"ContextFlag\": \"NextTask\",\n    \"ContextScope\": 0,\n    \"Timestamp\": \"2023-12-04T20:53:06.497Z\",\n    \"SessionId\": \"(SESSION-ID OR USERNAME)\",\n    \"Context\": {\n        \"Item\": \"(PROJECT NAME)\",\n        \"Task\": \"(TASK NAME)\",\n        \"Scope\": \"(SCOPE)\",\n        \"Preview\": \"\"\n    },\n    \"Assemblies\": null,\n    \"StudyRevision\": null\n},\n\nItemScore.json: Scoring-Information (wie von CBA ItemBuilder-Runtime geliefert).\n\n\nDie Datei enthält folgende Struktur, mit Komma getrennt. Die Datei ist kein gültiges JSON, bis nicht das letzte Komma entfernt und ein [ vor und ein ] nach dem inhalt eingefügt wird.\n\n\nDer Eintrag ItemScore enthält den ItemScore (wie von der CBA ItemBuilder-Runtime geliefert) quotiert (d.h. \" wird als \\u0022 dargestellt).Der ContextFlag gibt an, wie der CBA ItemBuilder-Task verlassen wurde (NextTask, PreviousTask oder Cancel). Der ContextScope ist (TODO). Timestamp ist der Zeitstempel der Übermittlung. SessionId der Benutzername oder die UUID (PersonIdentifier). Der Context gibt über Name des CBA ItemBuilder-Projekts, Task und Scope eine Referenz zum Assessmentinhalt (Element). Unter Assemblies sind die Informationen zum verwendeten IRTlib Player gespeichert und StudyRevision verweist auf die Revision einer (veröffentlichten) Studie.\n\n{\n    \"ItemScore\": \"(SCORING-JSON)\",\n    \"ContextFlag\": \"NextTask\",\n    \"ContextScope\": 0,\n    \"Timestamp\": \"2023-12-04T20:53:06.474Z\",\n    \"SessionId\": \"(SESSION-ID OR USERNAME)\",\n    \"Context\": {\n        \"Item\": \"(PROJECT NAME)\",\n        \"Task\": \"(TASK NAME)\",\n        \"Scope\": \"(SCOPE)\",\n        \"Preview\": \"\"\n     },\n    \"Assemblies\": [\n        {\n            \"Name\": \"TestApp.Player.Desktop\",\n            \"Version\": \"(APPLICATION VERSION)\",\n            \"GitHash\": \"(APPLICATION BUILD HASH)\"\n        }\n    ],\n    \"StudyRevision\": \"(STUDY REVISION)\"\n},\n\nSession.json: Die Datei enthält Daten des IRTlib Players welche die Auführung der Session beschreiben.\nLog.json: Log-Events der IRTlib Player (enthält u.A. Log-Informationen zur Verarbeitung des Blockly-Routings).\nbrowser.log: Ausgabe der Konsole, die während der Bearbeitung der Aufgaben im Browser gesammelt wurden (unstruktruierter Text, für Entwickler).\nserver.log: Log-Ausgaben des Servers des IRTlib Players (unstruktruierter Text, für Entwickler)\nKeyboard.json: Tastatureingaben und Zeitstempel.\nMonitoring.json: Kopie der Monitoring-Datei, welche erstellt wurde.\n\n(TODO: Wie lässt sich Mouse-Tracking aktivieren?)"
  },
  {
    "objectID": "settings.html",
    "href": "settings.html",
    "title": "Einstellungen / Settings",
    "section": "",
    "text": "Die Einstellungen des IRTlib Players werden als Teil der Studienkonfiguration festgelegt. Der IRTlib Editor hat eine kleine Anzahl von Einstellungen.\n\n\nDie IRTlib Software wird kontinuierlich weiterentwickelt. Informationen über die laufende Version können im Abschnitt Über das Programm abgerufen werden.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nIn diesem Bereich können Einstellungen vorgenommen werden, welche die Arbeit mit dem Editor und alle Studien betreffen.\n\n\nUm mit dem IRTLib Editor Studien zu konfigurieren, welche CBA ItemBuilder Inhalte verwenden, ist je Version die passende Laufzeitumgebung (Runtime) notwendig. Aktuelle getestete Version der CBA ItemBuilder Runtime sind bereits im Editor hinterlegt, in diesem Bereich können jedoch auch Runtimes für andere Versionen des CBA ItemBuilders oder aktualisierte bzw. korrigierte Runtimes in den Editor importiert werden.\nRuntimes, die im Editor verfügbar sind, werden beim Veröffentlichen von Studien automatisch als Teil der Studienkonfiguration integriert und stehen auf diesem Weg aud dem IRTLib Player zur Verfügung.\n\n\n\nÄndern Sie in diesem Abschnitt die Sprache für den Editor. Die hier ausgewählte Einstellung hat keinen Einfluss auf die Sprache der Assessmentinhalte in den konfigurierten Studien.\n\n\n\n\nFinden Sie unter der Schaltfläche Versionsinfo eine Zusammenfassung der letzten Änderungen und Angaben zur aktuellen Programmversion.\n\n\n\n\nWenn eine Preview-Versionen verwendet wird (d.h. eine Version der IRTlib Software die Änderungen enthält die seit dem letzten Release gemacht wurden, dann können die Programmversionen über den Build-Hash identifiziert werden:\n\n\n\nBeispiel aus Dialog Über das Programm mit dem Build-Hash b1cd92b0\n\n\n\n\n\nDie IRTlib Software kann mit CBA ItemBuilder Aufgaben verschiedener CBA ItemBuilder Versionen verwendet werden. Die erforderliche Runtime (d.h. die Verbindung zwischen den CBA ItemBuilder-Aufgaben und der IRTlib Software) ist Teil der Studienkonfiguration, damit der IRTlib Player sicher weiß, wie er CBA ItemBuilder-Aufgaben einer bestimmten Version verwenden kann.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nUm mit dem IRTLib Editor Studien zu konfigurieren, welche CBA ItemBuilder Inhalte verwenden, ist je Version die passende Laufzeitumgebung (Runtime) notwendig. Aktuelle getestete Version der CBA ItemBuilder Runtime sind bereits im Editor hinterlegt, in diesem Bereich können jedoch auch Runtimes für andere Versionen des CBA ItemBuilders oder aktualisierte bzw. korrigierte Runtimes in den Editor importiert werden.\n\n\nEs ist wichtig zu wissen, welche Version des CBA ItemBuilders für die Erstellung der Items (d.h. der CBA ItemBuilder-Projektdateien) verwendet wurde. Im Zweifelsfall kann man diese Information z.B. im About Dialog des CBA ItemBuilders finden:\n\nSchritt 1: Öffnen Sie den “Apout”-Dialog über das “Help”-Menü\n\n\n\n\n\n\n\n\n\nSchritt 2: Suchen Sie die Versionsnummer im Dialog (hier 9.9.0)\n\n\n\n\n\n\n\n\nDie Versionsnummer muss in den Einstellungen des IRTlib-Editors im Abschnitt Laufzeiten als eine der Karten aufgeführt sein:\n\n\n\n\n\n\n\n\n\n\nWenn die entsprechende Runtime nicht bereits im Editor enthalten ist, kann eine neue/zusätzliche Runtime importiert werden. Studienkonfigurationen, die mit dem IRTlib-Editor erstellt/bearbeitet werden, können mehrere Runtimes für verschiedene Versionen enthalten.\n\nSchritt 1: Um eine Runtime zu integrieren, werden eine JavaScript- und eine CSS-Datei benötigt. Diese Dateien können hier heruntergeladen werden:\n\nhttps://cba.itembuilder.de/appendix-tables.html#previous-versions\n\nSchritt 2: Entpacken Sie die heruntergeladene Runtime, die verwendet werden soll.\nSchritt 3: Navigieren Sie zum Abschnitt Runtimes:\n\n\n\n\n\n\n\n\n\nSchritt 4: Drücken Sie den Button “+” (unten rechts)\nSchritt 5: Geben Sie die Versionsnummer mit drei Stellen ein (z.B. 9.9.0):\n\n\n\n\n\n\n\n\n\nSchritt 6: Wählen Sie die Datei main.*.js aus dem ZIP-Archiv aus, das die Laufzeitumgebung enthält. Beachten Sie, dass das * dem Hash der Datei entspricht (d.h. der vollständige Dateiname sieht aus wie main.19479ac3.js)\nSchritt 7: Wählen Sie die Datei main.*.css aus dem ZIP-Archiv, das die Runtime enthält. Beachten Sie, dass der * dem Hash der Datei entspricht (d.h. der vollständige Dateiname sieht aus wie main.b765ceca.css)\n\n\nHinweis: Das Feld Description und die beiden zusätzlichen Map-Files (für JavaScript Source und für CSS Source) sind optional.\n\n\nSchritt 8: Drücken Sie die Schaltfläche Speichern, um den Import der Runtime abzuschließen:\n\n\n\n\n\n\n\n\nNach dem Import werden die unterstützten CBA ItemBuilder-Versionen im Abschnitt Runtime aufgelistet. Um eine Runtime für eine bestimmte Version zu löschen, klicken Sie auf das Papierkorb-Symbol unten rechts auf der “Karte” und bestätigen Sie mit Löschen."
  },
  {
    "objectID": "settings.html#übersicht",
    "href": "settings.html#übersicht",
    "title": "Einstellungen / Settings",
    "section": "",
    "text": "Die IRTlib Software wird kontinuierlich weiterentwickelt. Informationen über die laufende Version können im Abschnitt Über das Programm abgerufen werden.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\nIn diesem Bereich können Einstellungen vorgenommen werden, welche die Arbeit mit dem Editor und alle Studien betreffen.\n\n\nUm mit dem IRTLib Editor Studien zu konfigurieren, welche CBA ItemBuilder Inhalte verwenden, ist je Version die passende Laufzeitumgebung (Runtime) notwendig. Aktuelle getestete Version der CBA ItemBuilder Runtime sind bereits im Editor hinterlegt, in diesem Bereich können jedoch auch Runtimes für andere Versionen des CBA ItemBuilders oder aktualisierte bzw. korrigierte Runtimes in den Editor importiert werden.\nRuntimes, die im Editor verfügbar sind, werden beim Veröffentlichen von Studien automatisch als Teil der Studienkonfiguration integriert und stehen auf diesem Weg aud dem IRTLib Player zur Verfügung.\n\n\n\nÄndern Sie in diesem Abschnitt die Sprache für den Editor. Die hier ausgewählte Einstellung hat keinen Einfluss auf die Sprache der Assessmentinhalte in den konfigurierten Studien.\n\n\n\n\nFinden Sie unter der Schaltfläche Versionsinfo eine Zusammenfassung der letzten Änderungen und Angaben zur aktuellen Programmversion.\n\n\n\n\nWenn eine Preview-Versionen verwendet wird (d.h. eine Version der IRTlib Software die Änderungen enthält die seit dem letzten Release gemacht wurden, dann können die Programmversionen über den Build-Hash identifiziert werden:\n\n\n\nBeispiel aus Dialog Über das Programm mit dem Build-Hash b1cd92b0"
  },
  {
    "objectID": "settings.html#laufzeitumgebungen",
    "href": "settings.html#laufzeitumgebungen",
    "title": "Einstellungen / Settings",
    "section": "",
    "text": "Die IRTlib Software kann mit CBA ItemBuilder Aufgaben verschiedener CBA ItemBuilder Versionen verwendet werden. Die erforderliche Runtime (d.h. die Verbindung zwischen den CBA ItemBuilder-Aufgaben und der IRTlib Software) ist Teil der Studienkonfiguration, damit der IRTlib Player sicher weiß, wie er CBA ItemBuilder-Aufgaben einer bestimmten Version verwenden kann.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\nUm mit dem IRTLib Editor Studien zu konfigurieren, welche CBA ItemBuilder Inhalte verwenden, ist je Version die passende Laufzeitumgebung (Runtime) notwendig. Aktuelle getestete Version der CBA ItemBuilder Runtime sind bereits im Editor hinterlegt, in diesem Bereich können jedoch auch Runtimes für andere Versionen des CBA ItemBuilders oder aktualisierte bzw. korrigierte Runtimes in den Editor importiert werden.\n\n\nEs ist wichtig zu wissen, welche Version des CBA ItemBuilders für die Erstellung der Items (d.h. der CBA ItemBuilder-Projektdateien) verwendet wurde. Im Zweifelsfall kann man diese Information z.B. im About Dialog des CBA ItemBuilders finden:\n\nSchritt 1: Öffnen Sie den “Apout”-Dialog über das “Help”-Menü\n\n\n\n\n\n\n\n\n\nSchritt 2: Suchen Sie die Versionsnummer im Dialog (hier 9.9.0)\n\n\n\n\n\n\n\n\nDie Versionsnummer muss in den Einstellungen des IRTlib-Editors im Abschnitt Laufzeiten als eine der Karten aufgeführt sein:\n\n\n\n\n\n\n\n\n\n\nWenn die entsprechende Runtime nicht bereits im Editor enthalten ist, kann eine neue/zusätzliche Runtime importiert werden. Studienkonfigurationen, die mit dem IRTlib-Editor erstellt/bearbeitet werden, können mehrere Runtimes für verschiedene Versionen enthalten.\n\nSchritt 1: Um eine Runtime zu integrieren, werden eine JavaScript- und eine CSS-Datei benötigt. Diese Dateien können hier heruntergeladen werden:\n\nhttps://cba.itembuilder.de/appendix-tables.html#previous-versions\n\nSchritt 2: Entpacken Sie die heruntergeladene Runtime, die verwendet werden soll.\nSchritt 3: Navigieren Sie zum Abschnitt Runtimes:\n\n\n\n\n\n\n\n\n\nSchritt 4: Drücken Sie den Button “+” (unten rechts)\nSchritt 5: Geben Sie die Versionsnummer mit drei Stellen ein (z.B. 9.9.0):\n\n\n\n\n\n\n\n\n\nSchritt 6: Wählen Sie die Datei main.*.js aus dem ZIP-Archiv aus, das die Laufzeitumgebung enthält. Beachten Sie, dass das * dem Hash der Datei entspricht (d.h. der vollständige Dateiname sieht aus wie main.19479ac3.js)\nSchritt 7: Wählen Sie die Datei main.*.css aus dem ZIP-Archiv, das die Runtime enthält. Beachten Sie, dass der * dem Hash der Datei entspricht (d.h. der vollständige Dateiname sieht aus wie main.b765ceca.css)\n\n\nHinweis: Das Feld Description und die beiden zusätzlichen Map-Files (für JavaScript Source und für CSS Source) sind optional.\n\n\nSchritt 8: Drücken Sie die Schaltfläche Speichern, um den Import der Runtime abzuschließen:\n\n\n\n\n\n\n\n\nNach dem Import werden die unterstützten CBA ItemBuilder-Versionen im Abschnitt Runtime aufgelistet. Um eine Runtime für eine bestimmte Version zu löschen, klicken Sie auf das Papierkorb-Symbol unten rechts auf der “Karte” und bestätigen Sie mit Löschen."
  }
]