[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IRTlib Dokumentation",
    "section": "",
    "text": "1 Einführung\nIRTlib ist eine Software zur Auslieferung computerbasierter Tests. Sie besteht aus zwei Komponenten:\n\nIRTLib Editor: Eine Software für Test-Autoren, welche verwendet wird um Studien zu konfigurieren.\nIRTlib Player: Eine Software zur Datenerhebung, mit welcher Zielpersonen Aufgaben bearbeiten, die für eine Studie konfiguriert sind.\n\nHinweise zur Installation und Einrichtung beider Programme zur ersten Verwendung finden sich unter Download.\n\n\n\nVor der Verwendung der IRTlib Software zur Konfiguration und Erstellung von Auslieferungen, können mit dem CBA ItemBuilder die Assessmentinhalte in Form von einzelnen Tasks erstellt werden.\nDer CBA ItemBuilder kann hier heruntergeladen werden: www.itembuilder.de/software\nDie interaktive Dokumentation des CBA ItemBuilder ist hier zugänglich: cba.itembuilder.de\n\n\n\n\n\nCBA ItemBuilder Dokumentation (PDF)\n\n\n\n\n\n\n\nFür die Verwendung der IRTlib Software ist eine kontext-sensitive Programmhilfe direkt in die Anwendung hinterlegt. Die Dokumentation mit der eingebetteten Hilfe ist auf dieser Seite online verfügbar und steht auch als PDF zur Verfügung.\n\n\n\n\n\nIRTlib Software Dokumentation (PDF)\n\n\n\n\n\nDie Entwicklung vom CBA ItemBuilder und der IRTlib Software wird vom Zentrum für technologiebasiertes Assessment (TBA) am DIPF | Leibniz-Institut für Bildungsforschung und Bildungsinformation koordiniert."
  },
  {
    "objectID": "download.html#offline-windows",
    "href": "download.html#offline-windows",
    "title": "2  Download & Installation",
    "section": "2.1 Offline (Windows)",
    "text": "2.1 Offline (Windows)\nDie IRTlib-Software (IRTlib Editor und IRTlib Player) für die Offline-Nutzung kann aus dem Abschnitt [Releases] des Repository https://github.com/DIPFtba/IRTlibDeploymentSoftware bezogen und heruntergeladen werden.\nIm Abschnitt Releases stehen die beiden Archive TestApp.Editor.Desktop.zip und TestApp.Player.Desktop.zip zum Download bereit.\n\n\n\n\n\n\nHinweis\n\n\n\nBeachten Sie, dass der aktuellste Build im Abschnitt Preview des Release-Abschnitts des repository zu finden ist.\n\n\n\n\n\n\n\n\nWarnung\n\n\n\nDie automatisch erstellten Vorschauversionen des IRTlib Editors und IRTlib Players sind nicht signiert. Eine Warnmeldung des Betriebssystems muss akzeptiert werden, bevor die Programme ausgeführt werden können.\n\n\n\n2.1.1 Studienvorbereitung mit Offline Editor\nDer IRTlib Editor für die Offline-Nutzung wird als ZIP-Archiv (z.B. TestApp.Editor.Desktop.zip) bereitgestellt, das entpackt werden muss. Nach dem Entpacken des Editors kann die Anwendung TestApp.Editor.Desktop.exe auf einem Windows-Gerät gestartet werden.\nIn den Abschnitten Vorbereitung &gt; Übersicht, Vorbereitung &gt; Studien und Vorbereitung &gt; Erhebungsteile ist dokumentiert, wie man mit Hilfe von CBA ItemBuilder-Items Datenerhebungen vorbereitet und konfiguriert.\n\n\n2.1.2 Studiendurchführung mit Offline Player\nDer IRTlib Player ist auch als Windows-Anwendung für die Offline-Nutzung verfügbar und wird als ZIP-Archiv (z.B. TestApp.Player.Desktop.zip) bereitgestellt. Nach dem Entpacken des IRTlib Player ist eine veröffentlichte Studienkonfiguration erforderlich, die zur Datenerhebung verwendet werden soll.\nNach dem Hinzufügen der als Studienkonfiguration bereitgestellten Inhalte einer veröffentlichten Studie kann die ausführbare Datei TestApp.Player.Desktop.exe gestartet werden (entweder mit oder ohne Startparameter).\n\nKiosk Mode: Der IRTlib Player kann über die ausführbare Datei TestApp.Player.Desktop.exe auf dem Computer, auf dem er lokal ausgeführt wird, direkt zur Datenerhebung verwendet werden. Die Studie kann dazu so konfirugiert werden, dass es in einem Kiosk Mode auf einem Bildschirm angezeigt wird und nur über den Task Manager oder das Testleitermenü beendet werden kann (siehe Vollbildmodus im Abschnitt Konfiguration zur Anzeige).\nLokaler Server: Der IRTlib Player kann aber auch als lokaler Server ausgeführt werden. Nach dem Start des Programms TestApp.Player.Server.exe kann eine konfigurierte Studie auch über Webbrowser oder andere Browser mit Kiosk Mode ausgeliefert werden (z.B. den Safe Exam Browser). Mit dieser Konfiguration lassen sich Datenerhebungen bspw. in Schulen ohne Internetverbindung aber mit einem als Bring-in-Server fungierenden Notebook durchführen.\n\nIn den Abschnitten Datenerhebung &gt; Übersicht, Datenerhebung &gt; Veröffentlichen & Export und Datenerhebung &gt; Integration & Auslieferung ist dokumentiert, wie man mit Hilfe des IRTlib Players in den unterschiedlichen Konstellationen Datenerhebungen durchführen kann."
  },
  {
    "objectID": "download.html#online-docker",
    "href": "download.html#online-docker",
    "title": "2  Download & Installation",
    "section": "2.2 Online (Docker)",
    "text": "2.2 Online (Docker)\nDie IRTlib-Software (IRTlib Editor und IRTlib Player) für die Online-Nutzung kann als Docker-Container bezogen werden. Ein Beispiel ist unter https://github.com/DIPFtba/IRTlibDeploymentSoftware zu finden.\nUm den Docker-Container zu verwenden, wird empfohlen, das Repository auf dem Zielgerät auszuchecken (erfordert git) und den Befehl ./start.sh im Ordner docker auszuführen (erfordert installiertes docker und docker compose), um die Software zu starten.\nWenn in der Datei docker-compose.yml nichts geändert wird, ist der Editor über Port 8002 und die Player-Software über Port 8001 erreichbar.\nIn dem Abschnitt Datenerhebung &gt; Integration & Auslieferung finden sich weitere Informationen zur Verwendung der Docker-Container."
  },
  {
    "objectID": "preparation-overview.html",
    "href": "preparation-overview.html",
    "title": "3  Übersicht: Schritte zur Verwendung von IRTlib Editor für die Studienvorbereitung",
    "section": "",
    "text": "4 Übersicht: Schritte zur Verwendung von IRTlib Editor für die Studienvorbereitung\nDie Vorbereitung eines computerbasierten Assessments auf der Grundlage von CBA ItemBuilder-Inhalten beginnt mit der Verwendung des IRTlib-Editors zur Erstellung einer Studienkonfiguration. Dies umfasst in der Regel die folgenden Schritte:"
  },
  {
    "objectID": "preparation-overview.html#sec-embedded-help",
    "href": "preparation-overview.html#sec-embedded-help",
    "title": "3  Übersicht: Schritte zur Verwendung von IRTlib Editor für die Studienvorbereitung",
    "section": "4.1 Eingebettete Programhilfe",
    "text": "4.1 Eingebettete Programhilfe\nFür die Verwendung des IRTlib Editors ist eine Programmhilfe direkt in die Anwendung integriert, welche über das kleine ?-Symbol oben rechts eingeblendet werden kann.\n\n\n\n\n\n\n\nEmbedded Help\n\n\n\nDie Inhalte dieser Hilfe-Seiten aus dem IRTlib Editor sind in diese IRTlib Dokumentation integriert und werden immer in diesem Rahmen mit der überschrift Embedded Help dargestellt."
  },
  {
    "objectID": "preparation-studies.html",
    "href": "preparation-studies.html",
    "title": "4  Vorbereitung: Studien",
    "section": "",
    "text": "5 Vorbereitung: Studien\nKonfigurationen die mit dem IRTlib-Editor erstellt werden, werden in sogenannten Studien zusammengefasst. Eine Studie soll die Assessmentinhalte zusammenfassen, welche in einer Erhebung oder Sitzung administriert werden."
  },
  {
    "objectID": "preparation-studies.html#studienverwaltung-1",
    "href": "preparation-studies.html#studienverwaltung-1",
    "title": "4  Vorbereitung: Studien",
    "section": "5.1 Studienverwaltung",
    "text": "5.1 Studienverwaltung\nNach dem Start des IRTlib-Editors wird die Ansicht Studien angezeigt. In dieser Ansicht ist der erste Schritt zur Vorbereitung einer neuen Konfiguration das Hinzufügen einer neuen Studie:\n\nDie erstellten Studien erscheinen als Karten in der Ansicht Studien. Beachten Sie, dass die Reihenfolge, in der die Studien in der Studienansicht angezeigt werden, keine Rolle spielt.\nEine detaillierte Anleitung zur Erstellung einer Studie findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n5.1.1 Studien Anlegen\nMit dem IRTLib Editor werden Konfigurationen für Studien erstellt, welche dann in einem IRTLib Player zur Durchführung computerbasierter Assessments verwendet werden können.\n\n5.1.1.1 Wie geht’s los?\nUm mit der Konfiguration einer Studie zu beginnen, klicken Sie auf das Plus-Icon unten rechts:\n\n\n\n\n\nDanach geben Sie bitte in dem Dialog Neue Studie erstellen eine Bezeichnung und optional eine Beschreibung ein.\nAchten Sie darauf, dass für die Bezeichnung nur Buchstaben (Groß und Kleinschreibung), Ziffer und ein _ erlaubt sind.\n\n\n\n\n\nKlicken Sie anschließend auf Speichern.\nBei Bedarf können Sie über das folgende Icon einer Studie auch ein Bild zuordnen. Dieses Bild wird im IRTLib Editor für diese Studie verwendet:\n\n\n\n\n\n\n\n5.1.1.2 Wie geht’s weiter?\nErstellten Studien werden in der Studienübersicht als Kacheln angezeigt:\n\n\n\n\n\nUm nun mit der Erstellung und Konfiguration einer Studie fortzufahren, klicken Sie auf das kleine Bearbeiten-Icon:\n\n\n\n\n\n\n\n\n5.1.2 Weitere Funktionen und Hinweise\n\nStudie Löschen: Mit dem Papierkorb-Icon können Sie Studien auch wieder löschen. Das Löschen von Studien kann nicht rückgängig gemacht werden:\n\n\n\n\n\n\n\nSprache Wechseln: Über den Menüpunkt Einstellungen gelangen Sie zu dem Punkt Allgemeine Einstellungen, wo sie die Sprache des IRTLib Editors ändern können.\n\n\n\n\n\n\nÜber diesen Punkt erhalten Sie auch Zugriff auf die im IRTLib Editor verfügbaren CBA ItemBuilder Runtimes (Unterstützung für die Verwendung von CBA ItemBuilder-Inhalten, die mit unterschiedlichen Versionen des Programms erstellt wurden)."
  },
  {
    "objectID": "preparation-studies.html#grundlegende-konfigurationen-1",
    "href": "preparation-studies.html#grundlegende-konfigurationen-1",
    "title": "4  Vorbereitung: Studien",
    "section": "5.2 Grundlegende Konfigurationen",
    "text": "5.2 Grundlegende Konfigurationen\nDie Konfigurationen einer bestimmten Studie, einschließlich Versionierung und Veröffentlichung, werden innerhalb von Studien verwaltet (d.h. nach dem Öffnen einer Studie zur Bearbeitung durch Klicken auf das Bearbeitungssymbol am unteren rechten Rand der Karte).\nErstellte Studien, die im IRTlib Editor in der Ansicht Studien angezeigt werden, können zur Bearbeitung geöffnet werden.\n\nDetaillierte Informationen zu der Grundkonfiguration einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n5.2.1 Einstellungen zur Studie\n\nBezeichnung: Wie soll die Studie benannt werden? Achten Sie darauf, dass für die Bezeichnung nur Buchstaben (Groß- und Kleinschreibung), Ziffer und ein _ erlaubt sind.\nBeschreibung: Um eine ausführliche Beschreibung der Studie hinterlegen zu können, ist dieses optionle Feld vorgesehen. Hier können auch Sonderzeichen und Umlaute usw. eingegeben werden.\nRouting für Erhebungsteile aktivieren: Studien bestehen aus einem oder mehreren Erhebungsteilen. Die Erhebungsteile werden per Default als lineare Abfolge administriert. Wenn die Option Routing für Erhebungsteile aktivieren ausgewählt ist, kann die Reihenfolge der Erhebungsteile mit einem Blockly-basierten Routing definiert werden. Dadurch sind dynamische Abfolgen von Erhebungsteilen möglich, wobei auch Aufrufparameter der Studie bspw. für die Zuordnung von unterschiedlichen Reihenfolgen genutzt werden können.\nBildschirmgröße überprüfen: In Erhebungen, bei denen die Bildschirmgröße nicht bekannt ist, kann mit dieser Option ein Größenvergleich von Objekten (EC-Karte, Banknote, Personalausweis) mit Darstellungen auf dem Bildschirm vorgenommen werden.\n\n\nDie Geräteprüfung erfolgt mit folgendem Dialog:\n\n\n\n\n\nWenn die Option Passende Bildschirmgröße erzwingen (im Abschnitt Anzeige) nicht aktiviert ist, dann kann die Testbearbeitung dennoch begonnen werden. Es wird, wenn die Auflösung zu klein ist, folgender Dialog angezeigt:\n\n\n\n\n\nHinweis: Diese Option ist zur Zeit nicht weiter konfigurierbar.\n\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#zugang-zu-studien-login-1",
    "href": "preparation-studies.html#zugang-zu-studien-login-1",
    "title": "4  Vorbereitung: Studien",
    "section": "5.3 Zugang zu Studien (Login)",
    "text": "5.3 Zugang zu Studien (Login)\nDie IRTlib Software unterstützt verschiedene Wege, wie sich Personen (Testteilnehmer, Befragte, …) für ein Assessment Authentifizieren können. Die Konfiguratinen umfassen zwei Aspekte:\n\nLogin-Modus: Wird ein Zugang benötigt (Login, Login+Passwort, Passphrases/Token) oder nicht? Und wenn Zugangsdaten benötigt werden, was sind gültige Werge?\nLoginquelle: Wie wird die Login-Information abgefragt (direkte Eingabe auf der Plattform, CBA ItemBuilder Item, ….) oder übergeben (Login-Parameter oder Aufruf-Parameter)?\n\nDetaillierte Informationen zu der Konfiguration der Anmeldung einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n5.3.1 Konfiguration der Anmeldung\nIm Abschnitt Login kann konfiguriert werden, wie Testteilnehmer, die ein Assessment starten (entweder durch Aufruf eines Links in einem Browser der auf den Online-IRTlib-Player verweist oder durch Start des Offline-IRTlib-Players), identifiziert oder authentifiziert werden sollen.\n\nLogin-Modus: Die IRTlib-Software unterstützt verschiedene Login-Modi.\n\nZufälliger Inditifikator: Wenn eine Sitzung zum ersten Mal gestartet wird, wird in diesem Login-Modus ein Identifikator generiert. Diese zufällige, aber eindeutige Zeichenkette (eine sogenannte UUID, d.h. ein Universally Unique Identifier) wird als Personenidentifikator in allen Daten (d.h. Ergebnisdaten) und allen anderen gespeicherten Daten (z.B. Log-Daten/Trace-Daten, Snapshot-Daten, etc.) verwendet.\nBenutzername: Wenn von den Testteilnehmern erwartet wird, dass sie sich durch eine eindeutige Zeichenfolge identifizieren (z.B. eine Zahl oder ein Text, der als Zugangskennung verwendet wird), kann eine Studie mit dem Login-Modus Benutzername konfiguriert werden. Der Zugang zum Assessment ist dann nur möglich, wennd die als Benutzername eingegebene Zeichenkette gültig ist. Die zugrundeliegende Idee ist, dass die Studienkonfiguration mit einer Liste gültiger Benutzernamen geladen wird und dass ein Testteilnehmer einen gültigen Benutzernamen eingeben muss, bevor er oder sie das Assessment starten kann. Nur authentifizierte Testteilnehmer können auf die als Studie definierten Assessmentinhalte zugreifen und die Aufgaben bzw. Fragen beantworten.\nBenutzername und Passwort: Wenn in einer Studie nicht nur gültige Benutzernamen, sondern ein Passwort zur Authentifizierung der Testpersonen verwendet werden sollen, ermöglicht der Login-Modus Benutzername und Passwort eine Eingabe von Benutzernamen und Passwort. Analog zu Benutzername müssen dann beide Informationen in der Studienkonfiguration hinterlegt sein.\nZugriffstoken: Wenn in der Studienkonfiguration die gültigen Benutzernamen nicht gespeichert werden sollen, kann die Option Zugriffstoken verwendet werden. Jedes Token, das einem definierten Schema entspricht, wird dann akzeptiert und als Identifikator für die Testteilnehmer verwendet.\n\nSpeicher für Sessiondaten: Bei Onlineauslieferungen kann nach einer Unterbrechung ein Assessment forgesetzt werden. Diese Funktionalität wird bspw. auch benötigt, wenn im Browser die Seite neu geladen wird (bspw. durch Erzwingen eines Reload/F5, oder durch Schließen und erneutes Aufrufen der URL). Um sicherzustellen, dass Sitzungen, die von derselben Person (d.h. vom selben Browser) stammen, auch fortgesetzt werden können, kann die Software so konfiguriert werden, dass der Identifikator im Client gespeichert wird.\nGültige Werte: Die IRTlib-Software bietet für die Login-Modu Benutzername, Benutzername + Passwort und Zugriffstoken folgende Mechanismen zur Validierung von Anmeldeinformationen:\n\nListe: Eine Liste gültiger Berechtigungen (Benutzername oder Benutzername und Passwort, je nach Konfiguration des Login-Modus) kann als Teil der Studienkonfiguration definiert werden. Die Informationen können entweder im IRTlib-Editor bearbeitet oder aus einer CSV-Datei importiert werden. Definierte Werte können auch als CSV-Datei exportiert werden.\nCode zur Prüfung: Es kann eine Blockly-Funktion angegeben werden, welche Wahr zurückmeldet, wenn die übergebenen Anmeldedaten gültig sind (sonst Falsch).\n\nGruppenlogin: Je nach Login-Modus dienen Benutzername oder Zugriffstoken als Personenidentifikator. Wenn die Option Gruppenanmeldung aktiviert wird, dann werden diese übergebenen Anmeldedaten zur Authentifizierung verwendet, um den Testteilnehmer als Mitglied einer Gruppe zu identifizieren (d. h. nur Testteilnehmer, die den Benutzernamen kennen, können sich als Teil der Gruppe authentifizieren). Innerhalb der Gruppe wird dann ein zusätzlicher Zufallsidentifikator generiert, um verschiedene Personen aus einer Gruppe zu unterscheiden.\nLoginquelle: Die IRTlib-Software unterstützt verschiedenen möglichen Optionen, wie für Anmeldeinformationen bereitgestellt werden können.\n\nPlattform: Ein Anmeldedialog wird vom IRTlib-Player (d.h. der Plattform) angezeigt. Die Überschrift zur Eingabe der Zugangsdaten, die Beschriftung der Eingabe für Benutzernamen und Passwort, die Beschriftung ddes Weiter-Buttons, dein Begrüßungs- und ein Instruktionstext sowie ein Fehlertextbei fehlgeschlagenen Login-Versuchen können konfiguriert werden.\nParameter: Gültige Anmeldedaten für Testteilnehmer können auch über die Befehlszeile (d.h. Parameter beim Aufruf der Offline-Version des IRTlib Players) oder über URL-Parameter (d.h. Parameter beim Aufruf der Studie über einen Link auf eine Online-Version des IRTlib Players) bereitgestellt werden. In diesem Fall wird kein Anmeldedialog oder Loginitem angezeigt.\nItem: Alternativ zu einem Dialog des IRlLib-Players kann auch ein CBA ItemBuilder-Task konfiguriert werden, der als Login-Eingabemaske dient. Innerhalb des Items wird ein sogenannter ExternalPageFrame verwendet, um zur Validierung einer Eingabe einen bestimmten JavaScript-Befehl an den IRlLib-Player zu senden (ein Beispiel finden Sie hier).\n\n\n\n\nDas Login Item muss als CBA ItemBuilder Projektdatei für die konfigurierte Laufzeitumgebung (Runtime) verfügbar sein und der Studienkonfiguration hinzugefügt werden. Um ein Login Item zur Studienkonfiguration hinzuzufügen, kann der integrierte Importdialog verwendet werden. Mehr Informationen zum Importieren von CBA ItemBuilder-Projekten findet sich in der Hilfe zum Abschnitt Items eines Erhebungsteils.\n\n\n\nZusätzliche Parameter: Neben der Authentifizierung von Testteilnehmern können die Anmeldeinformationen in der IRTlib-Software auch als zusätzlicher Parameter hinterlegt werden, die dann bspw. in der Ablaufsteuerung verwendet werden können.\n\nParameter für Dateinamen: Der RawDataPath (d.h. der relative Pfad unter dem der Offline-IRTlib-Player die Ergebnisdaten speichert) und der MonitoringFile (d.h. der Name der Datei in welcher der Offline-IRTlib-Player Informationen fürs Studienmonitoring schreibt) können als Teil der Anmeldedaten konfiguriert werden.\nBlockly-Variablen: Zusätzliche Parameter können auch als sogenannte Preload-Variablen mit den Anmeldeinformationen hinterlegt werde.\n\n\n\n\n\nTable 5.1: Zusammenfassung der Optionen, die als Konfiguration der Anmeldung kombiniert werden können\n\n\n\n\n\n\n\n\n\n\nLogin Modus\nSpeicher für Sessiondaten\nGruppenlogin\nGültige Werte\nLoginquelle\nZusätzliche Parameter\n\n\n\n\nZufälliger Inditifikator\nja\nnein\nnein\nkeine\nnein\n\n\nBenutzername\nja\nja\nListe oder Code\nPlattform, Item + Parameter\nWerte oder Parameter\n\n\nBenutzername und Passwort\nja\nja\nListe oder Code\nPlattform, Item + Parameter\nWerte oder Parameter\n\n\nZugriffstoken\nja\nja\nSchema oder Code\nPlattform, Item + Parameter\nParameter"
  },
  {
    "objectID": "preparation-studies.html#anzeige-von-assessment-inhalten-1",
    "href": "preparation-studies.html#anzeige-von-assessment-inhalten-1",
    "title": "4  Vorbereitung: Studien",
    "section": "5.4 Anzeige von Assessment-Inhalten",
    "text": "5.4 Anzeige von Assessment-Inhalten\nStudien können festlegen, wie der CBA ItemBuilder-Inhalt dargestellt werden soll. Die Einstellungen im Aschnitt Anzeige können sich auf die Skalierung und die Ausrichtung der Inhalte sowie auf das Verhalten der IRTlib Player-Anwendung beziehen.\nDetaillierte Informationen zu der Konfiguration der Anzeige einer Studie finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n5.4.1 Anzeigeeinstellungen\nFür die Konfiguration der Anzeige stehen ausgewählte Optionen zur Verfügung, die sich auf die Darstellung der Assessmentinhalte und die Verwendung von CBA ItemBuilder-Inhalten beziehen, welche mit einem festgelegten Seitenverhältnis (Breite und Höhe) erstellt werden.\n\n5.4.1.1 Fenstermodus\nIn der Auswahl Fenstermodus kann konfiguriert werden, ob ein zusätzliches Fenster im IRTlib Player angezeigt wird. Die Konfiguration wird je nach Umgebung unterschiedlich umgesetzt:\n\nWindow: In diesem Fenstermodus wird im Offline-IRTlib Player ein reguläres Programmfenster verwendet, im Online-IRTlib Player wird der Assessmentinhalt im normalen Browserbereich angezeigt, und die Adressleiste und die Navigationsschaltflächen des Browsers sind in diesem Modus sichtbar.\n\n\n\n\n\nVollbild: Der Offline-IRTlib Player startet direkt im Vollbildmodus, wenn diese Option konfiguriert ist. Damit verbunden ist auch ein Kiosk-Modus, d.h. der Zugriff auf andere Programme und das (versehentliche) Beenden des Programms ist nur über den Task Manager möglich. Soll die Möglichkeit zum Beenden der Testung bspw. für einen Testleiter möglich sein, muss ein Testleitermenü konfiguriert sein.\n\n\nDer Online-IRlLib Player kann Assessmentinhalte auch im Vollbildmodus an, wenn diese Option gewählt ist. Wird der Vollbildmodus im Browser verlassen, wird dann der Assessmentinhalt ausgeblendet. Da automatisiert nicht in einem Browser in den Vollbildmodus gewechselt werden kann, sieht die Zielperson zunächst folgende Nachricht der Plattform:\n\n\n\n\n\nDurch klick auf den Button Vollbild Aktivieren wird der Vollbildmodus gestartet und der Assessmentinhalt dann ohne Fensterrahmen und Navigationsflächen des Browsers dargestellt. Für kurze Zeit wird dann von den Browser typischerweise ein Hinweis eingeblendet dass mit Escder Vollbildmodus wieder beendet werden kann.\n\n\n\n\n\nBeachten Sie, dass diese Funktion nur in Browsern zur Verfügung steht, die den Vollbildmodus unterstützen (insbesondere auf älteren mobilen Geräten wird der Vollbildmodus nicht vollständig unterstützt; siehe für Details z.B. auf caniuse.com).\n\n\nVollbild, wenn unterstützt: In diesem Modus wird das Assessment im Online-IRTlib Player nur dann im im Vollbildmodus angezeigt, wenn der Browser den Vollbildmodus unterstützt. Der Inhalt des computerbasierten Assessments wird jedoch im Fenstermodus angezeigt, wenn eine Studie online bereitgestellt wird und ein Browser verwendet wird, der den Vollbildmodus nicht unterstützt. Für den IRlLib Player offline ist diese Konfiguration identisch mit Vollbild.\n\n\n\n\n\nDebug: Dieser Modus ermöglicht während der Testausführung den Zugriff auf die Entwicklerwerkzeuge des Browsers, die für die Fehlersuche von Softwareentwicklern vorgesehen sind.\n\n\nWennd der Offline-IRTlib Player mit einer Studie gestartet wird, welche als Festermodus den Eintrag Debug konfiguriert hat, dann lassen sich über die rechte Maustaste während der Aufgabenpräsentation die sogenannten Entwickertools (DevTools) abrufen.\n\n\n\n\n\n\n\n5.4.2 Skalierung und Ausrichtung\nAssessmentinhalte, die mit dem CBA ItemBuilder erstellt werden, werden für eine konkrete Größe in Pixeln (Breite mal Höhe) erstellt. Für die Darstellung auf Geräten mit unterschiedlichen Bildschirmgröße und Bildschirmauflösungen können die Inhalte dann skaliert werden. Im CBA ItemBuilder stehen deshalb in der Preview die Optione unter Scaling Options zur Verfügung:\n\n\n\nIm IRTlib Editor können analoge Einstellung vorgenommen werden.\n\nSkalierung: Einstellung wie Inhalte angepasst werden sollen, wenn verfügbarer Platz und Größe der Items abweichen (Scaling Mode).\n\nkeine: Die Inhalte werden ohne Anpassung an die verfügbare Fenster- bzw. Bildschirmgröße angezeigt (entspricht None).\nhochskalieren: Inhalte werden vergrößert, damit der verfügbare Platz ausgenutzt wird (entspricht Up).\nrunterskalieren: Inhalte werden verkleinert, damit sie auf den Bildschirm/ins Fenster passen (entspricht Down).\nFenstergröße: Inhalte werden vergrößert und verkleinert (entspricht Both).\n\nHorizontale Ausrichtung: Die Optionen zentriert / links / rechts werden genutzt um Iteminhalte horizontal auszurichten, wenn die Breite von Fenster oder Bildschirm größer ist als die Breite des Inhalts.\nVertikale Ausrichtung: Die Optionen zentriert / oben / unten werden genutzt um Iteminhalte vertikal auszurichten, wenn die Höhe von Fenster oder Bildschirm größer ist als die Höhe des Inhalts.\n\n\n5.4.2.1 Weitere Einstellungen\n\nPassende Bildschirmgröße erzwingen: Wenn bei Skalierung nicht runterskalieren oder Fenstergröße ausgewählt ist, kann über diese Option erzwungen werden, dass man nur dann mit der Aufgabenbearbeitung starten kann, wenn die verfügbare Größe des Fensters bzw. Bildschirms größer ist als die benötigte Breite/Höhe der Items. Andernfalls wird folgende Nachricht angezeigt:\n\n\n\n\n\nHinweis: Die Einstellungen zur Anzeige beziehen sich auf alle Erhebungsteile innerhalb einer Studie. Werden in einem IRTlib-Player mehrere Studien konfiguriert, müssen die Einstellungen zueinander passen, d.h. es ist nicht mögliche mit einer Instanz eines IRTlib-Players gleichzeitig eine Studie im Fenstermodus: Fenster oder im Fenstermodus: Vollbild zu adminsitrieren.\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#menü-für-testadministratoren-1",
    "href": "preparation-studies.html#menü-für-testadministratoren-1",
    "title": "4  Vorbereitung: Studien",
    "section": "5.5 Menü für Testadministratoren",
    "text": "5.5 Menü für Testadministratoren\nWenn die Durchführung von Assessments begleitet durch Testleiter oder Interviewer erfolgt, können Funktionen passwortgeschützt für Testleiter definiert werden.\n\n\n\n\n\n\nWarning\n\n\n\nAuch wenn Sie die Funktionalität eines Testadministratormenüs für die Durchführung Ihrer Datenerfassung nicht benötigen, sollten Sie dennoch ein Testadministratormenü definieren, wenn Sie planen, mit dem IRTlib Player Daten offline zu erfassen. Nur so können Sie sicherstellen, dass Sie die Anwendung im Falle unvorhergesehener Ereignisse ohne den Task-Manager (und ohne möglichen Datenverlust) beenden können.\n\n\nDetaillierte Informationen zu der Konfiguration des Testleitermenüs finden sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n5.5.1 Konzept eines Testleitermenüs (Menü für Testadministratoren)\nDie Konfiguration des Menü für Testadministratoren erfolgt in zwei Schritten. Zunächst muss eine Tastenkombination definiert werden, mit der das Testmanager-Menü aufgerufen werden kann. Wird diese Tastenkombination während der Testbearbeitung gedrückt, erscheint ein Fenster zur Passworteingabe. Testadministratoren geben das (nur) ihnen bekannte Passwort ein und erhalten so Zugriff auf ausgewählte Funktionen. Zu diesem Zweck müssen in einem zweiten Schritt eine oder mehrere Rollen im IRTlib Editor definiert werden.\n\n5.5.1.1 Zugriff für Testleitung\nZunächst muss eine Tastenkombination definiert werden.\n\nTaste: Die Konfiguration der Tastenkombination für das Testleitermenü erfordert zunächst die Definition einer Taste. Um eine Taste festzulegen klickt man in das Feld und drückt die Taste, welche für das Testleitermenü verwendet werden soll.\nModifikatoren (Alt, Strg und Shift): Für eine Taste kann dann zusätzlich festgelegt werden, ob eine oder mehrere Modifkatoren gedrück werden müssen damit das Testleitermenü geöffnet wird.\n\nBeispiel:\n\nDie folgende Konfiguration definiert die Tastenkombination Strg + Shift+ X:\n\n\n\n\nDie definierte Tastenkombination öffnet nur die Option zur Eingabe eines Passowrt für Testleiter während der Testbearbeitung im IRTlib Player. Um die Funktion zu nutzen ist ein Passwot notwendig, welches zusammen mit einer Rolle im zweiten Schritt definiert wird.\n\n\n5.5.1.2 Rollen\nNach dem Aufruf der definierten Tastenkombination wird während der Testbearbeitung die Aufforderung zur Eingabe eines Passworts angezeigt:\n\nWelche Funktionen nun wirklich zugreifbar sind wird dadurch gesteuert, welches Passwort eingegeben wird. Nur wenn ein gültige Passwort bekannt ist, können Funktionen der Testleitung aufgerufen werden.\nBeispiel:\n\nIn der folgenden Konfiguration können Testleiter mit diesem Passwort zur nächaten Aufgaben springen (Weiter) oder die Anwendung beenden (Sitzung beenden):\n\n\n\n\n\nUm eine Rolle zu definieren, muss zunächst das +-Symbol unten rechts geklickt werden. Danach kann der Name einer Rolle und ein Passwort definiert:\n\n\n\n\n\nDer Name der Rolle dient nur der Dokumentation. Entscheidend für die Funktionalität ist die Vergabe eines eindeutigen Passwortes und die Auswahl einer oder mehrerer der folgenden Funktionen:\n\n\nAufgabe zurück: Ermöglicht die Navigation zur vorherigen Aufgabe.\nAufgabe vor: Ermöglicht die Navigation zur nächsten Aufgabe an.\nItemliste abbrechen: Ermöglicht die Abarbeitung der aktuellen Itemliste abzubrechen. Diese Option ist insbesondere sinnvoll, wenn in einem Erhebungsteil die Option Routing aktiviert ist und die Definition von CBA ItemBuilder Tasks mit Hilfe von Itemlisten umgesetzt ist.\n\nErhebungsteil abbrechen: Ermöglicht den Abbruch des aktuellen Erhebungsteils.\nSitzung beenden: Ermöglicht das Beenden der aktuellen Sitzung.\nLautstärkeregelung: Ermöglicht die Änderung der Lautstärke.\n\nDie Audiodatei, welche zur Kontrolle der Audioausgabe abgespielt wird nachdem die Lautstärke verändert wurde, kann im Abschnitt Audio für Soundtest eingefügt und in der Studienkonfiguration hinterlegt werden.\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-studies.html#abschluss-von-erhebungen-1",
    "href": "preparation-studies.html#abschluss-von-erhebungen-1",
    "title": "4  Vorbereitung: Studien",
    "section": "5.6 Abschluss von Erhebungen",
    "text": "5.6 Abschluss von Erhebungen\nFür die Integration von Assessments in externe Abläufe besteht die Möglichkeit zu konfiguriere, wie nach der Bearbeitung der Assessmentinhalte in einer Session vorgegangen werden soll, was also am Session-Ende geschehen wird.\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n5.6.1 Session und Session-Ende\nEine Session bezieht sich auf die Durchführung einer Erhebung mit einer Person zu einem bestimmten Zeitpunkt. Der in einer Session angezeigte Inhalt entspricht einer konfigurierten Studie, wie sie im IRTlib Editor erstellt werden kann. Nachdem alle in einer Studie definierten Erhebungsteile durchgeführt worden sind, wird das Session-Ende erreicht.\n\n5.6.1.1 Konfiguration des Session-Endes\nWas nach einem Session-Ende erfolgt, d.h. wie sich der IRTlib Players am Ende einer Sitzung verhält, kann mit den folgenden Optionen festgelegt werden:\n\nNeue Session starten: Es wird eine neue Sitzung gestartet. Deses Verhalten ist nicht sinnvoll, wenn die Anmeldedaten übergeben werde (entweder als Startup-Parameter oder als URL-Parameter).\nEndtext anzeigen: Wenn diese Option ausgewählt ist, zeigt die Plattform den konfigurierten Text an. Der Text kann als Nachricht auf Endseite konfiguirert werden.\nEnd-Item anzeigen: Analog zu einem Login-Item kann auch ein CBA ItemBuilder-Item definiert werden, das am Ende einer Sitzung angezeigt wird.\n\n\nDas End-Item kann schließlich das Beenden des Offline-IRTlib Players anstoßen. Ein Beispiel für ein End-Item mit dem notwendigen JavaScript-Aufruf findet sich hier.\n\n\nRedirect to Exit URL (Redirct zu Exit-Url): Bei Online-Lieferungen mit dem IRTlib Player ist es möglich, auf eine URL umzuleiten. Die Weiterleitungs-URL kann dann konfiguriert werden.\n\n\n\n5.6.1.2 Weitere Optionen\n\nSession ID kann wiederverwendet werden: Wenn diese Option aktiviert ist, können mehrere Datenerfassungen mit einer Session-ID administriert werden.\n\n\nWenn geänderte Einstellungen erhalten bleiben sollen müssen die Änderungen über das Disketten-Symbol gespeichert werden. Andernfalls kann das Verwerfen-Symbol verwendet werden:"
  },
  {
    "objectID": "preparation-parts.html",
    "href": "preparation-parts.html",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "",
    "text": "6 Vorbereitung: Erhebungsteile\nAssessments, die mit der IRTlib Software administriert werden bestehen aus sogenannten Erehebungsteilen. Nach der Konfiguration einer Studie muss zumindest ein Erhebungsteil angelegt werden."
  },
  {
    "objectID": "preparation-parts.html#erhebungsteilverwaltung-1",
    "href": "preparation-parts.html#erhebungsteilverwaltung-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.1 Erhebungsteilverwaltung",
    "text": "6.1 Erhebungsteilverwaltung\nNach dem Erstellen einer Studie erfolgt in der Ansicht Erhebungsteile als nächster Schritt zur Vorbereitung einer Testauslifierung das Hinzufügen eines neuen Erhebungsteils:\n\nDie erstellten Erhebungsteile erscheinen als Karten in der Ansicht Erhebungsteile. Wenn Studien aus mehreren Erhebunsteilen bestehen, kann für lineare Abläufe die Reihenfolge der Erhebungsteile in der Ansichht Erhebungsteile / Übersicht angepasst werden. Sollen Erhebungsteile in Abhängigkeit von Variablen (z.B. übergebene Preload-Variablen oder andere Blockly-Variablen gesteuert werden, kann alternativ ein Routing zwischen Erhebungsteilen konfiguriert werden.\nEine detaillierte Anleitung zur Erstellung von Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.1.1 Erhebungsteil Anlegen\nMit dem IRTLib Editor werden Konfigurationen für Studien erstellt, welche dann in einem IRTLib Player zur Durchführung computerbasierter Assessments verwendet werden können. Studie bestehen aus einem oder mehreren Erhebungsteilen.\n\n6.1.1.1 Wie geht’s?\nNachdem eine Studie angelegt ist, kann nun über Plus-Icon unten rechts ein Erhebungsteil hinzugefügt werden:\n\n\n\n\n\nDanach geben Sie bitte in dem Dialog Neuen Erhebungsteil erstellen eine Bezeichnung und optional eine Beschreibung ein.\nAchten Sie darauf, dass für die Bezeichnung wieder nur Buchstaben (Groß und Kleinschreibung), Ziffer und ein _ erlaubt sind.\nKlicken Sie anschließend auf Speichern.\n\n\n\n\n\nBei Bedarf können Sie über das folgende Icon einem Erhebungsteil auch ein Bild zuordnen. Dieses Bild wird im IRTLib Editor für diesen Erhebungsteil verwendet:\n\n\n\n\n\n\n\n6.1.1.2 Erhebungsteil Bearbeiten\nErstellten Erhebungsteile werden in der Erhebungsteilübersicht als Kacheln angezeigt:\n\n\n\n\n\n\nUm nun mit der Konfiguration eines Erhebungsteils fortzufahren, klicken Sie auf das kleine Bearbeiten-Icon:\n\n\n\n\n\n\n\nErhebungsteil Löschen: Mit dem Papierkorb-Icon können Sie Erhebungsteile auch wieder löschen. Das Löschen von Erhebungsteilen kann nicht rückgängig gemacht werden:\n\n\n\n\n\n\n\n\n6.1.1.3 Erhebungsteile Sortieren\nWenn in der Konfiguration einer Studie in der Ansicht Info (Abschnitt Übersicht) die Option Routing für Erhebungsteile aktivieren nicht ausgewählt ist, dann werden Erhebungsteile in der Reihenfolge administriert, in welcher sie in der Erhebungsteilverwaltung angezeigt werden.\n\nErhebungsteile Verschieben: Um per drag-and-drop die Reihenfolge von Erhebungsteilen zu verändern, muss zunächst über folgendes Toggle-Icon der Modus Reihenfolge Ändern aktiviert werden:\n\n\n\n\n\n\n\nDanach können die Kacheln in die gewünschte Reihenfolge gebracht werden. Der Modus Reihenfolge Ändern wird beendet, wenn das Disketten-Symbol angeklickt oder die Änderungen verworfen werden:\n\n\n\n\n\n\n\n\n\n\nDie Reihenfolge von Erhebunsteilen kann in der Ansicht Erhebungsteile verändert werden:\n\nVor dem Hinzufügen bzw. Auswählen von CBA ItemBuilder Projekten, sie im Abschnitt Assessmentinhalte (Items) beschrieben, können in der Ansicht Info ausgewählte Eintsellungen konfiguriert werden.\nEine detaillierte Beschreibung der findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.1.2 Grundkonfiguration für Erhebungsteile\n\n6.1.2.1 Bezeichnung und Beschreibung\n\nBezeichnung: Die interne Bezeichnung des Erhebungsteils, welche im IRTlib Editor zur Bearbeitung und zur Definition des Ablaufs angezeigt wird. Bezeichnungen dürfen keine Sonderzeichen, Leerzeichen und Umlaute enthalten und nicht mit einer Ziffer beginnen.\nBeschreibung: Optionale zusätzliche Beschreibung eines Erhebungsteils.\n\n\n\n6.1.2.2 Routing innerhalb von Erhebungsteilen\n\nRouting aktivieren: Die konfigurierten Assessmentinhalte im Abschnitt Items können als lineare Sequenz, d.h. in der konfigurierten Reihenfolge administriert werden. Soll eine davon abweichende Reihenfolge verwendet werden, kann hier die Option Routing aktivieren gewählt werden. Die Reihenfolge kann dann im Abschnitt Routing als visuelles Programm spezifziert werden.\n\n\n\n6.1.2.3 Weitere Einstellungen\n\nSnapshot verwenden: Damit CBA ItemBuilder Tasks mehrfach besucht werden können, wird deren Inhalt beim Verlassen des Items in sogenannten Snapshots gespeichert. Snapshots können auch dazu verwendet werden, um die Inhalte eines CBA ItemBuilder Tasks zu einem späteren Zeitpunkt erneut darzustellen. Diese Option sollte nur dann deaktiviert werden, wenn es einen gewichtigen Grund gibt und die Konsequenzen (d.h. die dann nicht gespeicherten Snapshot-Daten) sorgfältig bedacht wurden.\n\n\n\n\n\nDas Hinzufügen und Verwalten von CBA ItemBuilder Projekte innerhalb des IRTlib-Editors erfolgt im Abschnitt Items.\n\n\n\n\n\n\nHinweis zur Zeitbegrenzung\n\n\n\n\n\nFür die Administration von zeitbegrenzten Erhebungsteilen kann unter Bearbeitungszeit ein Zeitlimit definiert werden. Wenn die Option Bearbeitungszeit begrenzen aktiviert ist, können ein oder mehere Tasks definiert werden, welche bei einem Timeout angezeigt werden. Außerdem können im Abschnitt Vorspann-Items(s) und Nachspann-Item(s) Inhalte definiert werden, welche vor bzw. nach dem zeitbegrenzten Teil administriert werden."
  },
  {
    "objectID": "preparation-parts.html#assessmentinhalte-items-einfügen-1",
    "href": "preparation-parts.html#assessmentinhalte-items-einfügen-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.2 Assessmentinhalte (Items) Einfügen",
    "text": "6.2 Assessmentinhalte (Items) Einfügen\nDie Inhalte, welche in einem Erhebungsteil vom Typ CBA ItemBuilder verwendet werden sollen, werden über den IRTlib Editor in die Konfiguration übernommen, d.h. die mit dem IRTlib Editor erstellte Konfiguration enthält auch die CBA ItemBuilder Project Files. Für das Hinzufügen oder Aktualisierung von CBA ItemBuilder Projekten steht die Ansicht Items zur Verfügung.\nEine detaillierte Beschreibung der findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.2.1 Items Konfigurieren\n\n6.2.1.1 Grundfunktionen\n\nImportieren von CBA ItemBuilder-Projektdateien: Der IRTlib Editor pflegt eine Liste bekannter Items, zu denen CBA ItemBuilder-Projekdateien die noch nicht bekannt sind hinzugefügt werden können. Um eine Projektdatei hinzuzufügen, öffnet man zunächst mit dem +-Symbol die Liste bekannter Items und wählt dann die Schaltfläche Imporiteren aus.\n\n\n\n\n\n\n\n\n\n\n\n\nAktualisieren bereits importiereter CBA ItemBuilder-Projektdateien: Wenn eine CBA ItemBuilder-Projektdatei bereits in der Liste der bekannten Items enthalten ist, können die Projektdateien aktualisiert werden. Sie werden dann nicht zusätzlich zur Liste der bekannten Items hinzugefügt, sondern die bereits vorhandene CBA ItemBuilder-Projektdatei wird in einer neueren Version hinterlegt. Um ein Item zu aktualisieren muss es zunächst in der Liste der Items eines Erhebungsteils ausgewählt werden. Dadurch wird das Aktualisieren-Symbol aktiv. In dem sich dann öffnenenden Dialog Item aktualisieren kann über die Schaltfläche Imporiteren eine aktualisierte Version einer CBA ItemBuilder-Projektdatei hinzugefügt werden.\n\n\n\n\n\n\n\n\n\n\n\n\nVorschau von CBA ItemBuilder-Projektdateien: Die in einem Erhebungsteil hinzugefügten Items können direkt im IRTlib Editor in einer eingebauten Preview-Funktion angesehen werden. Um ein Item zu anzusehen muss es zunächst in der Liste der Items eines Erhebungsteils ausgewählt werden. Danach kann die Vorschau über das Augen-Symbol aufgerufen werden:\n\n\n\n\n\n\n\nExportieren von CBA ItemBuilder-Projektdateien: CBA ItemBuilder-Projektdateien die in den IRTlib Editor importiert wurden, können zur weiteren Bearbeitung mit dem CBA ItemBuilder exportiert werden. Um ein ausgewhähltes Item aus der Liste der Items eines Erhebungsteils zu exportieren, kann das Download-Symbol augerufen werden:\n\n\n\n\n\n\n\nLöschen von CBA ItemBuilder-Projektdateien: Die in Erhebungsteilen eingefügten Items können aus einem Erhebungsteil wieder gelöscht werden. Durch das Löschen-Symbol wird das Item aus einem Erhebungsteil entfernt, es verbleibt aber in der Liste bekannter Items:\n\n\n\n\n\n\n\nHinweis: Es ist bisher nicht möglich, CBA ItemBuilder-Projektdateien aus der Liste bekannter Items wieder zu löschen. Diese Funktionalität ist nicht notwendig, da CBA ItemBuilder-Projektdateien vom IRTlib-Editor nur dann in die Konfiguration einer Studie übernommen werden, wenn Tasks aus einer CBA ItemBuilder-Projektdatei in einem Erhebungsteil verwendet werden.\n\n\n\n6.2.1.2 Sortieren von Items (Linearer Ablauf)\n\nSortieren CBA ItemBuilder-Projektdateien: Wenn für einen Erhebungsteil die Option Routing aktivieren nicht ausgewählt ist, dann kann in der Liste der Items die Reihenfolge über die folgenden Schaltfläche angepasst werden:\n\n\n\n\n\n\n\nDie Items dann exakt so administriert, wie sie für einen Erhebungsteil in dieser Liste aufgeführt sind.\n\nHinweis: Änderungen an der Sicht Items müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  },
  {
    "objectID": "preparation-parts.html#bearbeitungszeit-1",
    "href": "preparation-parts.html#bearbeitungszeit-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.3 Bearbeitungszeit",
    "text": "6.3 Bearbeitungszeit\nWenn die Administration einer linearen Folge von CBA ItemBuilder Tasks mit einer begrenzten Bearbeitungszeit administriert werden sollen, lässt sich dies durch Definieren einer maximalen Bearbeitungszeit (in Sekunden) umsetzen. Soll bspw. ein Testinhalt maximal 28 min. administriert werden, wird als Bearbeitungszeit eine Zeit von 1680 Sekunden definiert. Die Nachricht, welche beim Ablaufen der Bearbeitungszeit angezeigt werden soll, lässt sich als ein (oder mehrere) CBA ItemBuilder Tasks definieren.\nEine detaillierte Beschreibung der findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.3.1 Zeitbegrenzung Definieren\nErhebungsteile ohne Routing können auf einfache Weise einen zeitbegrenzten Abschnitt enthalten. Dafür wird in der Sicht Bearbeitungszeit die Option Bearbeitungszeit begrenzen aktiviert und ein Zeitlimit in Sekunden (&gt;0) eingetragen.\nFür eine Zeitbegrenzung werden vier Gruppen von CBA ItemBuilder Tasks unterschieden, die an unterschiedlichen Stellen im IRTlib Editor definiert werden. In der Sicht Items (analog zu nicht zeitbegrenzten Erhebungsteilen) werden die Items für welche die Zeitbegrenzug gelten soll definiert:\n\nItems: Items die so lange angezeigt werden, bis das Zeitlimit erreicht wurde.\n\nIn der Ansicht Bearbeitungszeit kann zusätzlich definiert werden:\n\nTimeout-Items: Items die nur angezeigt werden, wenn die zeitbegrenzten Items nicht in der begrenzten Bearbeitungszeit abgeschlossen wurden.\n\nAls einzelne Sichten der Konfiguration von Erhebungsteile können schließlich folgende Tasks definiert werden:\n\nVorspann-Items: Items die vor dem zeitbegrenzten Abschnitt angezeigt werden.\nNachspann-Items: Items die nach dem zeitbegrenzten Abschnitt angezeigt werden.\n\nIn allen genannten Dialogen stehen die Symbole für folgende Operationen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Komplexere Designs mit ggf. mehreren Timern lassen sich mit dem IRTlib Editor umsetzen, wenn die Option Routing aktivieren in der Übersichtsansicht zu einem Erhebungsteil aktiviert ist.\nHinweis: Änderungen an der Sicht Bearbeitungszeit müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVorspann-/Nachspann-Items\n\n\n\nEin zentrales Konzept für die Umsetzung von Zeitbegrenzungen in der IRTlib Software ist die Trennung der zeitbegrenzten Items, und zusätzlicher Assessmentinhalte, die vor oder nach dem zeitbegrenzten Teil administriert werden.\n\n\n\nItems die nach einem potentiell Zeitbegrenzten Abschnitt eines Erhebugnsteils administriert werde, werden als Nachspann-Items bezeichnet.\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.3.2 Items nach einer Zeitebgrenzung\nDer Erhebungsteile erlauben die Definition von Items in verschiedenen Abschnitten. Items in diesem Abschnitt Nachspann-Item(s) werden nach den Items angezeigt, welche im Abschnitt Items eines Erhebungsteils definiert sind. Die Trennung in Nachspann-Item(s) und Items ist besonders sinnvoll, wenn unter Bearbeitungszeit eine Zeitbegrenzung aktiviert ist.\nUm Items in dem Abschnitt Nachspann-Item(s) zu konfigurieren stehen die folgenden Optionen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Änderungen an der Sicht Nachspann-Item(s) müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:\n\n\n\n\n\n\n\n\n\nItems die vor einem potentiell Zeitbegrenzten Abschnitt eines Erhebugnsteils administriert werde, werden als Vorspann-Items bezeichnet.\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.3.3 Items vor einer Zeitebgrenzung\nDer Erhebungsteile erlauben die Definition von Items in verschiedenen Abschnitten. Items in diesem Abschnitt Vorspann-Item(s) werden vor den Items angezeigt, welche im Abschnitt Items eines Erhebungsteils definiert sind. Die Trennung in Vorspann-Item(s) und Items ist besonders sinnvoll, wenn unter Bearbeitungszeit eine Zeitbegrenzung aktiviert ist.\nUm Items in dem Abschnitt Vorspann-Item(s) zu konfigurieren stehen die folgenden Optionen zur Verfügung:\n\nHinzufügen: \nAktualisieren: \nVorschau/Preview: \nDownload/Export: \nLöschen: \nSortieren: \n\nHinweis: Änderungen an der Sicht Vorspann-Item(s) müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  },
  {
    "objectID": "preparation-parts.html#variablen-1",
    "href": "preparation-parts.html#variablen-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.4 Variablen",
    "text": "6.4 Variablen\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)"
  },
  {
    "objectID": "preparation-parts.html#codebook-1",
    "href": "preparation-parts.html#codebook-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.5 Codebook",
    "text": "6.5 Codebook\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)"
  },
  {
    "objectID": "preparation-parts.html#itempool-1",
    "href": "preparation-parts.html#itempool-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.6 ItemPool",
    "text": "6.6 ItemPool\n\n\n\n\n\n\nUnder Development\n\n\n\nDiese Funktion ist gerade in Entwicklung.\n\n\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n(Diese Funktionalität ist gerade noch in Entwicklung.)"
  },
  {
    "objectID": "preparation-parts.html#routing-innerhalb-von-erhebungsteilen-3",
    "href": "preparation-parts.html#routing-innerhalb-von-erhebungsteilen-3",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.7 Routing innerhalb von Erhebungsteilen",
    "text": "6.7 Routing innerhalb von Erhebungsteilen\nWenn CBA ItemBuilder-Tasks nicht in einer lineare Abfolge administriert werden sollen, die im Vorhinein festteht und für alle Testpersonen identisch ist, dann kann die Funktion Routing der IRTlib Software verwendet werden.\nEine detaillierte Beschreibung zum Routing innerhalb von Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n\n\n6.7.1 Zusammenfassung zu Routing innerhalb von Erhebungsteilen\nDie Reihenfolge von CBA ItemBuilder-Aufgaben kann hier mit Hilfe von Blockly (also einer Form des visuellen Programmierens) definiert werden. Blockly-basierte Ablaufsteuerung ist verfügbar, wenn bei einem Erhebungsteil die Option Routing aktivieren ausgewählt ist. Die Option ist im Abschnit Info eines Erhebungsteils zu finden. Ist sie aktiviert, enthält der Erhebungsteil den Eintrag Routing.\n\nÜbersicht:\n\nBeipsiele: lineare Ablauf, einfache Testhefte, Ablauf mit Zeitbegrenzung und Booklet-Designs\nKurzanleitung: Allgemeine Hinweis zum Blockly-Editor\nGrundlagen: Nutzung des Blockly-Editor\n\nAnzeigen von Items oder Itemlisten\nDefinition von Zeitbegrenzungen\nÄnderungen am Testleitermenü\n\nVertiefung: Fortgeschrittene Blockly-Verwendung\n\nAblaufsteuerung mit Bedingungen\nAblaufsteuerung mit Schleifen\nOperatoren für Zahlen, Text, Zeiten und Listen.\nVertiefung zu Blockly-Variablen und Blockly-Funktionen\nNutzung von Itemergebnissen in der Ablaufdefinition\nBlockly-Operatoren zum Kodieren fehlender Werte und zum Schreiben von Daten\n\nKommentieren von Blockly-Code\nAnpassung der Darstellung von Blockly-Code\n\n\n\n6.7.1.1 Beispiele\nDie Grundidee zur Verwendung von Blockly für die Defnition von Abläufen in computerbasierten Assessments soll zunächst mit einigen Beispielen illsturiert werden.\n\n\nBeispiel für linearen Ablauf\n\n\nBasierend auf den einem Erhebungsteil hinzugefügten CBA ItemBuilder Tasks in der Ansicht Items entspricht eine lineare Folge der Tasks der folgenden Blockly-Definition:\n\n\n\n\n\nDem Blockly-Element Show Items wird eine Liste der CBA ItemBuilder Tasks übergeben, die mit dem Operator erzeuge Liste mit erstellt wird. Die Liste wird in der dargestellten Reihenfolge abgearbeitet, wobei jeder CBA ItemBuilder Tasks solange dargestellt wird, bis das NEXT_TASK- Command ausgeführt wird.\n\n\nEine äquivalente Formulierung einer linearen Sequenz kann auch mit mehreren Show Items-Blücken erfolgen, wenn keine Zurücknavigation notwendig ist:\n\n\n\n\n\nBeispiel für einfache Testhefte\n\n\nMit Hilfe einer Variable (hier: Booklet) und einer einfachen falls/mache-Bedingung lässt sich daraus nun ein Ablauf definieren, welcher je nach Wert der Variable unterschiedliche Items administriert:\n\n\n\n\n\nDie Items für Start und Ende werden immer administriert, die Tasks 1-3 nur, wenn die Variable Booklet der Wert 0 hat, die Tasks 4 und 5, wenn die Variable Booklet einen von 0 verschiedenen Wert hat.\n\n\nDer identische Ablauf lässt sich alternativ auch unter Verwendung des Blockly-Operators für das Anzeigen von Itemlisten erstellen:\n\n\n\n\n\nBeide Varianten sind bzgl. der Funktionalität völlig äquivalent, die zweite Vorgehensweise mit Listen erlaubt aber die Verwendung der Option Zurücknavigation innerhalb der booklet-spezifischen Tasks.\n\n\nBeispiel für Ablauf mit Zeitbegrenzung\n\n\nUm mit Hilfe der Blockly-Configuration Zeitbegrenzte Abschnitte innerhalb eines Erhebugnsteils umzusetzen, kann die folgende Blockly-Komponente verwendet werden:\n\n\n\n\n\nJeder Ablauf beginnt mit eine nicht zeitbgrenzten Start-Tasks und endet mit einem ebenfalls nicht zeitbegrenzten End-Tasks. Dazwischen läuft eine Zeitbegrenzung für einen Abschnitt mit der Bezeichnung MyFirstTimer, der eine Zeitbegrenzung für 60 Sekunden hat.\n\n\nDie Tasks 1, 2 und 3 werden in dem Abschnitt Runtime code mit einer Zeitbegrenzung angezeigt. Tritt ein Timeout auf, d.h. werden die drei Tasks nicht innerhalb der 60 Sekunden bearbeitet, wird (ebenfalls ohne Zeitbegrenzung) der Task 4 angezeigt.\n\n\nBeispiel für einfaches Booklet-Design mit Zeitbegrenzung\n\n\nBei vielen Items kann die Definition von Booklet Designs, d.h. Taskreihenfolgen mit balancierten Positionen, durch Funktionen bzw. Listen vereinfacht werden.\n\n\nWenn keine Zurücknavigation notwendig ist, können Funktionen für die Definition von Clustern verendet werden:\n\n\n\n\n\nMit Zurücknavigation können die Funktionen Listen von Tasks zurückgeben:\n\n\n\n\n\nWeitere Informationen siehe hier.\n\n\n\n(nach oben)\n\n\n\n6.7.1.2 Hinweise zur Verwendung des Blockly-Editors\nDie Defintion von Abläufen erfolgt in dem visuellen Blockly-Editor. Die Ausführung beginnt mit dem Element, welches am weitesten oben ausgerichtet ist. Wenn nötig, kann der Arbeitsbereich mit der Funktion Aufräumen automatisch ausgerichtet werden. Zum Hinzufügen von Blockly-Operatoren können diese per Drag-and-Drop aus der Palette gezogen werden.\n\n\nLöschen: Zum Löschen von Operatoren können diese auf den Papierkorb gezogen werden. Ausgewählte Blockly-Elemente können auch über die Taste Entf(ernen) gelöscht werden. Alternativ können ausgewählte Blockly-Elemente auch über Kontextmenü gelöscht werden.\nRedo-/Undo: Innerhalb des Blockly-Editor können einzelne Aktionen rückgängig gemacht werden. Dafür kann die Tastenkombination Strg + Z verwendet werden. Mit Strg + Y wird eine Aktion wiederholt. Durch einen Klick in einen leeren Bereich des Blockly-Editors ist der Zugriff auf ein Kontextmenü möglich, welches ebenfalls die Optionen für Rückgängig und Wiederholen bereithält:\n\n\n\n\n\nSpeichern: Anpassungen im Blockly-Editor müssen gespeichert werden. Dafür steht unten rechts das Disketten-Symbol zur Verfügung:\n\n\n\n\n\nSollen die Änderung (insgesamt) verworfen werden, kann unten rechts die das Verwerfen-Symbol verwendet werden.\n\n\nZoom: Die Ansicht im Arbeitsbereich kann mit den Icons + vergrößert und mit - verkleinert werden.\n\n\n\nKontextmenü: Weitere Optionen sind über die rechte Maustaste (Kontextmenü) im Blocky-Editor verfügbar. Um diese Funktionen aufzurufen, muss auf ein Blockly-Element ein Sekundärklick (rechte Maustaste) durchgeführt werden:\n\nKopieren dupliziert das ausgewählte Blockly-Element, inklusive aller verbunder Elemente.\nKommentieren von Blöcken ist möglich.\nBlöcke können deaktiviert/aktiviert werden.\nManche Block-Typen erlauben die Darstellungsform extern/intern zu wechseln.\nBlöcke, welche weitere Blöcke enthalten, können zusammengefalten/entfaltet werden.\nDas Löschen von Blöcken ist auch über das Kontextemü möglich.\n\n\n\n\n\n\n\n\nEinige Blockly-Elemente stellen im Kontextmenü auch einen Eintrag Hilfe zur Vefügung, welcher auf die allgemein zugängliche Blockly-Dokumenten (https://github.com/google/blockly/wiki/) verweist.\n\n\n\n(nach oben)\n\n\n\n\n\n6.7.2 Verwendung von Blockly zur Ablaufsteuerung\nDie Grundfunktionen für die Nutzung der Blockly-Umgebung zur Steuerung von Assessments finden sich im Abschnitt Session.\n\n\n6.7.2.1 Einzelne Items anzeigen\nAuf CBA ItemBuilder-Tasks, die in der Ansicht Items für einen Erhebugnsteil importiert wurden, kann in der Ablaufsteuerung wie in den Beispielen obgen gezeigt mit Hilfe des folgende Blockly-Elements für Tasks zugegriffen werden:\n\nDas Element, welches im Abschnitt Session der Palette des Blockly-Editors zu finden ist, kann durch die Auswahlliste konfiguriert werden. Jedes Blockly-Elements für Tasks kann auf genau einen konkreten Task verweisen, d.h. in der Regel besteht eine Ablaufdefinition aus mehrerer solcher Elemente.\nBlockly-Elemente für Tasks können nicht direkt in den Ablauf eingefügt werden, sonder werden zusammen mit einem Show Item-Element verwendet:\n\nDas Beispiel für einfache Testhefte illustriert, dass Abläufe in der Blockly-Definition häufig durch eine Abfolge von mehreren Show Item-Operatoren definiert werden. Show Item-Operatoren können dabei in Bedingungen und Schleifen, sowohl innerhalb des Hauptablaufs als auch innerhalb von Funktionen eingefügt werden.\n\n\n6.7.2.2 Verwendung von Geltungsbereichen (Scopes)\nMit Hilfe der Blocky-basierten Ablaufsteuerung ist es auch möglich, CBA ItemBuilder-Tasks mehrfach innerhalb eines Ablaufs zu administrieren:\n\nDabe wird beim erneuten Aufruf eines Items der Zustand aus dem letzten Besuch wiederhergestellt, d.h. die Bearbeitung wird fortgesetzt. Sollen Items mehrfach neu, d.h. unbearbeitet vorgelegt werden, kann das automatische wiederherstellen nicht gewünscht sein. Dafür kann optional die Checkbox für die Angabe eines Scopes (Geltungsbereich) aktiviert werden:\n\nWird nichts weiter angegeben, wird das Item im “Default”-Scope administriert. Alternativ kann ein Text definiert werde, wie in folgendem Beispiel zu sehen:\n\nBeim ersten Besuch wird der Task in dem Scope “Visit1” dargestellt. Danach folgt eine neue, unabhängige Darstellung des Tasks in einem anderen Scope (“Visit2”). Im dritten Aufruf wird der Task weder mit den Daten dargestellt, die beim ersten Besuch bereits gesammelt wurde (d.h. der Scope “Visit1” wird erneut verwendet).\n\n\n\n6.7.2.3 Anzeigen mehrerer Items (Itemlisten)\nWie im Beispiel für linearen Ablauf zu sehen, können lineare Tests auch über Listen von Tasks dargestellt werden.\nListen können mit dem Blockly-Operator Show Items verwendet werden:\n \n\nZurücknavigation: Das Show Items-Element für Listen kann über die Eigenschaft Can navigate back konfiguriert werden. Ist diese Eigenschaft ausgewählt, dann können CBA ItemBuilder-Tasks mit dem Command BACK_TASK eine Navigation zum vorherigen CBA ItemBuilder Tasks anfordern.\nAbbrechen von Listen: Die Verwendung von Listen erlaubt auch das Abbrechen von Listen. Listen können über zwei Wege abgebrochen werden:\n\nDas Command CANCEL_TASK, welches innerhalb von CBA ItemBuilder Tasks verwendet werden kann, wird aufgerufen.\nIm Testleitermenü, welches für die Studie konfiguriert und ggf. über den Blockly-Operator Testleitermenü bearbeiten angepasst wurde, wird die Funktion Itemliste abbrechen aufgerufen.\n\n\n\nDie Adminsitration einer Itemliste wird dadurch abgebrochen, und die Abarbeitung des Blockly-Ablaufs nach dem Show Items-Block fortgesetzt.\n\n\n\n\n6.7.2.4 Anzeige von Items mit Speicherung der Ergebnisse\nDie Operatoren Show Item (für einzelne Items) und Show Items (für Itemlisten) sind auch als Operatoren für Wertzuweisungen verfügbar:\n\nMit deren Hilfe lassen sich Ergebnisse der Itembearbeitung zu Variablen (String oder Array) zuweisen, und dann für die Ablaufsteuerng auswerten.\n\nEinzelner Task:\n\n\n\n\n\nListe von Tasks:\n\n\n\n\n\n\n\n6.7.2.5 Definition von Zeitbegrenzungen\nWie im Beispiel Ablauf mit Zeitbegrenzung bereits illustriert, kann mit dem Blockly-Block Start time with name die Zeitbegrenzte Administration von Items umgesetzt werden.\nDas Blockly-Element Start timer with name erlaubt die Definition von Zeitbegrenzungen. Jede Zeitbegrenzung kann einen eigenen Namen haben. Zusätzlich muss die Zeit in Sekunden angegeben werden. Darüber kann definiert werden, welche Art von Zeit verwendet werden soll:\n\n\nRealtime:\nServertime:\nSessiontime:\nClienttime:\n\nSchließlich können zwei Stellen mit weiteren Blockly-Operatoren (wie bspw. ein oder mehrere Show Item-Blöcke zum Anzeigen einzelner Items oder ein oder mehrere Show Items-Blöcke zum Anzeigen von Listen) gefüllt werden:\n\nRuntime code: Diese Blöcke werden ausgefüllt, bis die definierte Zeit abgelaufen ist.\nElapsed code: Diese Blöcke werden nur ausgefüllt, wenn der Runtime code nicht innerhalb der Zeit beendet wurde.\n\n\n\n\n6.7.2.6 Blockly-Operatoren für das Testleitermenü\nIn der Studiendefinition können Funktionen des Testleitermenüs für eine oder mehrere Rollen angelegt werden. Rollen stellen unterschiedliche Funktionen zusammen, die mit Hilfe des vom Testleiter einzugebenden Passworts unterschieden werden können.\nAnpassen von Standardfunktionen: Folgende Standardfunktionen können für eine Studie im Abschnitt Info / Testleitermenü definiert werden:\n\nNavigation: Aufgabe vor / Aufgabe zurück\nListen: Itemliste abbrechen\nBeenden: Erhebungsteil beenden und Session beenden\nLautstärkeregelung: Einstellen der Audiolautstärke während des Assessments\n\n\nWährend der Bearbeitung eines Erhebungsteils kann in der Ablaufsteuerung mit Hilfe des folgenden Blockly-Operators das Testleitermenü kontextspezifisch angepasst werden:\n\n\n\n\n\nDas Testleitermenüs kann für jede der Standardfunktionen (im Bereich Funktion) für eine Rolle (im Bereich Gruppe) sowohl die Beschriftung der Schaltfläche (im Bereich Label) geändert werden:\n\n\nHinzufügen: Funktion wird im Testleitermenü ergänzt\nEntfernen: Funktion wird aus dem Testleitermenü entfernt\nDeaktivieren: Funktion wird im Testleitermenü deaktiviert\nAktivieren: Funktion wird im Testleitermenü aktiviert\n\n\n\n\n\nDer Aufruf dieses Blockly-Operators im Testablauf definiert das Verhalten des Testleitermenüs im weiteren Testablauf. Im Unterschied zu Entfernen bleiben deaktivierte Funktionen im Testleitermenü sichtbar, können aber (bis sie wieder aktiviert werden) nich ausgeführt werden.\n\nVerwenden von Blockly-Funktionen im Testleitermenü: Der Blockly-Operator für das Bearbeiten des Testleitermenüs enthält im Abschnitt Funktion auch die Option zum Ausführen von Blockly-Code (ExecuteBockly):\n\n\n\n\nWenn als ExecuteBlockly ausgewählt ist, dann kann in dem Blockly-Element Testleitermenü bearbeiten eine innerhalb des Blockly-Editors definierte Funktionen ausgewählt werden. Die in dieser Funktion definierten Blockly-Operatoren werden dann ausgeführt, wenn ein Testleiter die entsprechende Schaltfläche zur Laufzeit im Testleitermenü auswählt.\n\n\n\n(nach oben)\n\n\n\n\n\n6.7.3 Fortgeschrittene Blockly-Verwendung\n\n\n6.7.3.1 Ablaufsteuerung mit Bedingungen\nDer Abschnitt Logic enthält den Blockly-Operator falls/mache, welcher zur Umsetzung von Bedingungen im Ablauf verwendet werden kann. Bedingungen sind logische Ausdrücke, bspw. die Prüfung ob eine Preload-Variable einen bestimmten Wert hat:\n\nNur wenn die Bedingung (falls) erfüllt ist, werden die Blocky-Operatoren ausgeführt, welche innerhalb des Bedingungsblocks definiert sind (d.h. neben mache). In dem Beispiel wird geprüft, ob eine boolsche Variable den Wert wahr hat.\nDie Bedingung wird dabei als separater Block definiert, die mit dem Blockly-Operator falls/mache verbunden ist. Hier die beiden Komponenten separat:\n\nBedingung:\n\n\n\n\n\nLogischer Ausdruck:\n\n\n\n\n\n\n\n6.7.3.2 Verwendung logischer Ausdrücke\nLogische Ausdtrücke in Bedingungen basieren entweder auf Wertevergleichen oder Rückgaben von Funktionen. Wertevergleiche können mit folgendem Blockly-Element realisiert werden:\n\nDie beiden Slots können mit Werten gefüllt werden. Für boolsche Werte (wahr/falsch) steht ein entsprechendes Blockly-Element im Abschnitt Logic bereit:\n\nBedingungen sind auch mit Variablen von anderem Datentyp möglich:\n\nFür numerische Werte gibt es ein entsprechendes Blockly-Element im Abschnitt Math, welcher Operatoren für Zahlen und einfache mathematische Operationen enthält:\n\nMit dessen Hilfe und einer numerischen Variable lässt sich folgende Bedingung formulieren:\nAus technischen Gründen kann es auch notwendig sein zu prüfen, ob eine Variable noch gar keinen Wert hat. Das kann durch Verwendung der Blockly-Komponente null umgesetzt werden:\n\nKombination von logischen Ausdrücken: Einzelne Bedingungen oder logische Ausdrücke können mit folgendem Blockly-Element aus dem Abschnitt Logik verbunden werden:\n\n\n\n\nDabei steht eine und sowie eine oder-Verknüpfung der Aussagen zur Auswahl. Die freien Eingänge\n\n\n\n\n\nMehrere logische Ausdrücke können in einander geschachtelt werden:\n\n\n\n\n\nHinweis: Für eine übersichtlichere Darstellung ist bei der äußeren und-Verknüpfung die externe Darstellung gewählt.\n\nMehrere Bedingungen (sonst falls / sonst): Durch Klick auf das kleine Zahnrad-Symbol eines Bedingungsblocks (falls/mache) kann dieser konfiguriert werden:\n\n\n\n\nDurch das Hinzufügen eines Abschnitts sonst falls können kann eine weitere Bedingung hinzugefügt werden. Die in einem sonst falls Abschnitt definierte Bedingung wird geprüft, wenn die vorherigen Bedingunge (falls) nicht erfüllt sind. Ist eine Bedingung erfüllt, werden die definierten Blockly-Operatoren ausgeführt.\n\n\nDurch das Hinzufügen eines Abschnitts sonst können Blöcke hinzugefügt werden, welche dann ausgeführt werden wenn keine der Bedingungen erfüllt ist.\n\nSpezialfall: prüfe-Operator für drei Bedingungen: Für drei Bedingungen stellt der Blockly-Editor eine speziellen Operator prüfe-falls wahr-falls falsch zur Verfügung:\n\n\n\n\nDer Operator kombiniert zwei logische Ausdrücke, z.B.:\n\n\n\n\n\nDas Konstrukt ist eine Kurzform für folgende Prüfung, wie sie in folgender Tabelle dargestellt ist:\n\n\n\n\nMyNumberVariable\nMyStringVariable\nMyBooleanVariable\nErgebnis\n\n\n\n\n\\(= 42\\)\n\\(=\\) Example\n(any)\ntrue\n\n\n\\(= 42\\)\n\\(\\neq\\) Example\n(any)\nfalse\n\n\n\\(\\neq 42\\)\n(any)\ntrue\ntrue\n\n\n\\(\\neq 42\\)\n(any)\nfalse\nfalse\n\n\n\n\nOhne den Operator für drei Bedingungen könnte die gleiche Prüfung mit folgender Kombination umgesetzt werden:\n\n\n\n\nNegation: Um einen logischen Ausdruck umzukehren (Negation) steht folgender Blockly-Operator zur Verfügung:\n\n\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.3 Ablaufsteuerung mit Schleifen\nDie mehrfache Ausführung von Blockly-Operatoren (und der damit darstellbaren Aktionen) ist mit Schleifen möglich. Der Abschnitt Loops der Palette enthält die dafür notwendigen Blockly-Elemente.\nWiederhole n-mal: Der folgende Blockly-Operator kann verwendet werden, um die Ausführung von Blöcke n-mal zu wiederholen:\n\n\n\nWiederhole solange: Schleifen können auch solange wiederholt werden bis eine Bedingung zutrifft (oder solange eine Bedingung zutrift):\n\n\n\n\nBeispiel:\n\n\n\n\nZähle von/bis: Schleife mit Hilfsvariablen:\n\n\n\n\nFür jeden Wert aus Liste: Schleife über alle Werte einer Liste:\n\n\n\nSchleifen vorzeitig abbrechen: Folgendes Blockly-Element kann genutzt werden, um eine Schleife (vorzeitig) abzubrechen oder um vorzeitig mit dem nächsten Schleifendurchlauf zu beginnen:\n\n\n\n\n\n\n6.7.3.4 Operatoren für Zahlen und einfache mathematische Funktionen\nDer Abschnitt Math der Palette enthält Blockly-Elemente zur Verwendung von Zahlen und einfachen mathematischen Funktionen.\nAusdrücke\n\nZahlen: Ganzzahlen / Dezimalzahlen\n\n\n\n\n\n\n\n\nSymbole: Spezielle Symbole oder Konstanten:\n\n\n\n\nBasale Funktionen\n\nAddition, Subtraktion, Multiplikation, Division und Potenzfunktion von zwei Argumenten:\n\n\n\n\n\nSchachtelung ist möglich, z.B.:\n\n\n\n\n\nDivision mit Rest:\n\n\n\n\n\nOb eien Zahl gerade ist, kann mit diesem Blockly-Element geprüft werden:\n\n\n\n\n\nMit dem folgenden Blockly-Element, kann eine Zahl auf einen Bereich begrenzt werden:\n\n\n\n\nEingebaute Funktionen\n\nTrigonometrische Funktionen:\n\n\n\n\n\nRunden von Werten:\n\n\n\n\n\nWeitere Funktionen:\n\n\n\n\nErzeugung von Zufallszahlen: Für die Erstellung von Zufallszahlen stehen zwei Blocky-Elemente zur Verfügung:\n\nGanzzahlen (in Wertebereich):\n\n\n\n\n\nZufallszahl zwischen \\(0\\) und \\(1\\):\n\n\n\n\nNumerische Funktionen für Listen: Vordefinierte Funktionen für Listen umfassen:\n\nHinweise:\n\nWeitere Funktionen lassen sich, wenn benötigt, mit Schleifen für Listen umsetzen.\nBei der Verwendung der Funktionen ist darauf zu achten, dass die ausgewählte Funktion für die Datentypen der List anwendbar ist.\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.5 Operatoren für Text und einfache String-Operationen\nDer Abschnitt Text der Palette enthält Blockly-Elemente zur Verwendung Zeichenketten.\nAusdrücke: Zum erstellen von Text steht folgender Operator zur Verfügung:\n\nVerketten: Verschiedene Operatoren können verwendet werden, um Text zusammenzufügen und zu Variablen zuzuweisen:\n\nEinen Text an eine Variable anfügen:\n\n\n\n\n\nTexte (und Variablenwerte) verketten und an andere Blockly-Operatoren weitergeben:\n\n\n\n\n\nZusammengefügten Texte eine Variable zuweisen:\n\n\n\n\nTextlänge: Die Länge einer Zeichenkette kann mit folgendem Blockly-Operator ermittelt werden:\n\nPrüfung auf leeren String: Leere String-Variablen können daran erkannt werden, dass die Anzahl der Zeichen \\(0\\) ist.\n\nAlternativ kann dafür auch der folgende Blockly-Operator verwendet werden:\n\nPosition in String finden: Ein Operator, der im Text (der per Variable oder als Ausdruck übergeben wird) das erste oder letzte Auftreten eines Begriffs sucht, kann wie folgt verwendet werden:\n\nZurückgegben wird dabei die Position des Begriffs innerhalb der Zeichenkette (d.h. im Text).\nTeilzeichenketten bilden: Der folgende Operator nimmt aus der übergebenen Zeichenkette im Text die ersten Buchstaben. Die Anzahl der Buchstaben wird dabei ebenfalls übergeben.\n\nBeispiel (hier wird, wenn die Option nimm ersten ausgewählt ist der Variable MyStringVariable der Text ABC, d.h. die ersten drei Buchstaben der Zeichenkette ABCDEFG) zugewiesen:\n\n\n\n\nBuchstaben aus einer Zeichenkette kann man auch mit folgendem Operator entnehmen, und bspw. einer Variablen zuweisen:\n\nBeispiel (hier können bspw. die Zeichen 3 bis 5 aus einer Zeichenkette entnommen werden):\n\n\n\n\nTexte Verändern: Vorhandene Texte (entweder als Ausdrücke oder aus Variablen vom Datentyp String) können durch die Anwendung von Operatoren verändert werden.\n\nFolgender Operator kann verwendet werden, um Text in Grossbuchstaben oder in Kleinbuchstaben umzuwandeln:\n\n\n\n\n\nFührende, abschließende oder führende und abschließende Leerzeichen können durch folgenden Operator entfernt werden:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.6 Operatoren für Zeiten und einfache Zeit-Operationen\nDer Abschnitt Date & Time der Palette enthält Blockly-Elemente zur Verwendung Zeiten innerhalb von Ablaufdefinitionen.\nFesthalten von Zeitpunkten: Variablen vom Datentyp DateTime können Zeitstempel zugewiesen werden.\nErmitteln von Zeitdifferenzen: Vollständiges Beispiel: Folgender Blockly-Code misst die Zeit für die Bearbeitung von Task 1 bis 4. Dafür wird zunächst der Startzeitpunkt fegesthalten, und nach der Bearbeitung der Aufgaben wird die Zeitdifferenz ermittelt und in Sekunden umgewandelt:\n\n\n\nUmrechen von Zeitmaßen\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.7 Operatoren für Listen\nDer Abschnitt Lists der Palette enthält Blockly-Elemente zur Erstellung und Verwendung von Listen.\nListe erstellen: Es stehen verschiedene Optionen zur Verügung, wie Listen erstellt werden können.\n\nListen können aus besehenden Elementen erstellt werden:\n\n\n\n\n\nDie Anzahl der Elemente des Operators erzeuge Liste mit kann per Drag-and-Drop konfiguriert werden, nachdem Zahnrad-Symbol angeklickt wurde:\n\n\n\n\n\nListe können durch Wiederholung eines Elements erstellt werden:\n\n\n\n\nVerbinden von Listen: Bestehende Listen können zusammengeführt werden mit folgenden Operator:\n\n\n\nTeillisten: Aus Listen kann mit folgendem Operator eine Teilliste ausgewählt werden:\n\n\n\n\nWeitere Optionen des Operators für bis: bis von hinten und bis letztes.\n\nEigenschaften von Listen: Folgende Operatoren stehen zur Verfügung um Eigenschaften einer Liste abzufragen:\n\nFolgender Operator gibt wahr zurück, wenn die verbundene Liste leer ist:\n\n\n\n\n\nFolgender Operator gibt die Länge der Liste zurück:\n\n\n\n\n\nFolgender Operator gibt die distinkte Elemente einer Liste zurück\n\n\n\n\nSuchen und Ersetzen: Folgende Operatoren stehen zum Suchen und Ersetzen von Elementen in Listen zur Verfügung:\n\nFolgender Operator findent Elemente in Listen:\n\n\n\n\n\nFolgender Operator gibt / entfernt oder ersetzt in einer Liste und gibt das ELement zurück:\n\n\n\n\n\nWeitere Optionen des Operators für das: von hinten das / Erste / Letzte und Zufällig.\n\n\nFolgender Operator ersetzt under fügt in einer Liste ein:\n\n\n\n\n\nWeitere Optionen des Operators für das: von hinten das / Erste / Letzte und Zufällig.\n\nUmwandlung von Listen und Text: Liste und Text können über Trennzeichen umgewandelt werden.\n\nFolgender Operator erstellt einen Text aus einer Liste oder eine Liste aus einem Text:\n\n\n\n\nListen Sortieren: Elemente in Listen können auch sortiert werden.\n\nFolgender Operator gibt die distinkte Elemente einer Liste zurück:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.8 Blockly-Variablen\nDer Abschnitt Variables der Palette enthält Blockly-Elemente zur Erstellung und Verwendung von Variablen.\nVariable Erstellen: Um eine Blockly-Variable zu erstellen enthält die Palette die Typisierte Variable Erstellen:\n\n\n\n\nBlockly-Variablen haben immer einen Variablennamen und Datentyp:\n\n\n\n\n\nEinfache Datentypen und Wertzuweisungen: Folgende basale Datentypen werden unterstützt:\n\nBoolean: Logische Wahrheitswerte und Logische Ausdrücke (wahr oder falsch)\n\n\n\n\n\nNumber: Datentyp für Zahlenwerte (mit und ohne Dezimalstelle)\n\n\n\n\n\nString: Textwerte bzw. Zeichenketten\n\n\n\n\n\nFür Zeiten werden folgende Datentypen bereitgestellt:\n\n\nDateTime: Datum und Uhrzeit\n\n\n\n\n\nTimeSpan: Zeitspanne\n\n\n\n\nDatentypen für mehrere Werte: Neben den basalen Datentypen werden auch Datentypen für mehrere Werte unterstützt:\n\nArray: Datentyp für Listen\n\n\n\n\n\nDictionary: (Dokumentation fehlt)\nKeyTypedValuePairs: (Dokumentation fehlt)\n\nVariablenwerte Verwenden: Für die Verwendung von Variablenwerten, können Blockly-Elemente mit Eingängen folgende Komponente aufnehmen:\n\n\n\n\nWelche Variable verwendet wird, kann dabei ausgewählt werden. Für defnierte Variablen findet sich dafür jeweils auch ein Blockly-Element im Abschnitt Variables der Palette:\n\n\n\n\n\nIn der Palette findet sich auch ein Blockly-Element vom Typ setze … auf. In diesem kann ebenfalls ausgewählt werden, den Wert welcher Variable es setzt:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.9 Blockly-Funktionen\nDer Abschnitt Functions der Palette enthält Blockly-Elemente zur Verwendung von Funktionen innerhalb von Ablaufdefinitionen. Funktionen kombinieren Blocky-Code, so dass dieser nur einmal definiert aber mehrfach verwendet werden kann.\nDefinieren von Funktionen: Es können zwei verschiede Formen von Funktionen definiert werden.\n\nFunktionen ohne Rückgabewert:\n\n\n\n\n\nFunktionen ohne Rückgabewert können, damit sie augerufen werden, im Ablauf einfach mit vorherigen und nachfolgenden Blockly-Elementen verbunden werden (d.h. sie haben eine Verbindung nach oben und unten):\n\n\n\n\n\nFunktionen mit Rückgabewert:\n\n\n\n\n\nFunktionen mit Rückgabewert können in einem Zuweisungs-Block aufgerufen werden (d.h. sie haben eine Verbindung nach links):\n\n\n\n\nZu welchem Typ eine Zuweisung sinnvoll ist, hängt von dem Typ des Rückgabewerts ab.\nDefinieren von Rückgabewerten von Funktionen: Funktionen werden durch speziellen Blockly-Elemente definiert, die an einer beliebigen Stelle im Code-Editor eingefügt werden können.\n\nRückgabewerte können für Funktionen mit Rückgabewert definiert werden. Der Rückgabewert kann direkt an die Funktionsdefinition neben gib zurück angefügt werden:\n\n\n\n\nErgänzend stehen die folgenden zwei Blockly-Elemente zur Verfügung, die nur innerhalb einer Funktiondefintion (mit Rückgabewert) verwendet werden können:\n\nDer Operator gib zurück erlaubt die Rückgabe eines Wertes. Danach können innerhalb der Funktion keine weiteren Blockly-Element in den Ablauf platziert werden (d.h. der gib zurück-Operator hat keine Verbindung nach unten):\n\n\n\n\n\nDer Operator falls gib zurück Operator gibt eine Wert nur dann zurück, wenn eine Bedingungen erfüllt ist. Ist die Bedingung erfüllt, endet die Abarbeitung des Ablaufs in der Funktion, ist die Bedingung nicht erfüllt, wird die Bearbeitung fortgesetzt (d.h. der falls gib zurück-Operator hat eine Verbindung nach unten):\n\n\n\n\n\nDer falls gib zurück Operator ist also identisch mit folgender Kombination von Operatoren:\n\n\n\n\n\nBeide Operatoren (falls gibt zurück und gib zurück) können nicht außerhalb von Funktionen verwendet werden:\n\n\n\n\n\nDie beide Operatoren (falls gibt zurück und gib zurück) können innerhalb von Funktionen ohne Rückgabewert verwendet werden, um die Abarbeitung von Funktionen zu beenden (aber nicht zum Rückgeben von Werten):\n\n\n\n\nBeispiel:\n\nDie folgende Funktion gibt den Wert der Variablen MyStringVariable (Any value 1) in 50% der Fälle zurück (d.h. wenn eine erste gezogene Zufallsvariable größer \\(0.5\\) ist). In den anderen 50% der Fälle, wird eine weitere Zufallsvariable gezogen, und wenn diese größer \\(0.5\\) ist, dann wird der Text Any value 2 zurückgegeben. Ist auch dies nicht der Fall, dann wird der Text Default zurückgebeben:\n\n\n\n\nRückgabewerte sind typisiert. Die Ablaufsteuerung unterstützt auch Funktionen, die …\n\n… einzelne Tasks zurückgeben:\n\n\n\n\n\n… Listen von Tasks zurückgeben:\n\n\n\n\nDefinieren von Aufrufparametern von Funktionen: Funktionen können auch Parameter verwenden, die beim Aufruf der Funktion zu übergeben sind (Aufrufparametern). Die Defintion von Aufrufparametern ist nach einem Klick auf das kleine Zahnrad-Symbol eines Funktions-Blocks möglich:\n\nPassend zur Definition der Parameter, erfolgt dann der Aufruf der Funktion durch Übergabe:\n\nDefinition eines Parameters\n\n\n\n\n\nAufruf der Funktion mit Angabe von Wert:\n\n\n\n\nBeispiel:\n\nDas folgende Beispiel zeigt eine Funktion mit zwei Parameter, deren Verwendung innerhalb der Funktion am Beispiel von Bedingungen und den Aufruf der Funktion mit festen Werten:\n\n\n\n\n\nAlternativ kann die Funktion natürlich auch mit Variablen aufgerufen werden:\n\n\n\n\n\n\n(nach oben)\n\n\n\n\n6.7.3.10 Nutzung von Itemergebnissen in der Ablaufsteuerung\n(Dokumentation)\n\n\n(nach oben)\n\n\n\n\n6.7.3.11 Blockly-Operatoren zum Kodieren fehlender Werte\n(Dokumentation folgt)\n\n\n(nach oben)\n\n\n\n\n6.7.3.12 Blockly-Operatoren zum schreiben von Daten\n(Dokumentation folgt)\nLog-Daten: Folgender Operator kann genutzt werden, um Informationen direkt in die Log-Daten zu speichern:\n\nErgebnis-Daten: (Dokumentation folgt)\nMonitoring-Daten: (Dokumentation folgt)\n\n\n(nach oben)\n\n\n\n\n\n6.7.4 Kommentieren von Blockly-Code\nDer IRTLib Editor unterstützt zwei verschiedene Optionen zur Kommentierung von Blockly-Code.\n\n6.7.4.1 Kommentare als Blockly-Elemente\nKommentare, die im Ablauf dauerhaft sichtbar sein sollen, können über die Plaette im Abschnitt Development hinzugefügt werden:\n\nDiese Kommentare können wie Blocky-Operatoren verschoben werden und zeigen einzeiligen Kommentartext.\n\n\n\n6.7.4.2 Ausführliche Kommentare an Blockly-Elementen\nFür ausführlichere Kommentare kann über das Kontextmenü jeder Block mit einem Kommentar hinzugefügt (und wenn vorhanden gelöscht) werden:\n\nDiese Kommentare können mehrere Zeilen umfassen und werden dargestellt, wenn auf das kleine ?-icon eines Blocks geklickt wurde.\n\n\n\n(nach oben)\n\n\n\n\n\n6.7.5 Darstellung von Blockly-Code\n\n\n6.7.5.1 Entfalten / Zusammenfalten\nGroße und komplexe Abläufe können im Blockly-Editor unter Umständen unübersichtlich werden. Um für eine Betrachtung nicht benötigte Blockly-Elemente auszublenden, ohne die Funktion des Ablaufdefinition zu veränern, können Blöcke zusammengefaltet werden:\nDas wird in folgendem Beispiel illustriert:\n\nEntfaltete (d.h. vollständige) Darstellung des markierten Blocks:\n\n\n\n\n\nOption zum zusammenfalten des Blocks im Kontextmenü:\n\n\n\n\n\nZusammengefaltete Darstellung des Blocks innerhalb der Ablaufdefinition:\n\n\n\n\n\nOption zum entfalten des Blocks im Kontextmenü:\n\n\n\n\nDas zusammenfalten / entfalten von Blockly-Elementen ändert nichts an der Funktion einer Ablaufdefinition und dient nur der übersichtlicheren Anordnung von komplexen Ablaufdefinitionen.\n\n\n\n6.7.5.2 Deaktivieren / Aktivieren\nDer Blockly-Editer bietet die Option, Blockly-Element statt sie zu Löschen nur zu deaktivieren. Deaktivierte Blockly-Elemente bleiben in der Ablaufdefinition enthalten, werden aber nicht ausgeführt.\nIn folgendem Beispiel ist der Block zum Anzeigen des Tasks 3 deaktiviert, d.h. es werden nur Task 1, 2 und 4 angezeigt:\n\nAktivieren bzw. Deaktivieren von Blockly-Elementen erfolgt über das Kontextmenü:\n\n\nInternal / External: Einige Blockly-Elemente mit Eingängen (d.h. Stellen, an denen man weitere Blöcke verbinde kann) erlauben zwischen zwei Darstellungsformen zu wechseln.\n\nInternal: Die Eingänge sind innerhalb der Blöcke angeordnet.\n\n\n\n\n\nExnternal: Die Eingänge sind an der Seite der Blöcke angeordnet.\n\n\n\n\n\nBeide Darstellungsformen sind bzgl. der Funktionalität äquivalent.\n\n\nAufräumen: Im Kontextmenü des Blockly-Editors, welches durch Klick in einen leeren Bereich geöffnet werden kann, ist die Funktion Bausteine aufräumen enthalten:\n\nDurch Aufruf von Bausteine aufäumen werden alle Blockly-Elemente im Blockly-Editor vertikal untereinander ausgerichtet.\n\n\n(nach oben)"
  },
  {
    "objectID": "preparation-parts.html#routing-zwischen-erhebungsteilen-1",
    "href": "preparation-parts.html#routing-zwischen-erhebungsteilen-1",
    "title": "5  Vorbereitung: Erhebungsteile",
    "section": "6.8 Routing zwischen Erhebungsteilen",
    "text": "6.8 Routing zwischen Erhebungsteilen\nWenn mehrere Erhebungsteile für eine Studie definiert sind kann die Abfolge von Erhebungsteilen definiert werden, in welcher Befragte oder Testpersonen die Inhalte der Erhebungsteile präsentiert bekommen.\nNeben einfachen linearen Abläufen können Abläufe von mehreren Erhebungsteilen auch mit eine Blockly-basierten Routing konfiguriert werden.\nEine detaillierte Beschreibung zum Routing zwischen Erhebungsteilen findet sich hier in der eingebetteten Hilfe:\n\n\n\n\n\n\nEingebettete Programmhilfe\n\n\n\n\n\n6.8.1 Zusammenfassung zu Routing zwischen Erhebungsteilen\nDie Reihenfolge von Erhebungsteilen kann mit Hilfe von Blockly definiert werden (analog zur Definition der Reihenfolge von Items innerhalb von Erhebungsteilen). Diese Option ist verfügbar, wenn in der Grundkonfiguration zu einer Studie (in der Ansicht Übersicht) die Option Routing für Erhebungsteile aktivieren gewählt ist.\nFür die allgemeinen Grundlagen zur Verwendung von Blockly im IRTlib Editor siehe die Hilfe zum Routing innerhalb von Erhebungsteilen.\nFunktionen die nur im Routing zwischen Erhebungsteilen zur Verfügung stehen sind:\n\nErhebungsteil Anzeigen\n\n\n\n\n\nDieser Blockly-Operator ersetzt das Show Item innerhalb von Erhebungsteilen.\n\n\nErfolgreiches Login\n\n\n\n\n\nDieser Blockly-Operator hat den Wert wahr, wenn vor der Anzahl der maximalen Versuche (hier: unendlich, d.h. unbegrenzt hoft) gültige Login-Informationen angegeben wurden.\n\nHinweis: Änderungen an der Sicht Routing zwischen Erhebungsteilen müssen über das Disketten-Symbol gespeichert oder mit dem Rückgängig-Symbol verwerfen werden:"
  }
]